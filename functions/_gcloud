#compdef gcloud
#
# AUTOGENERATED BY gcloud-zsh-complete - DO NOT EDIT
#

_gcloud() {
    local curcontext=$curcontext state line
    typeset -A opt_args

    _arguments -C -s \
        '1: :_gcloud_command_dispatcher' \
        '2: :_gcloud_command_dispatcher' \
        '3: :_gcloud_command_dispatcher' \
        '4: :_gcloud_command_dispatcher' \
        '5: :_gcloud_command_dispatcher' \
        '6: :_gcloud_command_dispatcher' \
        '7: :_gcloud_command_dispatcher' \
        '*:: :_gcloud_command_dispatcher'
}
_gcloud_command_dispatcher() {
    local key='gcloud'
    if (( CURRENT > 1 )); then
        key=${(j: :)words[1,CURRENT-1]}
    fi
    _gcloud_dispatch "$key"
}

_gcloud_dispatch() {
    local key="$1"
    case "$key" in
        'gcloud')
            local -a commands
            commands=(
                'access-approval:Manage Access Approval requests and settings.'
                'access-context-manager:Manage Access Context Manager resources.'
                'active-directory:Manage Managed Microsoft AD resources.'
                'ai:Manage entities in Vertex AI.'
                'ai-platform:Manage AI Platform jobs and models.'
                'alloydb:Create and manage AlloyDB databases.'
                'anthos:Anthos command Group.'
                'api-gateway:Manage Cloud API Gateway resources.'
                'apigee:Manage Apigee resources.'
                'app:Manage your App Engine deployments.'
                'apphub:Manage App Hub resources.'
                'artifacts:Manage Artifact Registry resources.'
                'asset:Manage the Cloud Asset Inventory.'
                'assured:Read and manipulate Assured Workloads data controls.'
                'audit-manager:Enroll resources, audit workloads and generate reports.'
                'auth:Manage oauth2 credentials for the Google Cloud CLI.'
                'authz-toolkit:Manage Authorization Toolkit resources.'
                'backup-dr:Manage Backup and DR resources.'
                'batch:Manage Batch resources.'
                'bigtable:Manage your Cloud Bigtable storage.'
                'billing:Manage billing accounts and associate them with projects.'
                'bms:Manage Bare Metal Solution resources.'
                'bq:Manage Bq resources.'
                'builds:Create and manage builds for Google Cloud Build.'
                'certificate-manager:Manage SSL certificates for your Google Cloud projects.'
                'cheat-sheet:Display gcloud cheat sheet.'
                'cloud-shell:Manage Google Cloud Shell.'
                'cloudlocationfinder:Manage Cloudlocationfinder resources.'
                'colab:Manage Colab Enterprise resources.'
                'components:List, install, update, or remove Google Cloud CLI components.'
                'composer:Create and manage Cloud Composer Environments.'
                'compute:Create and manipulate Compute Engine resources.'
                'config:View and edit Google Cloud CLI properties.'
                'container:Deploy and manage clusters of machines for running containers.'
                'data-catalog:Manage Data Catalog resources.'
                'database-migration:Manage Database Migration Service resources.'
                'dataflow:Manage Google Cloud Dataflow resources.'
                'dataplex:Manage Dataplex resources.'
                'dataproc:Create and manage Google Cloud Dataproc clusters and jobs.'
                'dataproc-gdc:Manage Dataproc Gdc resources.'
                'datastore:Manage your Cloud Datastore resources.'
                'datastream:Manage Cloud Datastream resources.'
                'deploy:Create and manage Cloud Deploy resources.'
                'deployment-manager:Manage deployments of cloud resources.'
                'developer-connect:Manage Developer Connect resources.'
                'dns:Manage your Cloud DNS managed-zones and record-sets.'
                'docker:\(DEPRECATED\)  Enable Docker CLI access to Google Container Registry.'
                'domains:Manage domains for your Google Cloud projects.'
                'edge-cache:Manage Media CDN resources.'
                'edge-cloud:Manage edge-cloud resources.'
                'emulators:Set up your local development environment using emulators.'
                'endpoints:Create, enable and manage API services.'
                'essential-contacts:Manage Essential Contacts.'
                'eventarc:Manage Eventarc resources.'
                'feedback:Provide feedback to the Google Cloud CLI team.'
                'filestore:Create and manipulate Filestore resources.'
                'firebase:Work with Google Firebase.'
                'firestore:Manage your Cloud Firestore resources.'
                'functions:Manage Google Cloud Functions.'
                'gemini:Manage resources associated with Gemini Code Assist and Gemini Cloud Assist.'
                'healthcare:Manage Cloud Healthcare resources.'
                'help:Search gcloud help text.'
                'iam:Manage IAM service accounts and keys.'
                'iap:Manage IAP policies.'
                'identity:Manage Cloud Identity Groups and Memberships resources.'
                'ids:Manage Cloud IDS.'
                'immersive-stream:Manage Immersive Stream resources.'
                'info:Display information about the current gcloud environment.'
                'infra-manager:Manage Infra Manager resources.'
                'init:Initialize or reinitialize gcloud.'
                'kms:Manage cryptographic keys in the cloud.'
                'logging:Manage Cloud Logging.'
                'looker:Manage Looker resources.'
                'lustre:Manage Lustre resources.'
                'managed-kafka:Administer Managed Service for Apache Kafka clusters, topics, and consumer groups.'
                'memcache:Manage Cloud Memorystore Memcached resources.'
                'memorystore:Manage Memorystore resources.'
                'meta:Cloud meta introspection commands.'
                'metastore:Manage Dataproc Metastore resources.'
                'migration:The root group for various Cloud Migration teams.'
                'ml:Use Google Cloud machine learning capabilities.'
                'model-armor:Model Armor is a service offering LLM-agnostic security and AI safety measures to mitigate risks associated with large language models \(LLMs\).'
                'monitoring:Manage Cloud Monitoring dashboards.'
                'netapp:Create and manipulate Cloud NetApp Files resources.'
                'network-connectivity:Manage Network Connectivity resources.'
                'network-management:Manage Network Management resources.'
                'network-security:Manage Network Security resources.'
                'network-services:Manage Network Services resources.'
                'notebooks:Notebooks Command Group.'
                'observability:Manage Observability resources.'
                'oracle-database:Manage Oracle Database resources.'
                'org-policies:Create and manage Organization Policies.'
                'organizations:Create and manage Google Cloud Platform Organizations.'
                'orglifecycle:Manage Org Lifecycle resources.'
                'pam:Manage Privileged Access Manager \(PAM\) entitlements and grants.'
                'parallelstore:Manage Parallelstore resources.'
                'parametermanager:Parameter Manager is a single source of truth to store, access and manage the lifecycle of your application parameters.'
                'policy-intelligence:A platform to help better understand, use, and manage policies at scale.'
                'policy-troubleshoot:Troubleshoot Google Cloud Platform policies.'
                'privateca:Manage private Certificate Authorities on Google Cloud.'
                'projects:Create and manage project access policies.'
                'publicca:Manage accounts for Google Trust Services'\'' Certificate Authority.'
                'pubsub:Manage Cloud Pub/Sub topics, subscriptions, and snapshots.'
                'recaptcha:Manage reCAPTCHA Enterprise Keys.'
                'recommender:Manage Cloud recommendations and recommendation rules.'
                'redis:Manage Cloud Memorystore Redis resources.'
                'resource-manager:Manage Cloud Resources.'
                'run:Manage your Cloud Run applications.'
                'scc:Manage Cloud SCC resources.'
                'scheduler:Manage Cloud Scheduler jobs and schedules.'
                'secrets:Manage secrets on Google Cloud.'
                'service-directory:Command groups for Service Directory.'
                'service-extensions:Manage Service Extensions resources.'
                'services:List, enable and disable APIs and services.'
                'source:Cloud git repository commands.'
                'source-manager:Manage Secure Source Manager resources.'
                'spanner:Command groups for Cloud Spanner.'
                'sql:Create and manage Google Cloud SQL databases.'
                'storage:Create and manage Cloud Storage buckets and objects.'
                'survey:Invoke a customer satisfaction survey for Google Cloud CLI.'
                'tasks:Manage Cloud Tasks queues and tasks.'
                'telco-automation:Manage Telco Automation resources.'
                'topic:gcloud supplementary help.'
                'transcoder:Manage Transcoder jobs and job templates.'
                'transfer:Manage Transfer Service jobs, operations, and agents.'
                'unlock:Unlock secrets and surprises coming soon to Google Cloud.'
                'version:Print version information for Google Cloud CLI components.'
                'vmware:Manage Google Cloud VMware Engine resources.'
                'workbench:Workbench Command Group.'
                'workflows:Manage your Cloud Workflows resources.'
                'workspace-add-ons:Manage Google Workspace Add-ons resources.'
                'workstations:Manage Cloud Workstations resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-approval')
            local -a commands
            commands=(
                'requests:Manage Access Approval requests.'
                'service-account:Manage Access Approval service account.'
                'settings:Manage Access Approval settings.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-approval requests')
            local -a commands
            commands=(
                'approve:Approve an Access Approval request.'
                'dismiss:Dismiss an Access Approval request.'
                'get:Get an Access Approval request.'
                'invalidate:Invalidate an Access Approval request.'
                'list:List Access Approval requests.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-approval service-account')
            local -a commands
            commands=(
                'get:Get Access Approval service account.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-approval settings')
            local -a commands
            commands=(
                'delete:Delete Access Approval settings.'
                'get:Get Access Approval settings.'
                'update:Update Access Approval settings.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager')
            local -a commands
            commands=(
                'authorized-orgs:Manage Access Context Manager authorized organizations descriptions.'
                'cloud-bindings:Manage Access Context Manager cloud access bindings.'
                'levels:Manage Access Context Manager levels.'
                'perimeters:Manage Access Context Manager service perimeters.'
                'policies:Manage Access Context Manager policies.'
                'supported-services:Retrieve VPC Service Controls Supported Services.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager authorized-orgs')
            local -a commands
            commands=(
                'create:Create a new authorized organizations description.'
                'delete:Delete an authorized organizations description.'
                'describe:Show details about an authorized organizations description.'
                'list:List authorized organizations descriptions.'
                'update:Update the organizations for an existing authorized organizations description.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager cloud-bindings')
            local -a commands
            commands=(
                'create:Create cloud access bindings for a specific group.'
                'delete:Delete a cloud access binding.'
                'describe:Show details about a cloud access binding.'
                'list:List cloud access bindings under an organization.'
                'update:Update a existing cloud access binding under an organization.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager levels')
            local -a commands
            commands=(
                'conditions:Manage Access Context Manager level conditions.'
                'create:Create a new access level.'
                'delete:Delete an access level.'
                'describe:Show details about an access level.'
                'list:List access levels.'
                'replace-all:Replace all existing access levels.'
                'update:Update an existing access level.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager levels conditions')
            local -a commands
            commands=(
                'list:List conditions for an access level.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager perimeters')
            local -a commands
            commands=(
                'create:Create a new service perimeter.'
                'delete:Delete a service perimeter.'
                'describe:Show details about a service perimeter.'
                'dry-run:Enable management of dry-run mode configuration for Service Perimeters.'
                'list:List service perimeters.'
                'replace-all:Replace all existing service perimeters.'
                'update:Update the enforced configuration for an existing Service Perimeter.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager perimeters dry-run')
            local -a commands
            commands=(
                'create:Create a dry-run mode configuration for a new or existing Service         Perimeter.'
                'delete:Mark the Service Perimeter as deleted in the dry-run mode.'
                'describe:Display the dry-run mode configuration for a Service Perimeter.'
                'drop:Reset the dry-run mode configuration of a Service Perimeter.'
                'enforce:Enforces a Service Perimeter'\''s dry-run configuration.'
                'enforce-all:Enforces the dry-run mode configuration for all Service Perimeters.'
                'list:List the effective dry-run configuration across all Service Perimeters.'
                'update:Update the dry-run mode configuration for a Service Perimeter.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager policies')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for an access policy.'
                'create:Create a new access policy.'
                'delete:Delete an access policy.'
                'describe:Show details about an access policy.'
                'get-iam-policy:Get the IAM policy for an access policy.'
                'list:List access policies.'
                'remove-iam-policy-binding:Remove IAM policy binding for an access policy.'
                'set-iam-policy:Set IAM policy for an access policy.'
                'update:Update an existing access policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud access-context-manager supported-services')
            local -a commands
            commands=(
                'describe:Gets information about a VPC Service Controls Supported Service.'
                'list:Lists all VPC Service Controls supported services.'
            )
            _describe 'command' commands
            ;;
        'gcloud active-directory')
            local -a commands
            commands=(
                'domains:Manage Managed Microsoft AD domains.'
                'operations:Manage Managed Microsoft AD operations.'
                'peerings:Managed Microsoft AD peerings.'
            )
            _describe 'command' commands
            ;;
        'gcloud active-directory domains')
            local -a commands
            commands=(
                'backups:Managed Microsoft AD Backups.'
                'create:Create a Managed Microsoft AD domain.'
                'delete:Delete a managed Microsoft Active Directory domain.'
                'describe:Describe a Managed Microsoft AD domain.'
                'describe-ldaps-settings:Describe the LDAPS settings of a Managed Microsoft AD domain.'
                'extend-schema:Initiate schema extension for a Managed Microsoft AD domain.'
                'get-iam-policy:Describe the IAM policy for a Managed Microsoft AD domain.'
                'list:List Managed Microsoft AD domains.'
                'reset-admin-password:Reset the admin password for a Managed Microsoft AD domain.'
                'restore:Restore a domain from the specified backup.'
                'set-iam-policy:Set the IAM policy for a Managed Microsoft AD domain.'
                'trusts:Manage Managed Microsoft AD domains.'
                'update:Update a Managed Microsoft AD domain.'
                'update-ldaps-settings:Update the LDAPS settings for a domain.'
            )
            _describe 'command' commands
            ;;
        'gcloud active-directory domains backups')
            local -a commands
            commands=(
                'create:Create a Managed Microsoft AD domain backup.'
                'delete:Delete a Managed Microsoft AD domain backup.'
                'describe:Describe a Managed Microsoft AD domain backup.'
                'list:List all Managed Microsoft AD domain backups.'
                'update:Update a Managed Microsoft AD domain backup.'
            )
            _describe 'command' commands
            ;;
        'gcloud active-directory domains trusts')
            local -a commands
            commands=(
                'create:Create a Microsoft Active Directory Trust between a Managed Microsoft AD domain and another domain.'
                'delete:Delete an Active Directory Trust between a Managed Microsoft AD domain and a target domain.'
                'update:Update target DNS IP addresses for a Managed Microsoft AD trust.'
                'validate-state:Validate the state of a Managed Microsoft AD trust.'
            )
            _describe 'command' commands
            ;;
        'gcloud active-directory operations')
            local -a commands
            commands=(
                'cancel:Cancel a Managed Microsoft AD operation.'
                'describe:Describe a Managed Microsoft AD operation.'
                'list:List Managed Microsoft AD operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud active-directory peerings')
            local -a commands
            commands=(
                'create:Create a Managed Microsoft Active Directory domain peering.'
                'delete:Delete a Managed Microsoft Active Directory domain peering.'
                'describe:Describe a Managed Microsoft Active Directory domain peering.'
                'list:List all Managed Microsoft Active Directory domain peerings.'
                'update:Update a Managed Microsoft Active Directory domain peering.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai')
            local -a commands
            commands=(
                'custom-jobs:Manage Vertex AI custom jobs.'
                'endpoints:Manage Vertex AI endpoints.'
                'hp-tuning-jobs:Manage Vertex AI hyperparameter tuning jobs.'
                'index-endpoints:Manage Vertex AI index endpoints.'
                'indexes:Manage Vertex AI indexes.'
                'model-garden:Interact with and manage resources in Vertex Model Garden.'
                'model-monitoring-jobs:Manage Vertex AI model monitoring jobs.'
                'models:Manage Vertex AI models.'
                'operations:Manage Vertex AI operations.'
                'persistent-resources:Create and manage Vertex AI persistent resources.'
                'tensorboards:Manage Vertex AI Tensorboards.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai custom-jobs')
            local -a commands
            commands=(
                'cancel:Cancel a running custom job.'
                'create:Create a new custom job.'
                'describe:Get detailed information about the custom job by given id.'
                'list:Lists the existing custom jobs.'
                'local-run:Run a custom training locally.'
                'stream-logs:Show stream logs from a running custom job.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai endpoints')
            local -a commands
            commands=(
                'create:Create a new Vertex AI endpoint.'
                'delete:Delete an existing Vertex AI endpoint.'
                'deploy-model:Deploy a model to an existing Vertex AI endpoint.'
                'describe:Describe an existing Vertex AI endpoint.'
                'direct-predict:Run Vertex AI online direct prediction.'
                'direct-raw-predict:Run Vertex AI online direct raw prediction.'
                'explain:Request an online explanation from an Vertex AI endpoint.'
                'list:List existing Vertex AI endpoints.'
                'predict:Run Vertex AI online prediction.'
                'raw-predict:Run Vertex AI online raw prediction.'
                'stream-direct-predict:Run Vertex AI online stream direct prediction.'
                'stream-direct-raw-predict:Run Vertex AI online stream direct raw prediction.'
                'stream-raw-predict:Run Vertex AI online stream raw prediction.'
                'undeploy-model:Undeploy a model from an existing Vertex AI endpoint.'
                'update:Update an existing Vertex AI endpoint.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai hp-tuning-jobs')
            local -a commands
            commands=(
                'cancel:Cancel a running hyperparameter tuning job.'
                'create:Create a hyperparameter tuning job.'
                'describe:Get detail information about the hyperparameter tuning job by given id.'
                'list:List existing hyperparameter tuning jobs.'
                'stream-logs:Stream logs from a running Vertex AI hyperparameter tuning job.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai index-endpoints')
            local -a commands
            commands=(
                'create:Create a new Vertex AI index endpoint.'
                'delete:Delete an existing Vertex AI index endpoint.'
                'deploy-index:Deploy an index to a Vertex AI index endpoint.'
                'describe:Gets detailed index endpoint information about the given index endpoint id.'
                'list:Lists the index endpoints of the given project and region.'
                'mutate-deployed-index:Mutate an existing deployed index from a Vertex AI index endpoint.'
                'undeploy-index:Undeploy an index from a Vertex AI index endpoint.'
                'update:Update an Vertex AI index endpoint.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai indexes')
            local -a commands
            commands=(
                'create:Create a new Vertex AI index.'
                'delete:Delete an existing Vertex AI index.'
                'describe:Gets detailed index information about the given index id.'
                'list:Lists the indexes of the given project and region.'
                'remove-datapoints:Remove data points from the specified index.'
                'update:Update an Vertex AI index.'
                'upsert-datapoints:Upsert data points into the specified index.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai model-garden')
            local -a commands
            commands=(
                'models:List and use Model Garden models.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai model-garden models')
            local -a commands
            commands=(
                'deploy:Deploy a model in Model Garden to a Vertex AI endpoint.'
                'list:List the publisher models in Model Garden.'
                'list-deployment-config:List the machine specifications supported by and verified for a model in Model Garden.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai model-monitoring-jobs')
            local -a commands
            commands=(
                'create:Create a new Vertex AI model monitoring job.'
                'delete:Delete an existing Vertex AI model deployment monitoring job.'
                'describe:Get detailed model deployment monitoring job information about the given job id.'
                'list:List the model deployment monitoring jobs of the given project and region.'
                'pause:Pause a running Vertex AI model deployment monitoring job.'
                'resume:Resume a paused Vertex AI model deployment monitoring job.'
                'update:Update an Vertex AI model deployment monitoring job.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai models')
            local -a commands
            commands=(
                'copy:Copy a model.'
                'delete:Delete an existing Vertex AI model.'
                'delete-version:Delete an existing Vertex AI model version.'
                'describe:Get detailed model information about the given model id.'
                'list:List the models of the given project and region.'
                'list-version:List the model versions of the given region and model.'
                'upload:Upload a new model.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai operations')
            local -a commands
            commands=(
                'describe:Gets detailed index information about the given operation id.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai persistent-resources')
            local -a commands
            commands=(
                'create:Create a new persistent resource.'
                'delete:Delete an active Persistent Resource.'
                'describe:Get detailed information about a PersistentResource with a given id.'
                'list:Lists the active persistent resources.'
                'reboot:Reboot a Persistent Resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai tensorboards')
            local -a commands
            commands=(
                'create:Create a new Vertex AI Tensorboard.'
                'delete:Delete an existing Vertex AI Tensorboard.'
                'describe:Gets detailed Tensorboard information about the given Tensorboard id.'
                'list:Lists the Tensorboards of the given project and region.'
                'update:Update an existing Vertex AI Tensorboard.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai-platform')
            local -a commands
            commands=(
                'jobs:AI Platform Jobs commands.'
                'local:AI Platform Local commands.'
                'models:AI Platform Models commands.'
                'operations:Manage AI Platform operations.'
                'predict:Run AI Platform online prediction.'
                'versions:AI Platform Versions commands.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai-platform jobs')
            local -a commands
            commands=(
                'cancel:Cancel a running AI Platform job.'
                'describe:Describe an AI Platform job.'
                'list:List existing AI Platform jobs.'
                'stream-logs:Show logs from a running AI Platform job.'
                'submit:AI Platform Jobs submit commands.'
                'update:Update an AI Platform job.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai-platform jobs submit')
            local -a commands
            commands=(
                'prediction:Start an AI Platform batch prediction job.'
                'training:Submit an AI Platform training job.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai-platform local')
            local -a commands
            commands=(
                'predict:Run prediction locally.'
                'train:Run an AI Platform training job locally.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai-platform models')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a model.'
                'create:Create a new AI Platform model.'
                'delete:Delete an existing AI Platform model.'
                'describe:Describe an existing AI Platform model.'
                'get-iam-policy:Get the IAM policy for a model.'
                'list:List existing AI Platform models.'
                'remove-iam-policy-binding:Remove IAM policy binding for a model.'
                'set-iam-policy:Set the IAM policy for a model.'
                'update:Update an existing AI Platform model.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai-platform operations')
            local -a commands
            commands=(
                'cancel:Cancel an AI Platform operation.'
                'describe:Describe an AI Platform operation.'
                'list:List existing AI Platform jobs.'
                'wait:Wait for an AI Platform operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud ai-platform versions')
            local -a commands
            commands=(
                'create:Create a new AI Platform version.'
                'delete:Delete an existing AI Platform version.'
                'describe:Describe an existing AI Platform version.'
                'list:List existing AI Platform versions.'
                'set-default:Sets an existing AI Platform version as the default for its model.'
                'update:Update an AI Platform version.'
            )
            _describe 'command' commands
            ;;
        'gcloud alloydb')
            local -a commands
            commands=(
                'backups:Provide commands for managing AlloyDB backups.'
                'clusters:Provide commands for managing AlloyDB clusters.'
                'instances:Provide commands for managing AlloyDB instances.'
                'operations:Provide commands for managing AlloyDB operations.'
                'users:Provide commands for managing AlloyDB users.'
            )
            _describe 'command' commands
            ;;
        'gcloud alloydb backups')
            local -a commands
            commands=(
                'create:Creates a new AlloyDB backup within a given project.'
                'delete:Deletes an AlloyDB backup within a given project.'
                'describe:Describes an AlloyDB backup in a given project and region.'
                'list:Lists AlloyDB backups in a given project.'
            )
            _describe 'command' commands
            ;;
        'gcloud alloydb clusters')
            local -a commands
            commands=(
                'create:Create a new AlloyDB cluster within a given project.'
                'create-secondary:Create a new AlloyDB SECONDARY cluster within a given project.'
                'delete:Delete an AlloyDB cluster in a given region.'
                'describe:Describe an AlloyDB cluster in a given project and region.'
                'export:Export data from an AlloyDB cluster to Google Cloud Storage.'
                'import:Import data into an AlloyDB cluster from Google Cloud Storage.'
                'list:List AlloyDB clusters in a given project and region.'
                'migrate-cloud-sql:Migrate Cloud SQL instance to an AlloyDB cluster using an existing Cloud SQL backup.'
                'promote:Promote an AlloyDB SECONDARY cluster in a given project and region.'
                'restore:Restore an AlloyDB cluster from a given backup or a source cluster and a timestamp.'
                'switchover:Switchover an AlloyDB SECONDARY cluster in a given project and region.'
                'update:Update an AlloyDB cluster within a given project and region.'
                'upgrade:Upgrade an AlloyDB cluster within a given project and region.'
            )
            _describe 'command' commands
            ;;
        'gcloud alloydb instances')
            local -a commands
            commands=(
                'create:Creates a new AlloyDB instance within a given cluster.'
                'create-secondary:Creates a new AlloyDB SECONDARY instance within a given cluster.'
                'delete:Deletes an AlloyDB instance within a given cluster.'
                'describe:Describes an AlloyDB instance within a given cluster.'
                'failover:Failover an AlloyDB instance within a given cluster.'
                'inject-fault:Inject fault on an AlloyDB instance within a given cluster.'
                'list:Lists AlloyDB instances in a given cluster.'
                'restart:Restarts an AlloyDB instance within a given cluster.'
                'update:Updates an AlloyDB instance within a given cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud alloydb operations')
            local -a commands
            commands=(
                'cancel:Cancels an AlloyDB operation.'
                'delete:Deletes an AlloyDB operation.'
                'describe:Describes an AlloyDB operation.'
                'list:Lists AlloyDB operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud alloydb users')
            local -a commands
            commands=(
                'create:Creates a user in a given cluster.'
                'delete:Deletes an AlloyDB user in a given cluster.'
                'list:Lists AlloyDB users in a given cluster.'
                'set-password:Update an AlloyDB user'\''s password within a given cluster and region.'
                'set-roles:Update an AlloyDB user'\''s database roles within a given cluster and region.'
                'set-superuser:Update an AlloyDB user'\''s superuser role within a given cluster and region.'
            )
            _describe 'command' commands
            ;;
        'gcloud anthos')
            local -a commands
            commands=(
                'auth:Authenticate clusters using the Anthos client.'
                'config:Anthos configuration command group.'
                'create-login-config:Generates a login configuration file.'
            )
            _describe 'command' commands
            ;;
        'gcloud anthos auth')
            local -a commands
            commands=(
                'login:Authenticate clusters using the Anthos client.'
                'token:Creates a token for authentication.'
                'version:Get version info for the Anthos Auth client.'
            )
            _describe 'command' commands
            ;;
        'gcloud anthos config')
            local -a commands
            commands=(
                'controller:Manage Anthos Config Controller instances.'
                'operations:Get and list operations for Anthos Config Controller instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud anthos config controller')
            local -a commands
            commands=(
                'create:Create Anthos Config Controller instances.'
                'delete:Delete Anthos Config Controller instances.'
                'describe:Describe Anthos Config Controller instances.'
                'get-config-connector-identity:Fetch default Config Connector identity.'
                'get-credentials:Fetch credentials for a running Anthos Config Controller.'
                'list:List Anthos Config Controller instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud anthos config operations')
            local -a commands
            commands=(
                'describe:Describe Anthos Config Controller operations.'
                'list:List Anthos Config Controller operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud api-gateway')
            local -a commands
            commands=(
                'api-configs:Manage Cloud API Gateway API Configs.'
                'apis:Manage Cloud API Gateway APIs.'
                'gateways:Manage Cloud API Gateway Gateways.'
                'operations:Manage operations for Cloud API Gateways.'
            )
            _describe 'command' commands
            ;;
        'gcloud api-gateway api-configs')
            local -a commands
            commands=(
                'create:Add a new config to an API.'
                'delete:Deletes a config from an API.'
                'describe:Show details about a specific API config.'
                'list:List configs for an API.'
                'update:Update an API Gateway API config.'
            )
            _describe 'command' commands
            ;;
        'gcloud api-gateway apis')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a gateway.'
                'create:Create a new API.'
                'delete:Deletes an API.'
                'describe:Show details about a specific API.'
                'get-iam-policy:Get the IAM policy for an API.'
                'list:List APIs.'
                'remove-iam-policy-binding:Remove IAM policy binding to a gateway.'
                'update:Update an API Gateway API.'
            )
            _describe 'command' commands
            ;;
        'gcloud api-gateway gateways')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a gateway.'
                'create:Create a new gateway.'
                'delete:Delete an API Gateway.'
                'describe:Show details about a specific gateway.'
                'get-iam-policy:Get the IAM policy for a gateway.'
                'list:List API Gateways.'
                'remove-iam-policy-binding:Remove IAM policy binding from a gateway.'
                'update:Update an API Gateway.'
            )
            _describe 'command' commands
            ;;
        'gcloud api-gateway operations')
            local -a commands
            commands=(
                'cancel:Cancel a Cloud API Gateway operation.'
                'describe:Show details about the Cloud API Gateway operation.'
                'list:List API Gateway operations.'
                'wait:Wait for a Cloud API Gateway operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee')
            local -a commands
            commands=(
                'apis:Manage Apigee API proxies.'
                'applications:Manage third-party applications which call Apigee API proxies.'
                'deployments:Manage deployments of Apigee API proxies in runtime environments.'
                'developers:Manage Apigee developers.'
                'environments:Manage Apigee environments.'
                'organizations:Manage Apigee organizations.'
                'products:Manage Apigee API products.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee apis')
            local -a commands
            commands=(
                'deploy:Deploy an API proxy to an environment.'
                'describe:Describe an Apigee API proxy.'
                'list:List Apigee API proxies.'
                'undeploy:Undeploy an Apigee API proxy from an environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee applications')
            local -a commands
            commands=(
                'describe:Describe an Apigee application.'
                'list:List Apigee applications.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee deployments')
            local -a commands
            commands=(
                'describe:Describe an Apigee API proxy deployment.'
                'list:List Apigee API proxy deployments.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee developers')
            local -a commands
            commands=(
                'describe:Describe an Apigee developer.'
                'list:List Apigee developers by email address.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee environments')
            local -a commands
            commands=(
                'list:List Apigee deployment environments.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee organizations')
            local -a commands
            commands=(
                'list:List Apigee organizations and their paired Cloud Platform projects.'
            )
            _describe 'command' commands
            ;;
        'gcloud apigee products')
            local -a commands
            commands=(
                'create:Create an Apigee API product.'
                'delete:Delete an Apigee API product.'
                'describe:Describe an Apigee API product.'
                'list:List Apigee API products.'
                'update:Update an existing Apigee API product.'
            )
            _describe 'command' commands
            ;;
        'gcloud app')
            local -a commands
            commands=(
                'browse:Open the current app in a web browser.'
                'create:Create an App Engine app within the current Google Cloud Project.'
                'deploy:Deploy the local code and/or configuration of your app to App Engine.'
                'describe:Display all data about an existing service.'
                'domain-mappings:View and manage your App Engine domain mappings.'
                'firewall-rules:View and manage your App Engine firewall rules.'
                'gen-repo-info-file:\[DEPRECATED\] Saves repository information in a file.'
                'instances:View and manage your App Engine instances.'
                'logs:Manage your App Engine logs.'
                'open-console:Open the App Engine dashboard, or log viewer, in a web browser.'
                'operations:View and manage your App Engine Operations.'
                'regions:View regional availability of App Engine runtime environments.'
                'runtimes:List runtimes available to Google App Engine.'
                'services:View and manage your App Engine services.'
                'ssl-certificates:View and manage your App Engine SSL certificates.'
                'update:Updates an App Engine application.'
                'versions:View and manage your App Engine versions.'
            )
            _describe 'command' commands
            ;;
        'gcloud app domain-mappings')
            local -a commands
            commands=(
                'create:Creates a domain mapping.'
                'delete:Deletes a specified domain mapping.'
                'describe:Describes a specified domain mapping.'
                'list:Lists domain mappings.'
                'update:Updates a domain mapping.'
            )
            _describe 'command' commands
            ;;
        'gcloud app firewall-rules')
            local -a commands
            commands=(
                'create:Creates a firewall rule.'
                'delete:Deletes a specified firewall rule.'
                'describe:Prints the fields of a specified firewall rule.'
                'list:Lists the firewall rules.'
                'test-ip:Display firewall rules that match a given IP.'
                'update:Updates a firewall rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud app instances')
            local -a commands
            commands=(
                'delete:Delete a specified instance.'
                'describe:Display all data about an existing instance.'
                'disable-debug:Disable debug mode for an instance.'
                'enable-debug:Enable debug mode for an instance \(only works on the flexible environment\).'
                'list:List the instances affiliated with the current App Engine project.'
                'scp:SCP from or to the VM of an App Engine Flexible instance.'
                'ssh:SSH into the VM of an App Engine Flexible instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud app logs')
            local -a commands
            commands=(
                'read:Reads log entries for the current App Engine app.'
                'tail:Streams logs for App Engine apps.'
            )
            _describe 'command' commands
            ;;
        'gcloud app operations')
            local -a commands
            commands=(
                'describe:Describes the operation.'
                'list:List the operations.'
                'wait:Polls an operation until completion.'
            )
            _describe 'command' commands
            ;;
        'gcloud app regions')
            local -a commands
            commands=(
                'list:List the availability of flex and standard environments for each region.'
            )
            _describe 'command' commands
            ;;
        'gcloud app runtimes')
            local -a commands
            commands=(
                'list:List the available runtimes.'
            )
            _describe 'command' commands
            ;;
        'gcloud app services')
            local -a commands
            commands=(
                'browse:Open the specified service\(s\) in a browser.'
                'delete:Delete services in the current project.'
                'describe:Display all data about an existing service.'
                'list:List your existing services.'
                'set-traffic:Set traffic splitting settings.'
                'update:Update service-level settings.'
            )
            _describe 'command' commands
            ;;
        'gcloud app ssl-certificates')
            local -a commands
            commands=(
                'create:Uploads a new SSL certificate.'
                'delete:Deletes an SSL certificate.'
                'describe:Describes a specified SSL certificate.'
                'list:Lists the SSL certificates.'
                'update:Updates an SSL certificate.'
            )
            _describe 'command' commands
            ;;
        'gcloud app versions')
            local -a commands
            commands=(
                'browse:Open the specified versions in a browser.'
                'delete:Delete a specified version.'
                'describe:Display all data about an existing version.'
                'list:List your existing versions.'
                'migrate:Migrate traffic from one version to another for a set of services.'
                'start:Start serving specified versions.'
                'stop:Stop serving specified versions.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub')
            local -a commands
            commands=(
                'applications:Manage App Hub Applications.'
                'discovered-services:Manage App Hub Discovered Services.'
                'discovered-workloads:Manage App Hub Discovered Workloads.'
                'locations:Manage App Hub Locations.'
                'operations:Manage App Hub Operations \(long-running operations\).'
                'service-projects:Manage App Hub Service Projects.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub applications')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to an Apphub application.'
                'create:Create an Apphub application.'
                'delete:Delete an Apphub application.'
                'describe:Describe an Apphub application.'
                'get-iam-policy:Get the IAM policy for an Apphub application.'
                'list:List Apphub applications.'
                'remove-iam-policy-binding:Remove IAM policy binding from an Apphub application.'
                'services:Manage App Hub Application Services.'
                'set-iam-policy:Set the IAM policy for an Apphub application as defined in a JSON/YAML file.'
                'update:Update an Apphub application.'
                'workloads:Manage App Hub Application Workloads.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub applications services')
            local -a commands
            commands=(
                'create:Create an Apphub application service.'
                'delete:Delete an Apphub application service.'
                'describe:Describe an Apphub application service.'
                'list:List Apphub application services.'
                'update:Update an Apphub application service.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub applications workloads')
            local -a commands
            commands=(
                'create:Create an Apphub application workload.'
                'delete:Delete an Apphub application workload.'
                'describe:Describe an Apphub application workload.'
                'list:List Apphub application workloads.'
                'update:Update an Apphub application workload.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub discovered-services')
            local -a commands
            commands=(
                'describe:Describe an Apphub discovered service.'
                'list:List Apphub discovered services.'
                'lookup:Lookup an Apphub discovered service with URI.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub discovered-workloads')
            local -a commands
            commands=(
                'describe:Describe an Apphub discovered workload.'
                'list:List Apphub discovered workloads that could be added to an application.'
                'lookup:Lookup an Apphub discovered workload with URI.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub locations')
            local -a commands
            commands=(
                'describe:Describe an Apphub location.'
                'list:List Apphub locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub operations')
            local -a commands
            commands=(
                'describe:Describe an Apphub operation \(long-running operation\).'
                'list:List Apphub operations \(long-running operations\).'
            )
            _describe 'command' commands
            ;;
        'gcloud apphub service-projects')
            local -a commands
            commands=(
                'add:Add an Apphub service project.'
                'describe:Describe an Apphub service project.'
                'detach:Detach an Apphub service project.'
                'list:List Apphub service projects.'
                'lookup:Lookup an Apphub service project.'
                'remove:Remove an Apphub service project.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts')
            local -a commands
            commands=(
                'apt:Manage Artifact Registry Debian packages.'
                'attachments:Manage Artifact Registry attachments.'
                'docker:Manage Artifact Registry container images and tags.'
                'files:Manage Artifact Registry files.'
                'generic:Manage Artifact Registry generic artifacts.'
                'go:Manage Artifact Registry Go modules.'
                'googet:Manage Artifact Registry GooGet packages.'
                'locations:Manage Artifact Registry resource locations.'
                'operations:Manage Artifact Registry long-running operations.'
                'packages:Manage Artifact Registry packages.'
                'print-settings:Print snippets to add to native tools settings files.'
                'repositories:Manage Artifact Registry repositories.'
                'rules:Manage Artifact Registry rules.'
                'sbom:Manage Artifact SBOMs.'
                'settings:Manage Artifact Registry project settings.'
                'tags:Manage Artifact Registry tags.'
                'versions:Manage Artifact Registry package versions.'
                'vpcsc-config:Manage Artifact Registry VPC Service Controls configuration for remote repositories.'
                'vulnerabilities:Manage Artifact Vulnerabilities.'
                'yum:Manage Artifact Registry RPM packages.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts apt')
            local -a commands
            commands=(
                'import:Import one or more Debian packages into an artifact repository.'
                'upload:Upload a Debian package to an artifact repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts attachments')
            local -a commands
            commands=(
                'create:Creates an Artifact Registry attachment in a repository.'
                'delete:Delete an Artifact Registry attachment.'
                'describe:Describe an Artifact Registry attachment.'
                'download:Download an Artifact Registry attachment from a repository.'
                'list:List Artifact Registry attachments.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts docker')
            local -a commands
            commands=(
                'images:Manage Artifact Registry container images.'
                'tags:Manage Artifact Registry container image tags.'
                'upgrade:Commands to support Container Registry to Artifact Registry upgrade.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts docker images')
            local -a commands
            commands=(
                'delete:Delete an Artifact Registry container image.'
                'describe:Describe an Artifact Registry container image.'
                'get-operation:Get an On-Demand Scanning operation.'
                'list:List Artifact Registry container images.'
                'list-vulnerabilities:List On-Demand Scanning vulnerabilities.'
                'scan:Perform a vulnerability scan on a container image.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts docker tags')
            local -a commands
            commands=(
                'add:Add a tag to a container image in Artifact Registry.'
                'delete:Delete a tag from a container image in Artifact Registry.'
                'list:List all tags associated with a container image in Artifact Registry.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts docker upgrade')
            local -a commands
            commands=(
                'migrate:Migrate projects from Container Registry to Artifact Registry.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts files')
            local -a commands
            commands=(
                'delete:Delete an Artifact Registry file.'
                'describe:Describe an Artifact Registry file.'
                'download:Download an Artifact Registry file.'
                'list:List Artifact Registry files.'
                'update:Update annotations on an Artifact Registry file.'
                'upload:Uploads files to Artifact Registry.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts generic')
            local -a commands
            commands=(
                'download:Download a generic artifact from a generic artifact repository.'
                'upload:Uploads an artifact to a generic repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts go')
            local -a commands
            commands=(
                'auth:Print authentication commands for the GOAUTH environment variable.'
                'upload:Upload a Go module to an artifact repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts googet')
            local -a commands
            commands=(
                'import:Import one or more GooGet packages into an artifact repository.'
                'upload:Upload a GooGet package to an artifact repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts locations')
            local -a commands
            commands=(
                'list:List all Artifact Registry supported locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts operations')
            local -a commands
            commands=(
                'describe:Describe an Artifact Registry operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts packages')
            local -a commands
            commands=(
                'delete:Delete an Artifact Registry package.'
                'describe:Describe an Artifact Registry package.'
                'list:List Artifact Registry packages.'
                'update:Update annotations on an Artifact Registry package.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts print-settings')
            local -a commands
            commands=(
                'gradle:Print a snippet to add a repository to the Gradle build.gradle file.'
                'mvn:Print a snippet to add a Maven repository to the pom.xml file.'
                'npm:Print credential settings to add to the .npmrc file.'
                'python:Print credential settings to add to the .pypirc and pip.conf files.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts repositories')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to the IAM policy of an Artifact Registry repository.'
                'copy:Copy an Artifact Registry repository.'
                'create:Create an Artifact Registry repository.'
                'delete:Delete an Artifact Registry repository.'
                'delete-cleanup-policies:Delete cleanup policies from an Artifact Registry repository.'
                'describe:Describe an Artifact Registry repository.'
                'get-iam-policy:Get IAM policy for an Artifact Registry repository.'
                'list:List repositories in the specified project.'
                'list-cleanup-policies:List cleanup policies of an Artifact Registry repository.'
                'remove-iam-policy-binding:Remove an IAM policy binding from the IAM policy of an Artifact Registry repository.'
                'set-cleanup-policies:Set or update cleanup policies for an Artifact Registry repository.'
                'set-iam-policy:Set the IAM policy for an Artifact Registry repository.'
                'update:Update an Artifact Registry repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts rules')
            local -a commands
            commands=(
                'create:Create an Artifact Registry rule.'
                'delete:Delete an Artifact Registry rule.'
                'describe:Describe an Artifact Registry rule.'
                'list:List Artifact Registry rules.'
                'update:Update an Artifact Registry rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts sbom')
            local -a commands
            commands=(
                'export:Export SBOM files to Google Cloud Storage.'
                'list:List SBOM file references.'
                'load:Upload an SBOM file and create a reference occurrence.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts settings')
            local -a commands
            commands=(
                'describe:List all Artifact Registry project settings.'
                'disable-upgrade-redirection:Disables redirection from Container Registry to Artifact Registry.'
                'enable-upgrade-redirection:Enables redirection from Container Registry to Artifact Registry.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts tags')
            local -a commands
            commands=(
                'create:Create an Artifact Registry tag.'
                'delete:Delete an Artifact Registry tag.'
                'export:Export an Artifact Registry package version by tag.'
                'list:List Artifact Registry tags.'
                'update:Update an Artifact Registry tag.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts versions')
            local -a commands
            commands=(
                'delete:Delete an Artifact Registry package version.'
                'describe:Describe an Artifact Registry package version.'
                'export:Export an Artifact Registry package version.'
                'list:List Artifact Registry package versions.'
                'update:Update annotations on an Artifact Registry package version.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts vpcsc-config')
            local -a commands
            commands=(
                'allow:Allow Artifact Registry remote repositories inside a service perimeter to retrieve data from their upstream sources outside of the perimeter.'
                'deny:Deny access to upstream sources outside the service perimeter for Artifact Registry remote repositories inside the perimeter.'
                'describe:Describe the current Artifact Registry configuration for VPC Service Controls.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts vulnerabilities')
            local -a commands
            commands=(
                'list:Command for listing vulnerabilities. To see all fields, use --format=json.'
                'load-vex:Load VEX data from a CSAF file into Artifact Analysis.'
            )
            _describe 'command' commands
            ;;
        'gcloud artifacts yum')
            local -a commands
            commands=(
                'import:Import one or more RPM packages into an artifact repository.'
                'upload:Upload an RPM package to an artifact repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud asset')
            local -a commands
            commands=(
                'analyze-iam-policy:Analyzes IAM policies that match a request.'
                'analyze-iam-policy-longrunning:Analyzes IAM policies that match a request asynchronously and writes the results to Google Cloud Storage or BigQuery destination.'
                'analyze-move:Analyzes resource move.'
                'analyze-org-policies:Analyze organization policies under a scope.'
                'analyze-org-policy-governed-assets:Analyze organization policies governed assets under a scope.'
                'analyze-org-policy-governed-containers:Analyze organization policies governed containers under a scope.'
                'export:Export the cloud assets to Google Cloud Storage/BigQuery.'
                'feeds:Manage Cloud Asset Inventory feeds.'
                'get-effective-iam-policy:Get effective IAM policies for a specified list of resources within accessible scope, such as a project, folder or organization.'
                'get-history:Get the update history of assets that overlaps a time window.'
                'list:List the Cloud assets.'
                'operations:Manage Cloud Asset Inventory operations.'
                'query:Query the Cloud assets.'
                'saved-queries:Manage Cloud Asset Inventory saved queries.'
                'search-all-iam-policies:Searches all IAM policies within the specified accessible scope, such as a project, folder or organization.'
                'search-all-resources:Searches all Cloud resources within the specified accessible scope, such as a project, folder or organization.'
            )
            _describe 'command' commands
            ;;
        'gcloud asset feeds')
            local -a commands
            commands=(
                'create:Create a Cloud Asset Inventory Feed.'
                'delete:Delete a Cloud Asset Inventory Feed.'
                'describe:Describe a Cloud Asset Inventory Feed.'
                'list:List Cloud Asset Inventory Feeds.'
                'update:Update an existing Cloud Asset Inventory Feed.'
            )
            _describe 'command' commands
            ;;
        'gcloud asset operations')
            local -a commands
            commands=(
                'describe:Describe a Cloud Asset Inventory operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud asset saved-queries')
            local -a commands
            commands=(
                'create:Create a Cloud Asset Inventory saved query.'
                'delete:Delete a Cloud Asset Inventory saved query.'
                'describe:Describe a Cloud Asset Inventory saved query.'
                'list:List Cloud Asset Inventory saved query.'
                'update:Update an existing Cloud Asset Inventory saved query.'
            )
            _describe 'command' commands
            ;;
        'gcloud assured')
            local -a commands
            commands=(
                'operations:Read and manipulate Assured Workloads operation resources.'
                'workloads:Read and manipulate Assured Workloads resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud assured operations')
            local -a commands
            commands=(
                'describe:Describe Assured Workloads operations.'
                'list:List all Assured Workloads operations that belong to a given parent organization.'
            )
            _describe 'command' commands
            ;;
        'gcloud assured workloads')
            local -a commands
            commands=(
                'create:Create a new Assured Workloads environment.'
                'delete:Delete Assured Workloads environment.'
                'describe:Describe Assured Workloads environment.'
                'enable-resource-monitoring:Enables Resource Monitoring for an Assured Workloads environment.'
                'list:List all Assured Workloads environments that belong to a given parent organization.'
                'update:Update Assured Workloads environments.'
                'violations:Read and list Assured Workloads Violations.'
            )
            _describe 'command' commands
            ;;
        'gcloud assured workloads violations')
            local -a commands
            commands=(
                'acknowledge:Acknowledge an existing Assured Workloads compliance violation.'
                'describe:Describe an Assured Workloads compliance violation.'
                'list:List all Assured Workloads violations that belong to a assured workloads environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud audit-manager')
            local -a commands
            commands=(
                'audit-reports:Command group for Audit Manager Audit Reports.'
                'audit-scopes:Command group for Audit Manager Audit Scopes.'
                'enrollments:Command group for Audit Manager Enrollments.'
                'operations:Check audit operation status.'
            )
            _describe 'command' commands
            ;;
        'gcloud audit-manager audit-reports')
            local -a commands
            commands=(
                'generate:Generate Audit Report.'
            )
            _describe 'command' commands
            ;;
        'gcloud audit-manager audit-scopes')
            local -a commands
            commands=(
                'generate:Generate Audit Scope.'
            )
            _describe 'command' commands
            ;;
        'gcloud audit-manager enrollments')
            local -a commands
            commands=(
                'add:Enroll a new scope.'
            )
            _describe 'command' commands
            ;;
        'gcloud audit-manager operations')
            local -a commands
            commands=(
                'describe:Describe Audit operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud auth')
            local -a commands
            commands=(
                'activate-refresh-token:Get credentials via an existing refresh token.'
                'activate-service-account:Authorize access to Google Cloud with a service account.'
                'application-default:Manage your active Application Default Credentials.'
                'configure-docker:Register '\''gcloud'\'' as a Docker credential helper.'
                'describe:Describes credentials.'
                'docker-helper:A Docker credential helper to provide access to GCR repositories.'
                'enterprise-certificate-config:Manage enterprise certificate configurations.'
                'git-helper:A git credential helper to provide access to Google git repositories.'
                'list:Lists credentialed accounts.'
                'login:Authorize gcloud to access the Cloud Platform with Google user credentials.'
                'print-access-token:Print an access token for the specified account.'
                'print-identity-token:Print an identity token for the specified account.'
                'print-refresh-token:A command that prints the refresh token for the current account.'
                'revoke:Revoke access credentials for an account.'
            )
            _describe 'command' commands
            ;;
        'gcloud auth application-default')
            local -a commands
            commands=(
                'login:Acquire new user credentials to use for Application Default Credentials.'
                'print-access-token:Print an access token for your current Application Default Credentials.'
                'revoke:Revoke previously generated Application Default Credentials.'
                'set-quota-project:Update or add a quota project in application default credentials \(ADC\).'
            )
            _describe 'command' commands
            ;;
        'gcloud auth enterprise-certificate-config')
            local -a commands
            commands=(
                'create:Create enterprise certificate configurations.'
            )
            _describe 'command' commands
            ;;
        'gcloud auth enterprise-certificate-config create')
            local -a commands
            commands=(
                'linux:Create an enterprise-certificate configuration file for Linux.'
                'macos:Create an enterprise-certificate configuration file for MacOS.'
                'windows:Create an enterprise-certificate configuration file for Windows.'
            )
            _describe 'command' commands
            ;;
        'gcloud authz-toolkit')
            local -a commands
            commands=(
                'policies:Manage Authorization Toolkit Policies.'
                'target-associations:Manage Authorization Toolkit TargetAssociations.'
            )
            _describe 'command' commands
            ;;
        'gcloud authz-toolkit policies')
            local -a commands
            commands=(
                'delete:Delete a policy.'
                'describe:Describe a policy.'
                'export:Export a policy.'
                'import:Import a policy.'
                'list:List policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud authz-toolkit target-associations')
            local -a commands
            commands=(
                'delete:Delete a target association.'
                'describe:Describe a target association.'
                'export:Export a target association.'
                'import:Import a target association.'
                'list:List target associations.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr')
            local -a commands
            commands=(
                'backup-plan-associations:Manage Backup and DR backup plan associations.'
                'backup-plan-revisions:View Backup and DR backup plan revisions.'
                'backup-plans:Manage Backup and DR backup plans.'
                'backup-vaults:Manage Backup and DR backup vaults.'
                'backups:Manage Backup and DR backups.'
                'data-source-references:Command group for Backup and DR Data Source References.'
                'data-sources:View Backup and DR data sources.'
                'locations:Manage Backup and DR locations.'
                'management-servers:Manage Backup and DR management server.'
                'operations:Manage Backup and DR operations.'
                'service-config:Manage Backup and DR Service configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr backup-plan-associations')
            local -a commands
            commands=(
                'create:Create a new backup plan association.'
                'delete:Delete the specified backup plan association.'
                'describe:Show details of the backup plan association.'
                'fetch-for-resource-type:Fetch Backup Plan Associations for a given resource type and location.'
                'list:List Backup and DR backup plan associations.'
                'trigger-backup:Create an on-demand backup for a resource.'
                'update:Update a specific backup plan within a backup plan association.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr backup-plan-revisions')
            local -a commands
            commands=(
                'describe:Show details of the backup plan revision.'
                'list:List backup plan revisions.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr backup-plans')
            local -a commands
            commands=(
                'create:Creates a new Backup Plan.'
                'delete:Deletes a Backup Plan.'
                'describe:Show details of the backup plan.'
                'list:List backup plans in the project.'
                'update:Update a specific backup plan.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr backup-vaults')
            local -a commands
            commands=(
                'create:Create a Backup and DR backup vault.'
                'delete:Delete the specified Backup Vault.'
                'describe:Show the metadata for a Backup and DR backup vault.'
                'list:List Backup and DR backup vaults.'
                'update:Update a Backup and DR backup vault.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr backups')
            local -a commands
            commands=(
                'delete:Delete the specified Backup.'
                'describe:Show details of the backup.'
                'list:List Backups.'
                'restore:Manage restore operations for resources.'
                'update:Update the specified Backup.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr backups restore')
            local -a commands
            commands=(
                'compute:Restores a Compute Engine VM Backup.'
                'disk:Restores a Compute Disk Backup.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr data-source-references')
            local -a commands
            commands=(
                'describe:Show details of the data source reference.'
                'fetch-for-resource-type:Fetch Data Source References for a given resource type and location.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr data-sources')
            local -a commands
            commands=(
                'describe:Show details of the data source.'
                'list:List Data Sources.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr locations')
            local -a commands
            commands=(
                'list:List available Backup and DR locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr management-servers')
            local -a commands
            commands=(
                'create:Create a new management server in the project.'
                'delete:Delete the specified Management Server.'
                'describe:Show details of the management server.'
                'list:List management servers in the project.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr operations')
            local -a commands
            commands=(
                'describe:Describe an operation.'
                'list:List all operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud backup-dr service-config')
            local -a commands
            commands=(
                'init:Initialize a Backup and DR Service configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud batch')
            local -a commands
            commands=(
                'jobs:Manage Batch job resources.'
                'tasks:Manage Batch task resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud batch jobs')
            local -a commands
            commands=(
                'cancel:Cancel a job.'
                'delete:Delete a job.'
                'describe:Show details of a job.'
                'list:List jobs for a specified Batch project/location.'
                'submit:Submit a Batch job.'
            )
            _describe 'command' commands
            ;;
        'gcloud batch tasks')
            local -a commands
            commands=(
                'describe:Show details of a task.'
                'list:List tasks for a specified Batch job.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable')
            local -a commands
            commands=(
                'app-profiles:Manage Cloud Bigtable app profiles.'
                'authorized-views:Manage Cloud Bigtable Authorized Views.'
                'backups:Manage Cloud Bigtable backups.'
                'clusters:Manage Cloud Bigtable clusters.'
                'hot-tablets:Manage Cloud Bigtable hot tablets.'
                'instances:Manage Cloud Bigtable instances.'
                'logical-views:Manage Bigtable logical views.'
                'materialized-views:Manage Bigtable materialized views.'
                'operations:Manage Cloud Bigtable operations.'
                'schema-bundles:Manage Bigtable schema bundles.'
                'tables:Query Cloud Bigtable tables.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable app-profiles')
            local -a commands
            commands=(
                'create:Create a new Bigtable app profile.'
                'delete:Delete a Bigtable app profile.'
                'describe:Describe an existing Bigtable app profile.'
                'list:List Bigtable app profiles.'
                'update:Update a Bigtable app profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable authorized-views')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Bigtable authorized view.'
                'create:Create a new Cloud Bigtable authorized view.'
                'delete:Delete a Cloud Bigtable authorized view.'
                'describe:Describe a Cloud Bigtable authorized view.'
                'get-iam-policy:Get an IAM policy on a Cloud Bigtable authorized view.'
                'list:List all authorized views of a Cloud Bigtable table.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Bigtable authorized view.'
                'set-iam-policy:Set an IAM policy on a Cloud Bigtable authorized view.'
                'update:Update an existing Cloud Bigtable authorized view.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable backups')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Bigtable Backup.'
                'copy:Copy a Cloud Bigtable backup to a new backup.'
                'create:Creates a backup of a Cloud Bigtable table.'
                'delete:Delete an existing backup.'
                'describe:Retrieves information about a backup.'
                'get-iam-policy:Get an IAM policy on a Cloud Bigtable Backup.'
                'list:List existing Bigtable backups.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Bigtable Backup.'
                'set-iam-policy:Set an IAM policy on a Cloud Bigtable Backup.'
                'update:Update a backup, only supported for the following fields: --expiration-date and --retention-period.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable clusters')
            local -a commands
            commands=(
                'create:Create a bigtable cluster.'
                'delete:Delete a bigtable cluster.'
                'describe:Describe an existing Bigtable cluster.'
                'list:List existing Bigtable clusters.'
                'update:Update a Bigtable cluster'\''s number of nodes.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable hot-tablets')
            local -a commands
            commands=(
                'list:List hot tablets in a Cloud Bigtable cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable instances')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Bigtable instance.'
                'create:Create a new Bigtable instance.'
                'delete:Delete an existing Bigtable instance.'
                'describe:Describe an existing Bigtable instance.'
                'get-iam-policy:Get the IAM policy for a Cloud Bigtable instance.'
                'list:List existing Bigtable instances.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Bigtable instance.'
                'set-iam-policy:Set IAM policy for an instance.'
                'tables:Query Cloud Bigtable tables.'
                'update:Modify an existing Bigtable instance.'
                'upgrade:Upgrade an existing instance'\''s type from development to production.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable instances tables')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Bigtable table.'
                'create:Create a new Cloud Bigtable table.'
                'delete:Delete a Cloud Bigtable table.'
                'describe:Retrieve information about a table.'
                'get-iam-policy:Get an IAM policy on a Cloud Bigtable table.'
                'list:List existing Bigtable instance tables.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Bigtable table.'
                'restore:Restore a Cloud Bigtable backup to a new table.'
                'set-iam-policy:Set an IAM policy on a Cloud Bigtable table.'
                'undelete:Undelete a previously deleted Cloud Bigtable table.'
                'update:Update an existing Cloud Bigtable table.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable logical-views')
            local -a commands
            commands=(
                'create:Create a new Bigtable logical view.'
                'delete:Delete a Bigtable logical view.'
                'describe:Describe an existing Bigtable logical view.'
                'list:List existing Bigtable logical views.'
                'update:Update a Bigtable logical view.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable materialized-views')
            local -a commands
            commands=(
                'create:Create a new Bigtable materialized view.'
                'delete:Delete a Bigtable materialized view.'
                'describe:Describe an existing Bigtable materialized view.'
                'list:List existing Bigtable materialized views.'
                'update:Update a Bigtable materialized view.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable operations')
            local -a commands
            commands=(
                'describe:Describe a Cloud Bigtable operation.'
                'list:List Cloud Bigtable operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable schema-bundles')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Bigtable schema bundle.'
                'create:Create a new Bigtable schema bundle.'
                'delete:Delete a Bigtable schema bundle.'
                'describe:Describe a Bigtable schema bundle.'
                'get-iam-policy:Get an IAM policy on a Bigtable schema bundle.'
                'list:List all schema bundles of a Bigtable table.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Bigtable schema bundle.'
                'set-iam-policy:Set an IAM policy on a Bigtable schema bundle.'
                'update:Update an existing Bigtable schema bundle.'
            )
            _describe 'command' commands
            ;;
        'gcloud bigtable tables')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Bigtable table.'
                'create:Create a new Cloud Bigtable table.'
                'delete:Delete a Cloud Bigtable table.'
                'describe:Retrieve information about a table.'
                'get-iam-policy:Get an IAM policy on a Cloud Bigtable table.'
                'list:List existing Bigtable instance tables.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Bigtable table.'
                'restore:Restore a Cloud Bigtable backup to a new table.'
                'set-iam-policy:Set an IAM policy on a Cloud Bigtable table.'
                'undelete:Undelete a previously deleted Cloud Bigtable table.'
                'update:Update an existing Cloud Bigtable table.'
            )
            _describe 'command' commands
            ;;
        'gcloud billing')
            local -a commands
            commands=(
                'accounts:Manage billing accounts.'
                'budgets:Manage the budgets of your billing accounts.'
                'projects:Manage the billing account configuration of your projects.'
            )
            _describe 'command' commands
            ;;
        'gcloud billing accounts')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Billing account.'
                'describe:Show metadata for a billing account.'
                'get-iam-policy:Get the IAM policy for a Cloud Billing account.'
                'list:List all active billing accounts.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Billing account.'
                'set-iam-policy:Set the IAM policy for a Cloud Billing account.'
            )
            _describe 'command' commands
            ;;
        'gcloud billing budgets')
            local -a commands
            commands=(
                'create:Create a budget.'
                'delete:Delete a budget.'
                'describe:Describe a budget.'
                'list:List budgets.'
                'update:Update a budget.'
            )
            _describe 'command' commands
            ;;
        'gcloud billing projects')
            local -a commands
            commands=(
                'describe:Show detailed billing information for a project.'
                'link:Link a project with a billing account.'
                'list:List all active projects associated with the specified billing account.'
                'unlink:Unlink the account \(if any\) linked with a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms')
            local -a commands
            commands=(
                'instances:Manage bare metal instances in Bare Metal Solution.'
                'networks:Manage networks in Bare Metal Solution.'
                'nfs-shares:Manage NFS shares in Bare Metal Solution.'
                'operations:Manage operations in Bare Metal Solution.'
                'os-images:Manage bare metal os images in Bare Metal Solution.'
                'ssh-keys:Manage SSH keys for Bare Metal Solution.'
                'volumes:Manage bare metal volumes in Bare Metal Solution.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms instances')
            local -a commands
            commands=(
                'describe:Describe a Bare Metal solution instance.'
                'disable-serial-console:Disable interactive serial console for a Bare Metal Solution instance.'
                'enable-serial-console:Enable interactive serial console for a Bare Metal Solution instance.'
                'list:List Bare Metal Solution instances in a project.'
                'rename:Rename a Bare Metal Solution instance.'
                'reset:Reset a Bare Metal Solution instance.'
                'start:Start a Bare Metal Solution instance.'
                'stop:Stop a Bare Metal Solution instance.'
                'update:Update a Bare Metal Solution instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms networks')
            local -a commands
            commands=(
                'describe:Describe a Bare Metal solution network.'
                'list:List Bare Metal Solution networks in a project.'
                'list-ip-reservations:List IP range reservations for Bare Metal Solution networks in a project.'
                'rename:Rename a Bare Metal Solution network.'
                'update:Update a Bare Metal Solution network.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms nfs-shares')
            local -a commands
            commands=(
                'create:Create a Bare Metal Solution NFS share.'
                'delete:Delete a Bare Metal Solution NFS share.'
                'describe:Describe a Bare Metal solution NFS share.'
                'list:List Bare Metal Solution NFS shares in a project.'
                'rename:Rename a Bare Metal Solution nfs-share.'
                'update:Update a Bare Metal Solution NFS share.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms operations')
            local -a commands
            commands=(
                'describe:Show metadata for a Bare Metal Solution operation.'
                'wait:Poll a long-running Bare Metal Solution operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms os-images')
            local -a commands
            commands=(
                'describe:Describe Bare Metal Solution OS images in a project.'
                'list:List Bare Metal Solution OS images in a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms ssh-keys')
            local -a commands
            commands=(
                'add:Add a public SSH key to the project in Bare Metal Solution.'
                'list:List the SSH keys added to the project in Bare Metal Solution.'
                'remove:Remove an SSH key in Bare Metal Solution given its name.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms volumes')
            local -a commands
            commands=(
                'describe:Describe a Bare Metal Solution volume.'
                'list:List Bare Metal Solution volumes in a project.'
                'luns:Manage bare metal logical unit numbers \(LUNs\) in Bare Metal Solution.'
                'rename:Rename a Bare Metal Solution volume.'
                'restore:Restore a Bare Metal Solution boot volume from an existing snapshot.'
                'snapshot:Create a snapshot of a Bare Metal Solution boot volume.'
                'snapshots:Manage snapshots for Bare Metal Solution volumes.'
                'update:Update a Bare Metal Solution volume.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms volumes luns')
            local -a commands
            commands=(
                'describe:Describe a Bare Metal Solution LUN.'
                'list:List Bare Metal Solution LUNs in a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud bms volumes snapshots')
            local -a commands
            commands=(
                'delete:Delete a Bare Metal Solution boot volume snapshot.'
                'describe:Describe a Bare Metal Solution boot volume snapshot.'
                'list:List snapshots for a Bare Metal Solution boot volume.'
            )
            _describe 'command' commands
            ;;
        'gcloud bq')
            local -a commands
            commands=(
                'migration-workflows:Manage Migration Workflow resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud bq migration-workflows')
            local -a commands
            commands=(
                'create:create migration workflows.'
                'delete:Delete migration workflows.'
                'describe:Describe migration workflows.'
                'list:List migration workflows.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds')
            local -a commands
            commands=(
                'cancel:Cancel an ongoing build.'
                'connections:Manage connections for Google Cloud Build.'
                'describe:Get information about a particular build.'
                'get-default-service-account:Get the default service account for a project.'
                'list:List builds.'
                'log:Stream the logs for a build.'
                'repositories:Manage repositories for Cloud Build.'
                'submit:Submit a build using Cloud Build.'
                'triggers:Create and manage build triggers for Google Cloud Build.'
                'worker-pools:Manage worker pools for Google Cloud Build.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds connections')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Cloud Build connection.'
                'create:Create Connections in Google Cloud Build.'
                'delete:Delete a Cloud Build Connection.'
                'describe:Describe a Cloud Build Connection.'
                'get-iam-policy:Get the IAM policy for a Cloud Build connection.'
                'list:List all Cloud Build connections for a project and region.'
                'set-iam-policy:Set the IAM policy for a Cloud Build connection.'
                'update:Update Connections in Google Cloud Build.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds connections create')
            local -a commands
            commands=(
                'bitbucket-cloud:Create a Cloud Build Connection for Bitbucket Cloud.'
                'bitbucket-data-center:Create a Cloud Build Connection for Bitbucket Data Center.'
                'github:Create a Cloud Build Connection of type GitHub.'
                'github-enterprise:Create a Cloud Build Connection of type GitHub Enterprise.'
                'gitlab:Create a Cloud Build Connection for gitlab.com or GitLab Enterprise.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds connections update')
            local -a commands
            commands=(
                'bitbucket-cloud:Update a Cloud Build Connection of type Bitbucket Cloud.'
                'bitbucket-data-center:Update a Cloud Build Connection of type Bitbucket Data Center.'
                'github:Update a Cloud Build Connection of type GitHub.'
                'github-enterprise:Update a Cloud Build Connection of type GitHub Enterprise.'
                'gitlab:Update a Cloud Build Connection of type gitlab.com or GitLab Enterprise.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds repositories')
            local -a commands
            commands=(
                'create:Create a Cloud Build repository.'
                'delete:Delete a Cloud Build Repository.'
                'describe:Describe a Cloud Build Repository.'
                'list:List all Cloud Build repositories in a connection.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds triggers')
            local -a commands
            commands=(
                'create:Create build triggers for Google Cloud Build.'
                'delete:Delete a build trigger.'
                'describe:Get information about a particular trigger.'
                'import:Import a build trigger.'
                'list:List Cloud Build triggers for a project.'
                'run:Run a build trigger.'
                'update:Update Triggers in Google Cloud Build.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds triggers create')
            local -a commands
            commands=(
                'bitbucket-cloud:Create a build trigger for a 2nd-gen Bitbucket Cloud repository.'
                'bitbucket-data-center:Create a build trigger for a 2nd-gen Bitbucket Data Center repository.'
                'bitbucketserver:Create a build trigger for a Bitbucket Server repository.'
                'cloud-source-repositories:Create a build trigger from a Cloud Source Repository.'
                'github:Create a build trigger for a GitHub repository.'
                'gitlab:Create a build trigger for a 2nd-gen GitLab repository.'
                'manual:Create a build trigger with a manual trigger event.'
                'pubsub:Create a build trigger with a Pub/Sub trigger event.'
                'webhook:Create a build trigger with a Webhook trigger event.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds triggers update')
            local -a commands
            commands=(
                'bitbucket-cloud:Updates Bitbucket Cloud trigger used by Cloud Build.'
                'bitbucket-data-center:Updates Bitbucket Data Center trigger used by Cloud Build.'
                'bitbucketserver:Updates Bitbucket Server trigger used by Cloud Build.'
                'cloud-source-repositories:Updates Cloud Source Repositories trigger used by Cloud Build.'
                'github:Update GitHub trigger used by Cloud Build.'
                'gitlab:Updates GitLab trigger used by Cloud Build.'
                'manual:Updates a manual trigger used by Cloud Build.'
                'pubsub:Update a Pub/Sub trigger used by Cloud Build.'
                'webhook:Update a Webhook trigger used by Cloud Build.'
            )
            _describe 'command' commands
            ;;
        'gcloud builds worker-pools')
            local -a commands
            commands=(
                'create:Create a worker pool for use by Google Cloud Build.'
                'delete:Delete a worker pool from Cloud Build.'
                'describe:Describe a worker pool used by Cloud Build.'
                'list:List all worker pools in a Google Cloud project.'
                'update:Update a worker pool used by Cloud Build.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager')
            local -a commands
            commands=(
                'certificates:Manage Certificate Manager certificates.'
                'dns-authorizations:Manage Certificate Manager DNS authorizations.'
                'issuance-configs:Manage Certificate Manager Certificate Issuance Configs.'
                'maps:Manage Certificate Manager certificate maps.'
                'operations:Manage Certificate Manager operations.'
                'trust-configs:Manage Certificate Manager trust configs.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager certificates')
            local -a commands
            commands=(
                'create:Create a certificate.'
                'delete:Delete a certificate.'
                'describe:Describe an existing certificate.'
                'list:List certificates.'
                'update:Update a certificate.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager dns-authorizations')
            local -a commands
            commands=(
                'create:Create a DNS Authorization.'
                'delete:Delete a DNS Authorization.'
                'describe:Show details about a DNS Authorization.'
                'list:List all DNS Authorizations in a project.'
                'update:Update a DNS Authorization.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager issuance-configs')
            local -a commands
            commands=(
                'create:Create a Certificate Issuance Config.'
                'delete:Delete a Certificate Issuance Config.'
                'describe:Show details about a Certificate Issuance Config.'
                'list:List all Certificate Issuance Configs in a project.'
                'update:Update a Certificate Issuance Config.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager maps')
            local -a commands
            commands=(
                'create:Create a certificate map.'
                'delete:Delete a certificate map.'
                'describe:Describe an existing certificate map.'
                'entries:Manage Certificate Manager certificate map entries.'
                'list:List certificate maps.'
                'update:Update a certificate map.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager maps entries')
            local -a commands
            commands=(
                'create:Create a certificate map entry.'
                'delete:Delete a certificate map entry.'
                'describe:Describe an existing certificate map entry.'
                'list:List certificate map entries.'
                'update:Update a certificate map entry.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager operations')
            local -a commands
            commands=(
                'describe:Describe a long-running operation.'
                'list:List long-running operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud certificate-manager trust-configs')
            local -a commands
            commands=(
                'create:Create TrustConfig.'
                'delete:Delete TrustConfig.'
                'describe:Show details about a TrustConfig.'
                'export:Export TrustConfig.'
                'import:Import TrustConfig.'
                'list:List all TrustConfigs in a project.'
                'update:Update TrustConfig.'
            )
            _describe 'command' commands
            ;;
        'gcloud cloud-shell')
            local -a commands
            commands=(
                'get-mount-command:Prints a command to mount the Cloud Shell home directory via sshfs.'
                'scp:Copies files between Cloud Shell and the local machine.'
                'ssh:Allows you to establish an interactive SSH session with Cloud Shell.'
            )
            _describe 'command' commands
            ;;
        'gcloud cloudlocationfinder')
            local -a commands
            commands=(
                'cloud-locations:Manage Cloud Location resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud cloudlocationfinder cloud-locations')
            local -a commands
            commands=(
                'describe:Describe a Cloud Location.'
                'list:List cloudLocations.'
                'search:Search cloudLocations.'
            )
            _describe 'command' commands
            ;;
        'gcloud colab')
            local -a commands
            commands=(
                'executions:Manage Colab Enterprise notebook execution jobs.'
                'runtime-templates:Manage Colab Enterprise runtime templates.'
                'runtimes:Manage Colab Enterprise runtimes.'
                'schedules:Manage Colab Enterprise notebook execution schedules.'
            )
            _describe 'command' commands
            ;;
        'gcloud colab executions')
            local -a commands
            commands=(
                'create:Create an execution.'
                'delete:Delete an execution.'
                'describe:Describe an execution.'
                'list:List your Colab Enterprise notebook execution jobs.'
            )
            _describe 'command' commands
            ;;
        'gcloud colab runtime-templates')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Colab Enterprise runtime template.'
                'create:Create a runtime template.'
                'delete:Delete a runtime template.'
                'describe:Describe a runtime template.'
                'get-iam-policy:Get IAM policy for a Colab Enterprise runtime template.'
                'list:List your runtime templates.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Colab Enterprise runtime template.'
                'set-iam-policy:Set IAM policy for a Colab Enterprise runtime template as defined in a JSON or YAML file.'
            )
            _describe 'command' commands
            ;;
        'gcloud colab runtimes')
            local -a commands
            commands=(
                'create:Create a notebook runtime.'
                'delete:Delete a runtime.'
                'describe:Describe a runtime.'
                'list:List your project'\''s runtimes.'
                'start:Start a stopped runtime.'
                'stop:Stop a runtime.'
                'upgrade:Upgrade a runtime.'
            )
            _describe 'command' commands
            ;;
        'gcloud colab schedules')
            local -a commands
            commands=(
                'create:Create a schedule.'
                'delete:Delete a schedule.'
                'describe:Describe a schedule.'
                'list:List your Colab Enterprise notebook execution schedules.'
                'pause:Pause a schedule.'
                'resume:Resume a schedule.'
                'update:Update a schedule.'
            )
            _describe 'command' commands
            ;;
        'gcloud components')
            local -a commands
            commands=(
                'copy-bundled-python:Make a temporary copy of bundled Python installation.'
                'install:Install one or more Google Cloud CLI components.'
                'list:List the status of all Google Cloud CLI components.'
                'post-process:Performs any necessary post installation steps.'
                'reinstall:Reinstall the Google Cloud CLI with the same components you have now.'
                'remove:Remove one or more installed components.'
                'repositories:Manage additional component repositories for Trusted Tester programs.'
                'restore:\(DEPRECATED\)  Restore the Google Cloud CLI installation to its state before a reinstall.'
                'update:Update all of your installed components to the latest version.'
            )
            _describe 'command' commands
            ;;
        'gcloud components repositories')
            local -a commands
            commands=(
                'add:Add a new Trusted Tester component repository.'
                'list:List any Trusted Tester component repositories you have registered.'
                'remove:Remove a registered Trusted Test component repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer')
            local -a commands
            commands=(
                'environments:Create and manage Cloud Composer environments.'
                'operations:Manage Cloud Composer operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments')
            local -a commands
            commands=(
                'check-upgrade:Check that upgrading a Cloud Composer environment does not result in PyPI module conflicts.'
                'create:Create and initialize a Cloud Composer environment.'
                'database-failover:Run a database failover operation.'
                'delete:Delete one or more Cloud Composer environments.'
                'describe:Get details about a Cloud Composer environment.'
                'fetch-database-properties:Fetch database properties.'
                'list:List the Cloud Composer environments under a project and location.'
                'list-packages:List all PyPI modules installed in an Airflow worker.'
                'list-upgrades:List the Cloud Composer image version upgrades for a specific environment.'
                'list-workloads:List Composer workloads, supported in Composer 3 environments or greater.'
                'restart-web-server:Restart web server for a Cloud Composer environment.'
                'run:Run an Airflow sub-command remotely in a Cloud Composer environment.'
                'snapshots:Save and load snapshots of environment.'
                'storage:Manage Cloud Storage objects stored as part of Cloud Composer environments.'
                'update:Update properties of a Cloud Composer environment.'
                'user-workloads-config-maps:Create and manage user workloads ConfigMaps of environment.'
                'user-workloads-secrets:Create and manage user workloads Secrets of environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments snapshots')
            local -a commands
            commands=(
                'load:Load a snapshot into the environment.'
                'save:Save a snapshot of the environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments storage')
            local -a commands
            commands=(
                'dags:Manage DAGs for Cloud Composer environments.'
                'data:Manage data for Cloud Composer environments.'
                'plugins:Manage plugins for Cloud Composer environments.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments storage dags')
            local -a commands
            commands=(
                'delete:Delete DAG files from an Cloud Composer environment'\''s Cloud Storage bucket.'
                'export:Export DAGs from an environment into local storage or Cloud Storage.'
                'import:Import DAGs from local storage or Cloud Storage into an environment.'
                'list:List the DAG files for a Cloud Composer environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments storage data')
            local -a commands
            commands=(
                'delete:Delete data from an Cloud Composer environment'\''s Cloud Storage bucket.'
                'export:Export data from an environment into local storage or Cloud Storage.'
                'import:Import data from local storage or Cloud Storage into an environment.'
                'list:List the data for a Cloud Composer environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments storage plugins')
            local -a commands
            commands=(
                'delete:Delete plugins from an Cloud Composer environment'\''s Cloud Storage bucket.'
                'export:Export plugins from an environment into local storage or Cloud Storage.'
                'import:Import plugins from local storage or Cloud Storage into an environment.'
                'list:List the plugins for a Cloud Composer environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments user-workloads-config-maps')
            local -a commands
            commands=(
                'create:Create a user workloads ConfigMap.'
                'delete:Delete a user workloads ConfigMap.'
                'describe:Get details about a user workloads ConfigMap.'
                'list:List user workloads ConfigMaps.'
                'update:Update a user workloads ConfigMap.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer environments user-workloads-secrets')
            local -a commands
            commands=(
                'create:Create a user workloads Secret.'
                'delete:Delete a user workloads Secret.'
                'describe:Get details about a user workloads Secret.'
                'list:List user workloads Secrets.'
                'update:Update a user workloads Secret.'
            )
            _describe 'command' commands
            ;;
        'gcloud composer operations')
            local -a commands
            commands=(
                'delete:Delete one or more completed Cloud Composer operations.'
                'describe:Get details about an asynchronous operation.'
                'list:Lists environment operations.'
                'wait:Wait for asynchronous operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute')
            local -a commands
            commands=(
                'accelerator-types:Read Compute Engine accelerator types.'
                'addresses:Read and manipulate Compute Engine addresses.'
                'backend-buckets:Read and manipulate backend buckets.'
                'backend-services:List, create, and delete backend services.'
                'commitments:Manage Compute Engine commitments.'
                'config-ssh:Populate SSH config files with Host entries from each instance.'
                'connect-to-serial-port:Connect to the serial port of an instance.'
                'copy-files:Copy files to and from Google Compute Engine virtual machines via scp.'
                'diagnose:Debugging tools for Compute Engine virtual machine instances.'
                'disk-types:Read Compute Engine virtual disk types.'
                'disks:Read and manipulate Compute Engine disks.'
                'external-vpn-gateways:List, create, delete and update External VPN Gateways.'
                'firewall-policies:Manage Compute Engine organization firewall policies.'
                'firewall-rules:List, create, update, and delete Compute Engine firewall rules.'
                'forwarding-rules:Read and manipulate traffic forwarding rules to network load balancers.'
                'future-reservations:Manage Compute Engine future reservations.'
                'health-checks:Read and manipulate health checks for load balanced instances.'
                'http-health-checks:Read and manipulate HTTP health checks for load balanced instances.'
                'https-health-checks:Read and manipulate HTTPS health checks for load balanced instances.'
                'images:List, create, and delete Compute Engine images.'
                'instance-groups:Read and manipulate Compute Engine instance groups.'
                'instance-templates:Read and manipulate Compute Engine instances templates.'
                'instances:Read and manipulate Compute Engine virtual machine instances.'
                'instant-snapshots:Create, list and delete Compute Engine instant snapshots.'
                'interconnects:Read and manipulate Compute Engine interconnects.'
                'machine-images:Read and manage Compute Engine machine image resources.'
                'machine-types:Read Compute Engine virtual machine types.'
                'migration:Provides Migrate to Virtual Machines \(VM migration\) service functionality.'
                'network-attachments:Manage Compute Engine network attachment resources.'
                'network-edge-security-services:Read and manipulate network edge security services.'
                'network-endpoint-groups:Read and manipulate Compute Engine network endpoint groups.'
                'network-firewall-policies:Manage Compute Engine network firewall policies.'
                'network-profiles:Read Compute Engine network profiles.'
                'networks:List, create, and delete Compute Engine networks.'
                'operations:Read and manipulate Compute Engine operations.'
                'org-security-policies:Manage Compute Engine organization security policies.'
                'os-config:Manage OS Config tasks for Compute Engine VM instances.'
                'os-login:Create and manipulate Compute Engine OS Login resources.'
                'packet-mirrorings:Manage Compute Engine packet mirroring resources.'
                'preview-features:Read and manipulate Compute Engine Preview Features.'
                'project-info:Read and manipulate project-level data like quotas and metadata.'
                'project-zonal-metadata:Describe and update project zonal metadata.'
                'public-advertised-prefixes:Manage public advertised prefix resources.'
                'public-delegated-prefixes:Manage public delegated prefix resources.'
                'regions:List Compute Engine regions.'
                'reservations:Manage Compute Engine reservations.'
                'reset-windows-password:Reset and return a password for a Windows machine instance.'
                'resource-policies:Manage Compute Engine Resource Policies.'
                'routers:List, create, and delete Compute Engine routers.'
                'routes:Read and manipulate routes.'
                'scp:Copy files to and from Google Compute Engine virtual machines via scp.'
                'security-policies:Read and manipulate Cloud Armor security policies.'
                'service-attachments:Manage Compute Engine service attachment resources.'
                'shared-vpc:Configure shared VPC.'
                'sign-url:Sign specified URL for use with Cloud CDN Signed URLs.'
                'snapshot-settings:Describe and update Compute Engine snapshot settings.'
                'snapshots:List, describe, and delete Compute Engine snapshots.'
                'sole-tenancy:Read and manage Compute Engine sole-tenancy resources.'
                'ssh:SSH into a virtual machine instance.'
                'ssl-certificates:List, create, and delete Compute Engine SSL certificate resources.'
                'ssl-policies:List, create, delete and update Compute Engine SSL policies.'
                'start-iap-tunnel:Starts an IAP TCP forwarding tunnel.'
                'storage-pool-types:Read storage pool types.'
                'storage-pools:Read and manipulate storage pools.'
                'target-grpc-proxies:Manage Compute Engine target gRPC proxy resources.'
                'target-http-proxies:List, create, and delete target HTTP proxies.'
                'target-https-proxies:List, create, and delete target HTTPS proxies.'
                'target-instances:Read and manipulate Compute Engine virtual target instances.'
                'target-pools:Control Compute Engine target pools for network load balancing.'
                'target-ssl-proxies:List, create, and delete target SSL proxies.'
                'target-tcp-proxies:List, create, and delete target TCP proxies.'
                'target-vpn-gateways:Read and manipulate classic VPN gateways.'
                'tpus:List, create, and delete Cloud TPUs.'
                'url-maps:List, create, and delete URL maps.'
                'vpn-gateways:read and manipulate Highly Available VPN Gateways.'
                'vpn-tunnels:Read and manipulate Compute Engine VPN tunnels.'
                'zones:List Compute Engine zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute accelerator-types')
            local -a commands
            commands=(
                'describe:Describe Compute Engine accelerator types.'
                'list:List Google Compute Engine accelerator types.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute addresses')
            local -a commands
            commands=(
                'create:Reserve IP addresses.'
                'delete:Release reserved IP addresses.'
                'describe:Display detailed information about a reserved static address.'
                'list:List addresses.'
                'move:Move an address to another project.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute backend-buckets')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Compute Engine backend bucket.'
                'add-signed-url-key:Add Cloud CDN Signed URL key to a backend bucket.'
                'create:Create a backend bucket.'
                'delete:Delete backend buckets.'
                'delete-signed-url-key:Delete Cloud CDN Signed URL key from a backend bucket.'
                'describe:Describe a backend bucket.'
                'get-iam-policy:Get the IAM policy for a Compute Engine backend bucket.'
                'list:List Google Compute Engine backend buckets.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Compute Engine backend bucket.'
                'set-iam-policy:Set the IAM policy binding for a Compute Engine backend bucket.'
                'update:Update a backend bucket.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute backend-services')
            local -a commands
            commands=(
                'add-backend:Add a backend to a backend service.'
                'add-iam-policy-binding:Add an IAM policy binding to a Compute Engine backend service.'
                'add-service-bindings:Add service bindings to a backend service.'
                'add-signed-url-key:Add Cloud CDN Signed URL key to a backend service.'
                'create:Create a backend service.'
                'delete:Delete backend services.'
                'delete-signed-url-key:Delete Cloud CDN Signed URL key from a backend service.'
                'describe:Display detailed information about a backend service.'
                'edit:Modify a backend service.'
                'export:Export a backend service.'
                'get-health:Get backend health statuses from a backend service.'
                'get-iam-policy:Get the IAM policy for a Compute Engine backend service.'
                'import:Import a backend service.'
                'list:List Google Compute Engine backend services.'
                'list-usable:List usable backend services.'
                'remove-backend:Remove a backend from a backend service.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Compute Engine backend service.'
                'remove-service-bindings:Remove service bindings from a backend service.'
                'set-iam-policy:Set the IAM policy binding for a Compute Engine backend service.'
                'update:Update a backend service.'
                'update-backend:Update an existing backend of a load balancer or Traffic Director.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute commitments')
            local -a commands
            commands=(
                'create:Create Compute Engine commitments.'
                'create-license:Create Compute Engine license-based commitments.'
                'describe:Describe a Compute Engine commitment.'
                'list:List Compute Engine commitments.'
                'update:Update Compute Engine commitments.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute diagnose')
            local -a commands
            commands=(
                'export-logs:Triggers instance to gather logs and upload them to a Cloud Storage Bucket.'
                'routes:Routes to/from Compute Engine virtual machine instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute disk-types')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine disk type.'
                'list:List Google Compute Engine disk types.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute disks')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine disk.'
                'add-labels:Add labels to Google Compute Engine persistent disks.'
                'add-resource-policies:Add resource policies to a Compute Engine disk.'
                'bulk:Manipulate multiple Compute Engine disks with single command executions.'
                'convert:Convert a Compute Engine Persistent Disk volume to a Hyperdisk volume.'
                'create:Create Compute Engine persistent disks.'
                'delete:Delete a Compute Engine disk.'
                'describe:Describe a Compute Engine disk.'
                'get-iam-policy:Get the IAM policy for a Compute Engine disk.'
                'list:List Google Compute Engine disks.'
                'move:Move a disk between zones.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine disk.'
                'remove-labels:Remove labels from Google Compute Engine persistent disks.'
                'remove-resource-policies:Remove resource policies from a Compute Engine disk.'
                'resize:Resize a disk or disks.'
                'set-iam-policy:Set the IAM policy for a Compute Engine disk.'
                'snapshot:Create snapshots of Compute Engine persistent disks.'
                'start-async-replication:Start asynchronous replication on a Compute Engine persistent disk.'
                'stop-async-replication:Stop async replication on a Compute Engine persistent disk.'
                'stop-group-async-replication:Consistently stops a group of asynchronously replicating disks.'
                'update:Update a Compute Engine persistent disk.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute disks bulk')
            local -a commands
            commands=(
                'create:Create multiple Compute Engine disks.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute external-vpn-gateways')
            local -a commands
            commands=(
                'create:Create a new Compute Engine external VPN gateway.'
                'delete:Delete a Compute Engine external VPN gateway.'
                'describe:Describe a Compute Engine external VPN gateway.'
                'list:List Google Compute Engine external VPN gateways.'
                'update:Update a Compute Engine external VPN gateway.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute firewall-policies')
            local -a commands
            commands=(
                'associations:Read and manipulate Compute Engine organization firewall policy associations.'
                'clone-rules:Replace the rules of a Compute Engine organization firewall policy with rules from another policy.'
                'create:Create a Compute Engine organization firewall policy.'
                'delete:Delete a Compute Engine organization firewall policy.'
                'describe:Describe a Compute Engine organization firewall policy.'
                'export-rules:Export Compute Engine organization firewall policy rules.'
                'import-rules:Import Compute Engine organization firewall policy rules.'
                'list:List Compute Engine organization firewall policies.'
                'list-rules:List the rules of a Compute Engine organization firewall policy.'
                'move:Move a Compute Engine organization firewall policy.'
                'rules:Read and manipulate Compute Engine organization firewall policy rules.'
                'update:Update a Compute Engine organization firewall policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute firewall-policies associations')
            local -a commands
            commands=(
                'create:Create a new association between a firewall policy and an organization or folder resource.'
                'delete:Delete a Compute Engine organization firewall policy association.'
                'list:List the associations of an organization or folder resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute firewall-policies rules')
            local -a commands
            commands=(
                'create:Creates a Compute Engine firewall policy rule.'
                'delete:Deletes a Compute Engine organization firewall policy rule.'
                'describe:Describes a Compute Engine organization firewall policy rule.'
                'update:Updates a Compute Engine firewall policy rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute firewall-rules')
            local -a commands
            commands=(
                'create:Create a Compute Engine firewall rule.'
                'delete:Delete Compute Engine firewall rules.'
                'describe:Describe a Compute Engine firewall rule.'
                'list:List Compute Engine firewall rules.'
                'update:Update a firewall rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute forwarding-rules')
            local -a commands
            commands=(
                'create:Create a forwarding rule to direct network traffic to a load balancer.'
                'delete:Delete forwarding rules.'
                'describe:Display detailed information about a forwarding rule.'
                'export:Export a forwarding rule.'
                'import:Import a forwarding rule.'
                'list:List Google Compute Engine forwarding rules.'
                'set-target:Modify a forwarding rule to direct network traffic to a new target.'
                'update:Update a Compute Engine forwarding rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute future-reservations')
            local -a commands
            commands=(
                'cancel:Cancel a Compute Engine future reservation.'
                'create:Create a Compute Engine reservation.'
                'delete:Delete a Compute Engine future reservation.'
                'describe:Show details about a Compute Engine future reservation.'
                'list:List Compute Engine future reservations.'
                'update:Update Compute Engine future reservations.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute health-checks')
            local -a commands
            commands=(
                'create:Create \(non-legacy\) health checks for load balanced instances.'
                'delete:Delete health checks.'
                'describe:Display detailed information about a health check.'
                'list:List Google Compute Engine health checks.'
                'update:Update health checks for load balanced instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute health-checks create')
            local -a commands
            commands=(
                'grpc:Create a gRPC health check to monitor load balanced instances.'
                'http:Create a HTTP health check to monitor load balanced instances.'
                'http2:Create a HTTP2 health check to monitor load balanced instances.'
                'https:Create a HTTPS health check to monitor load balanced instances.'
                'ssl:Create a SSL health check to monitor load balanced instances.'
                'tcp:Create a TCP health check to monitor load balanced instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute health-checks update')
            local -a commands
            commands=(
                'grpc:Update a gRPC health check.'
                'http:Update a HTTP health check.'
                'http2:Update a HTTP2 health check.'
                'https:Update a HTTPS health check.'
                'ssl:Update a SSL health check.'
                'tcp:Update a TCP health check.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute http-health-checks')
            local -a commands
            commands=(
                'create:Create a legacy HTTP health check.'
                'delete:Delete HTTP health checks.'
                'describe:Display detailed information about an HTTP health check.'
                'list:List Google Compute Engine health checks.'
                'update:Update a legacy HTTP health check.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute https-health-checks')
            local -a commands
            commands=(
                'create:Create a legacy HTTPS health check.'
                'delete:Delete HTTPS health checks.'
                'describe:Display detailed information about an HTTPS health check.'
                'list:List Google Compute Engine HTTPS health checks.'
                'update:Update a legacy HTTPS health check.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute images')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine image.'
                'add-labels:Add labels to Google Compute Engine images.'
                'create:Create Compute Engine images.'
                'delete:Delete Compute Engine images.'
                'deprecate:Manage deprecation status of Compute Engine images.'
                'describe:Describe a Compute Engine image.'
                'describe-from-family:Describe the latest image from an image family.'
                'export:Export a Compute Engine image.'
                'get-iam-policy:Get the IAM policy for a Compute Engine image.'
                'import:\(DEPRECATED\)  Import an image into Compute Engine.'
                'list:List Google Compute Engine images.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine image.'
                'remove-labels:Remove labels from Google Compute Engine images.'
                'set-iam-policy:Set the IAM policy for a Compute Engine image.'
                'update:Update a Compute Engine image.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-groups')
            local -a commands
            commands=(
                'describe:Display detailed information about an instance group.'
                'get-named-ports:Lists the named ports for an instance group resource.'
                'list:List Google Compute Engine instance groups.'
                'list-instances:List instances present in the instance group.'
                'managed:Read and manipulate Compute Engine managed instance groups.'
                'set-named-ports:Sets the list of named ports for an instance group.'
                'unmanaged:Read and manipulate Compute Engine unmanaged instance group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-groups managed')
            local -a commands
            commands=(
                'abandon-instances:Abandon instances owned by a managed instance group.'
                'all-instances-config:Override instance template settings for all instances in a managed instance group.'
                'create:Create a Compute Engine managed instance group.'
                'create-instance:Create a new virtual machine instance in a managed instance group with a defined name and optionally its stateful configuration.'
                'delete:Delete Compute Engine managed instance groups.'
                'delete-instances:Delete instances that are managed by a managed instance group.'
                'describe:Display detailed information about an instance group.'
                'describe-instance:Describe an instance in a managed instance group.'
                'get-named-ports:Lists the named ports for an instance group resource.'
                'instance-configs:Manage instance-specific settings in a managed instance group.'
                'list:List Google Compute Engine managed instance groups.'
                'list-errors:List errors produced by managed instances in a managed instance group.'
                'list-instances:List instances present in the managed instance group.'
                'recreate-instances:Recreate instances managed by a managed instance group.'
                'resize:Set managed instance group size.'
                'resize-requests:List, create, delete, cancel, and describe ResizeRequests.'
                'resume-instances:Resume the suspended instances in a managed instance group.'
                'rolling-action:Manipulate rolling actions on Compute Engine managed instance groups.'
                'set-autoscaling:Set autoscaling parameters of a managed instance group.'
                'set-instance-template:Set the instance template for a managed instance group.'
                'set-named-ports:Sets the list of named ports for an instance group.'
                'set-target-pools:Set target pools of managed instance group.'
                'start-instances:Start the stopped instances in a managed instance group.'
                'stop-autoscaling:Stop autoscaling a managed instance group.'
                'stop-instances:Stop instances owned by a managed instance group.'
                'suspend-instances:Suspend instances owned by a managed instance group.'
                'update:Update a Compute Engine managed instance group.'
                'update-autoscaling:Update autoscaling parameters of a managed instance group.'
                'update-instances:Immediately update selected instances in a Compute Engine managed instance group.'
                'wait-until:Wait until the managed instance group reaches the desired state.'
                'wait-until-stable:\(DEPRECATED\)  Waits until state of managed instance group is stable.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-groups managed all-instances-config')
            local -a commands
            commands=(
                'delete:Delete values defined in the all-instances configuration of a managed instance group.'
                'update:Update the all-instances configuration of a managed instance group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-groups managed instance-configs')
            local -a commands
            commands=(
                'create:Create a per-instance config for an instance in a managed instance group.'
                'delete:Delete per-instance configs from a managed instance group.'
                'list:List per-instance configs of a managed instance group.'
                'update:Update per-instance config of a managed instance group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-groups managed resize-requests')
            local -a commands
            commands=(
                'cancel:Cancel a Compute Engine managed instance group resize request.'
                'create:Create a Compute Engine managed instance group resize request.'
                'delete:Delete a Compute Engine managed instance group resize request.'
                'describe:Describe a Compute Engine managed instance group resize request resource.'
                'list:List Compute Engine managed instance group resize requests.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-groups managed rolling-action')
            local -a commands
            commands=(
                'replace:Replaces instances in a managed instance group.'
                'restart:Restarts instances in a managed instance group.'
                'start-update:Updates instances in a managed instance group.'
                'stop-proactive-update:Stop the proactive update process of managed instance group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-groups unmanaged')
            local -a commands
            commands=(
                'add-instances:Adds instances to an unmanaged instance group by name.'
                'create:Create a Compute Engine unmanaged instance group.'
                'delete:Delete Compute Engine unmanaged instance groups.'
                'describe:Describe an instance group.'
                'get-named-ports:Lists the named ports for an instance group resource.'
                'list:List Google Compute Engine unmanaged instance groups.'
                'list-instances:List instances present in the instance group.'
                'remove-instances:Removes resources from an unmanaged instance group by instance name.'
                'set-named-ports:Sets the list of named ports for an instance group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instance-templates')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine instance template.'
                'create:Create a Compute Engine virtual machine instance template.'
                'create-with-container:\(DEPRECATED\)  Creates a Compute Engine a virtual machine instance template that runs     a Docker container.'
                'delete:Delete Compute Engine virtual machine instance templates.'
                'describe:Describe a virtual machine instance template.'
                'get-iam-policy:Get the IAM policy for a Compute Engine instance template.'
                'list:List Google Compute Engine instance templates.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine instance template.'
                'set-iam-policy:Set the IAM policy for a Compute Engine instance template.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instances')
            local -a commands
            commands=(
                'add-access-config:Create a Compute Engine virtual machine access configuration.'
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine instance.'
                'add-labels:Add labels to Google Compute Engine virtual machine instances.'
                'add-metadata:Add or update instance metadata.'
                'add-resource-policies:Add resource policies to Compute Engine VM instances.'
                'add-tags:Add tags to Compute Engine virtual machine instances.'
                'attach-disk:Attach a disk to an instance.'
                'bulk:Manipulate multiple Compute Engine virtual machines with single command executions.'
                'create:Create Compute Engine virtual machine instances.'
                'create-with-container:\(DEPRECATED\)  Creates Compute Engine virtual machine instances running     container images.'
                'delete:Delete Compute Engine virtual machine instances.'
                'delete-access-config:Delete an access configuration from a virtual machine network interface.'
                'describe:Describe a virtual machine instance.'
                'detach-disk:Detach disks from Compute Engine virtual machine instances.'
                'export:Export a Compute Engine virtual machine instance'\''s configuration to a file.'
                'get-guest-attributes:Get the Guest Attributes for a compute instance.'
                'get-iam-policy:Get the IAM policy for a Compute Engine instance.'
                'get-screenshot:Capture a screenshot \(JPEG image\) of the virtual machine instance'\''s display.'
                'get-serial-port-output:Read output from a virtual machine instance'\''s serial port.'
                'get-shielded-identity:Get the Shielded identity for a Compute Engine instance.'
                'import:Create Compute Engine virtual machine instances from virtual appliance in OVA/OVF format.'
                'list:List Compute Engine instances.'
                'move:\(REMOVED\)  Move an instance and its attached persistent disks between zones.'
                'network-interfaces:Read and manipulate Compute Engine instance network interfaces.'
                'ops-agents:Manage Google Cloud Observability agents for Compute Engine VM instances.'
                'os-inventory:Read Compute Engine OS Inventory Data and Related Resources.'
                'perform-maintenance:Perform maintenance of Google Compute Engine instance.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine instance.'
                'remove-labels:Remove labels from Google Compute Engine virtual machine instances.'
                'remove-metadata:Remove instance metadata.'
                'remove-resource-policies:Remove resource policies from Compute Engine VM instances.'
                'remove-tags:Remove tags from Compute Engine virtual machine instances.'
                'report-host-as-faulty:Report a host as faulty to start the repair process.'
                'reset:Reset a virtual machine instance.'
                'resume:Resume a virtual machine instance.'
                'send-diagnostic-interrupt:Send a diagnostic interrupt to a virtual machine instance.'
                'set-disk-auto-delete:Set auto-delete behavior for disks.'
                'set-iam-policy:Set IAM policy for a Compute Engine instance.'
                'set-machine-type:Set machine type for Compute Engine virtual machines.'
                'set-name:Set the name of a Compute Engine virtual machine.'
                'set-scheduling:Set scheduling options for Compute Engine virtual machines.'
                'set-service-account:Set a service account and access scopes for a Compute Engine VM instance.'
                'simulate-maintenance-event:Simulate host maintenance of VM instances.'
                'start:Start a stopped virtual machine instance.'
                'stop:Stop a virtual machine instance.'
                'suspend:Suspend a virtual machine instance.'
                'tail-serial-port-output:Periodically fetch new output from a virtual machine instance'\''s serial port and display it as it becomes available.'
                'update:Update a Compute Engine virtual machine.'
                'update-access-config:Update a Compute Engine virtual machine access configuration.'
                'update-container:\(DEPRECATED\)  Updates Compute Engine virtual machine instances running container     images.'
                'update-from-file:Update a Compute Engine virtual machine instance using a configuration file.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instances bulk')
            local -a commands
            commands=(
                'create:Create multiple Compute Engine virtual machines.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instances network-interfaces')
            local -a commands
            commands=(
                'add:Add a Dynamic Network Interface to a Compute Engine instance.'
                'delete:Delete a Dynamic Network Interface from a Compute Engine instance.'
                'get-effective-firewalls:Get the effective firewalls for a Compute Engine virtual machine network interface.'
                'update:Update a Compute Engine virtual machine network interface.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instances ops-agents')
            local -a commands
            commands=(
                'policies:Manage Google Cloud Observability agents policies that install, update, and uninstall agents for Compute Engine VM instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instances ops-agents policies')
            local -a commands
            commands=(
                'create:Create a Google Cloud Observability agents policy for the Ops Agent.'
                'delete:Delete a Google Cloud Observability agents policy for the Ops Agent.'
                'describe:Describe a Google Cloud Observability agents policy for the Ops Agent.'
                'list:List a Google Cloud Observability agents policy for the Ops Agent.'
                'update:Update a Google Cloud Observability agents policy for the Ops Agent.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instances os-inventory')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine virtual instance'\''s OS inventory data.'
                'list-instances:List instances with specific OS inventory data values.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute instant-snapshots')
            local -a commands
            commands=(
                'add-labels:Add labels to Google Compute Engine instant-snapshotss.'
                'create:Create a Compute Engine instant snapshot.'
                'delete:Delete a Compute Engine instant snapshot.'
                'describe:Describe a Compute Engine instant snapshot.'
                'list:List Google Compute Engine instant snapshots.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects')
            local -a commands
            commands=(
                'application-awareness:Read and manipulate configuration for application awareness on Compute Engine interconnect.'
                'attachments:Read and manipulate Compute Engine interconnect attachments.'
                'create:Create a Compute Engine interconnect.'
                'cross-site-networks:Create or manipulate cross site networks.'
                'delete:Delete Compute Engine interconnects.'
                'describe:Describe a Compute Engine interconnect.'
                'get-diagnostics:Get diagnostics of a Compute Engine interconnect.'
                'groups:Create or manipulate interconnect groups.'
                'list:List Google Compute Engine interconnects.'
                'locations:Read and manipulate Compute Engine interconnect locations.'
                'macsec:Read and manipulate Compute Engine interconnect MACsec configuration.'
                'remote-locations:Read and manipulate Google Compute Engine interconnect remote locations.'
                'update:Update a Compute Engine interconnect.'
                'wire-groups:Create or manipulate wire groups.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects application-awareness')
            local -a commands
            commands=(
                'configure-bandwidth-percentage-policy:Configure bandwidth percentage policy for application awareness configuration of a Compute Engine interconnect.'
                'configure-shaper-average-percentage:Configure shaper average percentage for application awareness configuration of a Compute Engine interconnect.'
                'configure-strict-priority-policy:Configure strict priority policy for application awareness configuration of a Compute Engine interconnect.'
                'delete:Delete application awareness configuration of a Compute Engine interconnect.'
                'get-config:Get application awareness configuration of a Compute Engine interconnect.'
                'update:Updates application awareness configuration of a Compute Engine interconnect.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects attachments')
            local -a commands
            commands=(
                'dedicated:Create or manipulate dedicated interconnect attachments.'
                'delete:Delete Compute Engine interconnect attachments.'
                'describe:Describe a Compute Engine interconnect attachment.'
                'groups:Create or manipulate interconnect attachment groups.'
                'list:List Google Compute Engine interconnect attachments.'
                'partner:Create or manipulate partner interconnect attachments.'
                'provider:Create or manipulate partner provider interconnect attachments.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects attachments dedicated')
            local -a commands
            commands=(
                'create:Create a Compute Engine dedicated interconnect attachment.'
                'update:Update a Compute Engine dedicated interconnect attachment.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects attachments groups')
            local -a commands
            commands=(
                'add-members:Add member interconnect attachments to a Compute Engine interconnect attachment group.'
                'create:Create a Compute Engine interconnect attachment group.'
                'delete:Delete Compute Engine interconnect attachment groups.'
                'describe:Describe a Compute Engine interconnect attachment group.'
                'get-operational-status:Get the operational status of a Compute Engine interconnect attachment group.'
                'list:List interconnect attachment groups.'
                'remove-members:Remove member interconnect attachments from a Compute Engine interconnect attachment group.'
                'update:Update a Compute Engine interconnect attachment group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects attachments partner')
            local -a commands
            commands=(
                'create:Create a Compute Engine partner interconnect attachment.'
                'update:Update a Compute Engine partner interconnect attachment.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects attachments provider')
            local -a commands
            commands=(
                'create:Create a Compute Engine partner provider interconnect attachment.'
                'update:Update a Compute Engine partner provider interconnect attachment.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects cross-site-networks')
            local -a commands
            commands=(
                'create:Create a Compute Engine cross site network.'
                'delete:Delete Compute Engine cross site networks.'
                'describe:Describe a Compute Engine cross site network.'
                'list:List Google Compute Engine cross site networks.'
                'update:Update a Compute Engine cross site network.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects groups')
            local -a commands
            commands=(
                'add-members:Add member interconnects to a Compute Engine interconnect group.'
                'create:Create a Compute Engine interconnect group.'
                'create-members:Create new member interconnects in a Compute Engine interconnect group.'
                'delete:Delete Compute Engine interconnect groups.'
                'describe:Describe a Compute Engine interconnect group.'
                'get-operational-status:Get the operational status of a Compute Engine interconnect group.'
                'list:List interconnect groups.'
                'remove-members:Remove member interconnects from a Compute Engine interconnect group.'
                'update:Update a Compute Engine interconnect group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects locations')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine interconnect location.'
                'list:List Google Compute Engine interconnect locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects macsec')
            local -a commands
            commands=(
                'add-key:Add pre-shared key to a Compute Engine interconnect MACsec configuration.'
                'get-config:Get MACsec configuration of a Compute Engine interconnect.'
                'remove-key:Remove pre-shared key from a Compute Engine interconnect MACsec configuration.'
                'update:Update a Compute Engine interconnect MACsec configuration.'
                'update-key:Update pre-shared key in a Compute Engine interconnect MACsec configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects remote-locations')
            local -a commands
            commands=(
                'describe:Describe a Google Compute Engine interconnect remote location.'
                'list:List Google Compute Engine Cloud Interconnect remote locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute interconnects wire-groups')
            local -a commands
            commands=(
                'add-endpoint:Add endpoint to a Compute Engine wire group.'
                'add-interconnect:Add interconnect to a Compute Engine wire group.'
                'create:Create a Compute Engine wire group.'
                'delete:Delete Compute Engine wire groups.'
                'describe:Describe a Compute Engine wire group.'
                'list:List Google Compute Engine wire groups.'
                'remove-endpoint:Remove endpoint from a Compute Engine wire group.'
                'remove-interconnect:Remove interconnect from a wire group.'
                'update:Update a Compute Engine wire group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute machine-images')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to the IAM policy of a Compute Engine machine image.'
                'create:Create a Compute Engine machine image.'
                'delete:Delete a Compute Engine machine image.'
                'describe:Describe a Compute Engine machine image.'
                'get-iam-policy:Get the IAM policy for a Compute Engine machine image.'
                'import:\(DEPRECATED\)  Create a Compute Engine machine image from virtual appliance in OVA/OVF format.'
                'list:List Google Compute Engine machine images.'
                'remove-iam-policy-binding:Remove IAM policy binding from the IAM policy of a Compute Engine machine image.'
                'set-iam-policy:Set the IAM policy for a Compute Engine machine image.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute machine-types')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine machine type.'
                'list:List Google Compute Engine machine types.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute migration')
            local -a commands
            commands=(
                'image-imports:Imports images to Google Compute Engine from Google Cloud Storage.'
                'machine-image-imports:Imports machine images to Google Compute Engine from Google Cloud Storage.'
                'target-projects:Manage Target Projects.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute migration image-imports')
            local -a commands
            commands=(
                'create:import Virtual Disk images to Google Compute Engine.'
                'delete:delete an Image Import resource.'
                'describe:describe an Image Import.'
                'list:list Image Imports.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute migration machine-image-imports')
            local -a commands
            commands=(
                'create:import machine images to Google Compute Engine.'
                'delete:delete an Image Import resource.'
                'describe:describe an Image Import.'
                'list:list Image Imports.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute migration target-projects')
            local -a commands
            commands=(
                'list:list Target Projects.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-attachments')
            local -a commands
            commands=(
                'create:Create a Google Compute Engine network attachment.'
                'delete:Delete one or more Google Compute Engine network attachments.'
                'describe:Describes a Google Compute Engine network attachment.'
                'list:List Google Compute Engine network attachments.'
                'update:Update a Google Compute Engine network attachment.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-edge-security-services')
            local -a commands
            commands=(
                'create:Create a Compute Engine network edge security service.'
                'delete:Delete network edge security services.'
                'describe:Describe a Compute Engine network edge security service.'
                'list:List Google Compute Engine network edge security services.'
                'update:Update a network edge security service.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-endpoint-groups')
            local -a commands
            commands=(
                'create:Create a Compute Engine network endpoint group.'
                'delete:Delete a Compute Engine network endpoint group.'
                'describe:Describe a Compute Engine network endpoint group.'
                'list:List Google Compute Engine network endpoint groups.'
                'list-network-endpoints:List network endpoints in a network endpoint group.'
                'update:Update a Compute Engine network endpoint group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-firewall-policies')
            local -a commands
            commands=(
                'associations:Read and manipulate Compute Engine network firewall policy associations.'
                'clone-rules:Replace the rules of a Compute Engine network firewall policy with rules from another policy.'
                'create:Create a Compute Engine Network firewall policy.'
                'delete:Delete a Compute Engine network firewall policy.'
                'describe:Describe a Compute Engine network firewall policy.'
                'export-rules:Export Compute Engine network firewall policy rules.'
                'get-effective-firewalls:Get the effective firewalls for a network.'
                'import-rules:Import a Compute Engine network firewall policy rules.'
                'list:List Compute Engine network firewall policies.'
                'mirroring-rules:Read and manipulate Compute Engine packet mirroring rules in network firewall policy.'
                'rules:Read and manipulate Compute Engine network firewall policy rules.'
                'update:Update a Compute Engine network firewall policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-firewall-policies associations')
            local -a commands
            commands=(
                'create:Create a new association between a firewall policy and a network.'
                'delete:Delete a new association between a firewall policy and an network or folder resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-firewall-policies mirroring-rules')
            local -a commands
            commands=(
                'create:Creates a Compute Engine network firewall policy packet mirroring rule.'
                'delete:Deletes a Compute Engine network firewall policy packet mirroirng rule.'
                'describe:Describes a Compute Engine network firewall policy pakcet mirroring rule.'
                'update:Updates a Compute Engine network firewall policy packet mirroring rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-firewall-policies rules')
            local -a commands
            commands=(
                'create:Creates a Compute Engine network firewall policy rule.'
                'delete:Deletes a Compute Engine network firewall policy rule.'
                'describe:Describes a Compute Engine network firewall policy rule.'
                'update:Updates a Compute Engine network firewall policy rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute network-profiles')
            local -a commands
            commands=(
                'describe:Describe a network profile.'
                'list:List network profiles.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute networks')
            local -a commands
            commands=(
                'create:Create a Compute Engine network.'
                'delete:Delete Compute Engine networks.'
                'describe:Describe a Compute Engine network.'
                'get-effective-firewalls:Get the effective firewalls of a Compute Engine network.'
                'list:List Google Compute Engine networks.'
                'peerings:List, create, and delete, and update VPC Network Peering.'
                'subnets:List, describe, and delete, and update Compute Engine subnetworks.'
                'update:Update a Compute Engine network.'
                'vpc-access:Manage VPC Access Service resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute networks peerings')
            local -a commands
            commands=(
                'create:Create a Compute Engine network peering.'
                'delete:Delete a Compute Engine network peering.'
                'list:List Google Compute Engine peerings.'
                'list-routes:List received or advertised routes for a VPC network peering.'
                'request-delete:Request deletion of a Compute Engine network peering.'
                'update:Update a Compute Engine network peering.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute networks subnets')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Compute Engine subnetwork.'
                'create:Define a subnet for a network in custom subnet mode.'
                'delete:Delete Google Cloud subnetworks.'
                'describe:Describe a Compute Engine subnetwork.'
                'expand-ip-range:Expand the IP range of a Compute Engine subnetwork.'
                'get-iam-policy:Get the IAM policy for a Compute Engine subnetwork.'
                'list:List Google Compute Engine subnetworks.'
                'list-usable:List Compute Engine subnetworks permitted for use.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Compute Engine subnetwork.'
                'set-iam-policy:Set the IAM policy for a Compute Engine subnetwork.'
                'update:Updates properties of an existing Compute Engine subnetwork.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute networks vpc-access')
            local -a commands
            commands=(
                'connectors:Manage Serverless VPC Access Service connectors.'
                'locations:Manage locations resource for VPC Access Service.'
                'operations:Manage operations resource for VPC Access Service.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute networks vpc-access connectors')
            local -a commands
            commands=(
                'create:Create a VPC Access connector.'
                'delete:Delete a VPC Access connector.'
                'describe:Show metadata for a VPC Access connector.'
                'list:List VPC Access connectors.'
                'update:Update a VPC Access connector.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute networks vpc-access locations')
            local -a commands
            commands=(
                'list:List VPC Access Service regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute networks vpc-access operations')
            local -a commands
            commands=(
                'describe:Show metadata for a VPC Access Service operation.'
                'list:List VPC Access Service operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute operations')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine operation.'
                'list:List Google Compute Engine operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute org-security-policies')
            local -a commands
            commands=(
                'associations:Read and manipulate Compute Engine organization security policy associations.'
                'copy-rules:Replace the rules of a Compute Engine organization security policy with rules from another policy.'
                'create:Create a Compute Engine organization security policy.'
                'delete:Delete a Compute Engine organization security policy.'
                'describe:Describe a Compute Engine organization security policy.'
                'list:List Compute Engine organization security policies.'
                'list-rules:List the rules of a Compute Engine organization security policy.'
                'move:Move a Compute Engine organization security policy.'
                'rules:Read and manipulate Compute Engine organization security policy rules.'
                'update:Update a Compute Engine organization security policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute org-security-policies associations')
            local -a commands
            commands=(
                'create:Create a new association between a security policy and an organization or folder resource.'
                'delete:Delete a Compute Engine organization security policy association.'
                'list:List the associations of an organization or folder resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute org-security-policies rules')
            local -a commands
            commands=(
                'add-preconfig-waf-exclusion:Add an exclusion configuration for preconfigured WAF evaluation into a security policy rule.'
                'create:Create a Compute Engine organizationsecurity policy rule.'
                'delete:Delete a Compute Engine organization security policy rule.'
                'describe:Describe a Compute Engine organization security policy rule.'
                'remove-preconfig-waf-exclusion:Remove an exclusion configuration for preconfigured WAF evaluation from a security policy rule.'
                'update:Update a Compute Engine security policy rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config')
            local -a commands
            commands=(
                'inventories:Display inventory of a Compute Engine VM.'
                'os-policy-assignment-reports:Manage OS policy asssignment reports.'
                'os-policy-assignments:Manage OS policy assignments.'
                'patch-deployments:Manage guest OS patch deployments for Compute Engine VM instances.'
                'patch-jobs:Manage OS patches for Compute Engine VMs.'
                'policy-orchestrators:Manage VM Manager policy orchestrators.'
                'project-feature-settings:Manage VM Manager project feature settings.'
                'troubleshoot:Troubleshoot issues with the setup of VM Manager on a specified VM instance.'
                'vulnerability-reports:Display vulnerability reports for a Compute Engine VM.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config inventories')
            local -a commands
            commands=(
                'describe:Describe the inventory data for a Compute Engine VM instance.'
                'list:List inventory data for all Compute Engine VM instances in a specified location.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config os-policy-assignment-reports')
            local -a commands
            commands=(
                'describe:Describe an OS policy assignment report.'
                'list:List OS policy assignment reports.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config os-policy-assignments')
            local -a commands
            commands=(
                'create:Create an OS policy assignment.'
                'delete:Delete an OS policy assignment.'
                'describe:Describe an OS policy assignment.'
                'list:List OS policy assignments for a specified location.'
                'list-revisions:List the revisions of an OS policy assignment.'
                'operations:Manage long-running operations generated from creating or editing OS policy assignments.'
                'update:Update an OS policy assignment.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config os-policy-assignments operations')
            local -a commands
            commands=(
                'cancel:Cancel an OS policy assignment operation.'
                'describe:Describe an OS policy assignment operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config patch-deployments')
            local -a commands
            commands=(
                'create:Create a patch deployment for a project.'
                'delete:Delete the specified patch deployment.'
                'describe:Describe the specified patch deployment.'
                'list:List patch deployments in a project.'
                'pause:Pause patch deployment in a project.'
                'resume:Resume patch deployment in a project.'
                'update:Update patch deployment in a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config patch-jobs')
            local -a commands
            commands=(
                'cancel:Cancel a specific OS patch job which must currently be active.'
                'describe:Describe a specified OS patch job.'
                'execute:Execute an OS patch on the specified VM instances.'
                'list:List ongoing and completed patch jobs.'
                'list-instance-details:List the instance details for an OS patch job.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config policy-orchestrators')
            local -a commands
            commands=(
                'create:Create a policy orchestrator.'
                'delete:Delete a policy orchestrator.'
                'describe:Describe a policy orchestrator.'
                'list:List policy orchestrators.'
                'update:Update a policy orchestrator.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config project-feature-settings')
            local -a commands
            commands=(
                'describe:Get all VM Manager project feature settings.'
                'update:Update VM Manager project feature settings.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-config vulnerability-reports')
            local -a commands
            commands=(
                'describe:Describe the vulnerability report data for a Compute Engine VM instance.'
                'list:List vulnerability report data for all Compute Engine VM instances in a specified location.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-login')
            local -a commands
            commands=(
                'describe-profile:Describe the OS Login profile for the current user.'
                'remove-profile:Remove the posix account information for the current user.'
                'ssh-keys:List, add, update, and remove OS Login SSH Keys.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute os-login ssh-keys')
            local -a commands
            commands=(
                'add:Add an SSH public key to an OS Login profile.'
                'describe:Describe an SSH Public Key from an OS Login Profile.'
                'list:List SSH public keys from an OS Login profile.'
                'remove:Remove an SSH public key from an OS Login profile.'
                'update:Update an SSH public key in an OS Login profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute packet-mirrorings')
            local -a commands
            commands=(
                'create:Create a Compute Engine packet mirroring policy.'
                'delete:Delete a Compute Engine packet mirroring policy.'
                'describe:Describe a Compute Engine packet mirroring policy.'
                'list:List Google Compute Engine packet mirroring policies.'
                'update:Update a Compute Engine packet mirroring policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute preview-features')
            local -a commands
            commands=(
                'describe:Describe a preview feature.'
                'list:View preview features.'
                'update:Update a preview feature'\''s activation status.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute project-info')
            local -a commands
            commands=(
                'add-metadata:Add or update project-wide metadata.'
                'describe:Describe the Compute Engine project resource.'
                'remove-metadata:Remove project-wide metadata entries.'
                'set-usage-bucket:Set usage reporting bucket for a project.'
                'update:Update a Compute Engine project resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute project-zonal-metadata')
            local -a commands
            commands=(
                'add:Add or update project zonal metadata.'
                'describe:Describe project zonal metadata.'
                'remove:Remove project zonal metadata.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute public-advertised-prefixes')
            local -a commands
            commands=(
                'create:Creates a Compute Engine public advertised prefix.'
                'delete:Deletes a Compute Engine public advertised prefix.'
                'describe:Describes a Compute Engine public advertised prefix.'
                'list:List Google Compute Engine public advertised prefixes.'
                'update:Updates a Compute Engine public advertised prefix.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute public-delegated-prefixes')
            local -a commands
            commands=(
                'create:Creates a Compute Engine public delegated prefix.'
                'delegated-sub-prefixes:Manage delegated sub prefixes.'
                'delete:Deletes a Compute Engine public delegated prefix.'
                'describe:Describes a Compute Engine public delegated prefix.'
                'list:List Google Compute Engine public delegated prefixes.'
                'update:Updates a Compute Engine public delegated prefix.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute public-delegated-prefixes delegated-sub-prefixes')
            local -a commands
            commands=(
                'create:Creates a Compute Engine delegated sub prefix.'
                'delete:Deletes a Compute Engine delegated sub prefix.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute regions')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine region.'
                'list:List Google Compute Engine regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute reservations')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine reservation.'
                'blocks:Manage Compute Engine reservation blocks.'
                'create:Create a Compute Engine reservation.'
                'delete:Delete a Compute Engine reservation.'
                'describe:Show details about a Compute Engine reservation.'
                'get-iam-policy:Get the IAM policy for a Compute Engine reservation.'
                'list:List Compute Engine reservations.'
                'perform-maintenance:Perform maintenance on a reservation, only applicable to reservations with reservation blocks.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine reservation.'
                'set-iam-policy:Set the IAM policy for a Compute Engine reservation.'
                'sub-blocks:Manage Compute Engine reservation sub blocks.'
                'update:Update Compute Engine reservations.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute reservations blocks')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine reservation block.'
                'list:List Compute Engine reservation blocks.'
                'perform-maintenance:Perform maintenance on a reservation block within a reservation.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute reservations sub-blocks')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine reservation sub-block.'
                'list:List Compute Engine reservation sub-blocks.'
                'perform-maintenance:Perform maintenance on a reservation sub-block.'
                'report-subblock-as-faulty:Report a sub-block within a reservation as faulty.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute resource-policies')
            local -a commands
            commands=(
                'create:Create Compute Engine Resource Policies.'
                'delete:Delete a Compute Engine resource policy.'
                'describe:Describe a Compute Engine resource policy.'
                'get-iam-policy:Get the IAM policy for a Compute Engine resource policy.'
                'list:List Google Compute Engine resource policies.'
                'set-iam-policy:Set the IAM policy for a Compute Engine resource policy.'
                'update:Update Compute Engine Resource Policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute resource-policies create')
            local -a commands
            commands=(
                'disk-consistency-group:Create a Compute Engine Disk Consistency Group resource policy.'
                'group-placement:Create a Compute Engine group placement resource policy.'
                'instance-schedule:Create a Compute Engine instance schedule resource policy.'
                'snapshot-schedule:Create a Compute Engine Snapshot Schedule Resource Policy.'
                'workload-policy:Create a Compute Engine workload resource policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute resource-policies update')
            local -a commands
            commands=(
                'instance-schedule:Update a Compute Engine Instance Schedule Resource Policy.'
                'snapshot-schedule:Update a Compute Engine Snapshot Schedule Resource Policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute routers')
            local -a commands
            commands=(
                'add-bgp-peer:Add a BGP peer to a Compute Engine router.'
                'add-interface:Add an interface to a Compute Engine router.'
                'add-route-policy:Add an empty route policy to a Compute Engine router.'
                'add-route-policy-term:Adds a new term to an existing route policy of a Comute Engine router.'
                'create:Create a Compute Engine router.'
                'delete:Delete Compute Engine routers.'
                'describe:Describe a Compute Engine router.'
                'download-route-policy:Download a route policy from a Compute Engine router.'
                'get-nat-ip-info:Display NAT IP information in a router.'
                'get-nat-mapping-info:Display NAT Mapping information in a router.'
                'get-route-policy:Get a route policy from a Compute Engine router.'
                'get-status:Get status of a Compute Engine router.'
                'list:List Google Compute Engine routers.'
                'list-bgp-routes:List routes advertised and learned on individual BGP sessions, both pre- and post-policy evaluation.'
                'list-route-policies:List route policies from a Compute Engine router.'
                'nats:List, create, describe, and delete Cloud NAT.'
                'remove-bgp-peer:Remove a BGP peer from a Compute Engine router.'
                'remove-interface:Remove an interface from a Compute Engine router.'
                'remove-route-policy:Remove a route policy from a Compute Engine router.'
                'remove-route-policy-term:Remove a route policy term of a Compute Engine router.'
                'update:Update a Compute Engine router.'
                'update-bgp-peer:Update a BGP peer on a Compute Engine router.'
                'update-interface:Update an interface on a Compute Engine router.'
                'update-route-policy-term:Updates a term of an existing route policy of a Comute Engine router.'
                'upload-route-policy:Upload a route policy into a Compute Engine router.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute routers nats')
            local -a commands
            commands=(
                'create:Add a NAT to a Compute Engine router.'
                'delete:Remove a NAT from a Compute Engine router.'
                'describe:Describe a NAT in a Compute Engine router.'
                'list:Lists the NATs on a Compute Engine router.'
                'rules:List, create, update, describe, and delete Cloud NAT Rules.'
                'update:Update a NAT on a Compute Engine router.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute routers nats rules')
            local -a commands
            commands=(
                'create:Add a Rule to a Compute Engine NAT.'
                'delete:Delete a Rule in a Compute Engine NAT.'
                'describe:Describe a Rule in a Compute Engine NAT.'
                'list:Lists the NATs on a Compute Engine router.'
                'update:Update a Rule in a Compute Engine NAT.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute routes')
            local -a commands
            commands=(
                'create:Create a new route.'
                'delete:Delete routes.'
                'describe:Describe a route.'
                'list:List non-dynamic Google Compute Engine routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute security-policies')
            local -a commands
            commands=(
                'add-layer7-ddos-defense-threshold-config:Add a layer7 ddos defense threshold config to a Compute Engine security policy.'
                'add-user-defined-field:Add a user defined field to a Compute Engine security policy.'
                'create:Create a Compute Engine security policy.'
                'delete:Delete security policies.'
                'describe:Describe a Compute Engine security policy.'
                'export:Export security policy configs into YAML or JSON files.'
                'import:Import security policy configs into your project.'
                'list:List Google Compute Engine security policies.'
                'list-preconfigured-expression-sets:List all available preconfigured expression sets.'
                'remove-layer7-ddos-defense-threshold-config:Remove a layer7 ddos defense threshold config from a Compute Engine security policy.'
                'remove-user-defined-field:Remove a user defined field from a Compute Engine security policy.'
                'rules:Read and manipulate Compute Engine security policies rules.'
                'update:Update a Compute Engine security policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute security-policies rules')
            local -a commands
            commands=(
                'add-preconfig-waf-exclusion:Add an exclusion configuration for preconfigured WAF evaluation into a security policy rule.'
                'create:Create a Compute Engine security policy rule.'
                'delete:Delete Compute Engine security policy rules.'
                'describe:Describe a Compute Engine security policy rule.'
                'remove-preconfig-waf-exclusion:Remove an exclusion configuration for preconfigured WAF evaluation from a security policy rule.'
                'update:Update a Compute Engine security policy rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute service-attachments')
            local -a commands
            commands=(
                'create:Create a Google Compute Engine service attachment.'
                'delete:Delete one or more Google Compute Engine service attachments.'
                'describe:Display details about a Google Compute Engine service attachment.'
                'list:List Google Compute Engine service attachments.'
                'update:Update a Google Compute Engine service attachment.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute shared-vpc')
            local -a commands
            commands=(
                'associated-projects:Configure associated projects for Shared VPC networking.'
                'disable:Disable the given project as a shared VPC host.'
                'enable:Enable the given project as a shared VPC host.'
                'get-host-project:Get the shared VPC host project that the given project is associated with.'
                'list-associated-resources:List the resources associated with the given shared VPC host project.'
                'organizations:Configure organizations for Shared VPC networking.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute shared-vpc associated-projects')
            local -a commands
            commands=(
                'add:Associate the given project with a given shared VPC host project.'
                'list:List the associated service projects of the given host project.'
                'remove:Disassociate the given project from the given shared VPC host project.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute shared-vpc organizations')
            local -a commands
            commands=(
                'list-host-projects:List shared VPC host projects in a given organization.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute snapshot-settings')
            local -a commands
            commands=(
                'describe:Describe snapshot settings.'
                'update:Update snapshot settings.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute snapshots')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine snapshot.'
                'add-labels:Add labels to Google Compute Engine snapshots.'
                'create:Create Compute Engine snapshots.'
                'delete:Delete Compute Engine snapshots.'
                'describe:Describe a Compute Engine snapshot.'
                'get-iam-policy:Get the IAM policy for a Compute Engine snapshot.'
                'list:List Google Compute Engine snapshots.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine snapshot.'
                'remove-labels:Remove labels from Google Compute Engine snapshots.'
                'set-iam-policy:Set the IAM policy for a Compute Engine snapshot.'
                'update:Update a Compute Engine snapshot.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute sole-tenancy')
            local -a commands
            commands=(
                'node-groups:Read Compute Engine sole-tenancy node groups.'
                'node-templates:Read and manage Compute Engine sole-tenancy node templates.'
                'node-types:Read Compute Engine sole-tenancy node types.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute sole-tenancy node-groups')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine node group.'
                'create:Create a Compute Engine node group.'
                'delete:Delete a Compute Engine node group.'
                'describe:Describe a Compute Engine node group.'
                'get-iam-policy:Get the IAM policy for a Compute Engine node group.'
                'list:List Google Compute Engine node groups.'
                'list-nodes:List Compute Engine sole-tenant nodes present in a nodegroup.'
                'perform-maintenance:Perform maintenance on nodes in a Compute Engine node group.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine node group.'
                'set-iam-policy:Set the IAM policy for a Compute Engine node group.'
                'simulate-maintenance-event:Simulate maintenance of a Compute Engine node group.'
                'update:Update a Compute Engine node group.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute sole-tenancy node-templates')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Compute Engine node template.'
                'create:Create a Compute Engine node template.'
                'delete:Delete a Compute Engine node template.'
                'describe:Describe a Compute Engine node template.'
                'get-iam-policy:Get the IAM Policy for a Compute Engine node template.'
                'list:List Google Compute Engine node templates.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Compute Engine node template.'
                'set-iam-policy:Set the IAM policy for a Compute Engine node template.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute sole-tenancy node-types')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine node type.'
                'list:List Google Compute Engine node types.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute ssl-certificates')
            local -a commands
            commands=(
                'create:Create a Compute Engine SSL certificate.'
                'delete:Delete Compute Engine SSL certificates.'
                'describe:Describe a Compute Engine SSL certificate.'
                'list:List Google Compute Engine SSL certificates.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute ssl-policies')
            local -a commands
            commands=(
                'create:Create a new Compute Engine SSL policy.'
                'delete:Delete Compute Engine SSL policies.'
                'describe:Describe a Compute Engine ssl policy.'
                'list:List Google Compute Engine SSL policies.'
                'list-available-features:List available features that can be specified in an SSL policy.'
                'update:Update a Compute Engine SSL policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute storage-pool-types')
            local -a commands
            commands=(
                'describe:Describe a storage pool type.'
                'list:View storage pools types.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute storage-pools')
            local -a commands
            commands=(
                'create:Create a storage pool.'
                'delete:Delete a storage pool.'
                'describe:Describe a storage pool.'
                'get-iam-policy:Get the IAM policy of a storage pool.'
                'list:View storage pools.'
                'list-disks:View the disks that are in a storage pool.'
                'set-iam-policy:Set the IAM policy of the given storage pool.'
                'update:Update a storage pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-grpc-proxies')
            local -a commands
            commands=(
                'create:Create a target gRPC proxy.'
                'delete:Delete one or more target gRPC proxy.'
                'describe:Display detailed information about a target gRPC proxy.'
                'list:List Google Compute Engine target gRPC proxies.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-http-proxies')
            local -a commands
            commands=(
                'create:Create a target HTTP proxy.'
                'delete:Delete target HTTP proxies.'
                'describe:Display detailed information about a target HTTP proxy.'
                'export:Export a target HTTP proxy.'
                'import:Import a target HTTP proxy.'
                'list:List Google Compute Engine target HTTP proxies.'
                'update:Update a target HTTP proxy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-https-proxies')
            local -a commands
            commands=(
                'create:Create a target HTTPS proxy.'
                'delete:Delete target HTTPS proxies.'
                'describe:Display detailed information about a target HTTPS proxy.'
                'export:Export a target HTTPS proxy.'
                'import:Import a target HTTPS proxy.'
                'list:List Google Compute Engine target HTTPS proxies.'
                'update:Update a target HTTPS proxy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-instances')
            local -a commands
            commands=(
                'create:Create a target instance for handling traffic from a forwarding rule.'
                'delete:Delete target instances.'
                'describe:Describe a target instance.'
                'list:List Google Compute Engine target instances.'
                'update:Update a Compute Engine target instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-pools')
            local -a commands
            commands=(
                'add-health-checks:Add a legacy HTTP health check to a target pool.'
                'add-instances:Add instances to a target pool.'
                'create:Define a load-balanced pool of virtual machine instances.'
                'delete:Delete target pools.'
                'describe:Describe a Compute Engine target pool.'
                'get-health:Get the health of instances in a target pool.'
                'list:List Google Compute Engine target pools.'
                'remove-health-checks:Remove an HTTP health check from a target pool.'
                'remove-instances:Remove instances from a target pool.'
                'set-backup:Set a backup pool for a target pool.'
                'update:Update a Compute Engine target pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-ssl-proxies')
            local -a commands
            commands=(
                'create:Create a target SSL proxy.'
                'delete:Delete target SSL proxies.'
                'describe:Display detailed information about a target SSL proxy.'
                'list:List Google Compute Engine target SSL proxies.'
                'update:Update a target SSL proxy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-tcp-proxies')
            local -a commands
            commands=(
                'create:Create a target TCP proxy.'
                'delete:Delete target TCP proxies.'
                'describe:Display detailed information about a target TCP proxy.'
                'list:List Google Compute Engine target TCP proxies.'
                'update:Update a target TCP proxy.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute target-vpn-gateways')
            local -a commands
            commands=(
                'create:Create a Cloud VPN Classic Target VPN Gateway.'
                'delete:Delete Cloud VPN Classic Target VPN Gateways.'
                'describe:Describe a Compute Engine Cloud VPN Classic Target VPN Gateway.'
                'list:List Google Compute Engine Cloud VPN Classic Target VPN Gateways.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus')
            local -a commands
            commands=(
                'accelerator-types:List or Describe Available Cloud TPU accelerator types.'
                'locations:List or Describe Available Cloud TPU Locations.'
                'queued-resources:List, create, delete, and manage Queued Resources.'
                'topologies:List available Cloud TPU topologies.'
                'tpu-vm:List, create, and manage Cloud TPU VM nodes.'
                'versions:Explore Available Tensorflow versions for Cloud TPUs.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus accelerator-types')
            local -a commands
            commands=(
                'describe:Describe an accelerator type available for Cloud TPUs.'
                'list:List available accelerator types for Cloud TPUs.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus locations')
            local -a commands
            commands=(
                'describe:Describe a Cloud TPU Location.'
                'list:List available locations for Cloud TPUs.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus queued-resources')
            local -a commands
            commands=(
                'create:Create a Queued Resource.'
                'delete:Delete a Queued Resource.'
                'describe:Describe a Queued Resource.'
                'list:List Queued Resources.'
                'reset:Reset a Queued Resource.'
                'scp:Copy files to and from a Cloud TPU Queued Resource via SCP.'
                'ssh:SSH into a Cloud TPU Queued Resource'\''s node\(s\).'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus topologies')
            local -a commands
            commands=(
                'list:List available topologies for Cloud TPUs.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus tpu-vm')
            local -a commands
            commands=(
                'accelerator-types:List or Describe Available Cloud TPU VM node accelerator types.'
                'create:Create a new Cloud TPU VM node.'
                'delete:Delete a Cloud TPU VM node.'
                'describe:Describe a Cloud TPU VM node.'
                'get-guest-attributes:Retrieve the Guest Attributes for a Cloud TPU VM.'
                'list:List Cloud TPU VM nodes.'
                'scp:Copy files to and from a Cloud TPU VM via SCP.'
                'service-identity:Commands for Cloud TPU VM service identity.'
                'ssh:SSH into a Cloud TPU VM.'
                'start:Start a Cloud TPU VM node.'
                'stop:Stop a Cloud TPU VM node.'
                'update:Update a Cloud TPU VM node.'
                'versions:Explore available runtime versions for Cloud TPU VM nodes.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus tpu-vm accelerator-types')
            local -a commands
            commands=(
                'describe:Describe an accelerator type available for Cloud TPU VM nodes.'
                'list:List available accelerator types for Cloud TPU VM nodes.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus tpu-vm service-identity')
            local -a commands
            commands=(
                'create:Create a Cloud TPU VM service identity for a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus tpu-vm versions')
            local -a commands
            commands=(
                'describe:Describe a runtime version available for Cloud TPU VM nodes.'
                'list:List available runtime versions for Cloud TPU VM nodes.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute tpus versions')
            local -a commands
            commands=(
                'describe:Describe a Tensorflow version available for Cloud TPUs.'
                'list:List available Tensorflow versions.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute url-maps')
            local -a commands
            commands=(
                'add-host-rule:Add a rule to a URL map to map hosts to a path matcher.'
                'add-path-matcher:Add a path matcher to a URL map.'
                'create:Create a URL map.'
                'delete:Delete URL maps.'
                'describe:Describe a URL map.'
                'edit:Modify URL maps.'
                'export:Export a URL map.'
                'import:Import a URL map.'
                'invalidate-cdn-cache:Invalidate specified objects for a URL map in Cloud CDN caches.'
                'list:List Google Compute Engine URL maps.'
                'list-cdn-cache-invalidations:List Cloud CDN cache invalidations for a URL map.'
                'remove-host-rule:Remove a host rule from a URL map.'
                'remove-path-matcher:Remove a path matcher from a URL map.'
                'set-default-service:Change the default service or default bucket of a URL map.'
                'validate:Validate a URL map.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute vpn-gateways')
            local -a commands
            commands=(
                'create:Create a new Compute Engine Highly Available VPN gateway.'
                'delete:Delete Compute Engine Highly Available VPN Gateways.'
                'describe:Describe a Compute Engine Highly Available VPN Gateway.'
                'get-status:Get status of a Compute Engine Highly Available VPN Gateway.'
                'list:List Google Compute Engine Highly Available VPN Gateways.'
                'update:Update a Compute Engine Highly Available VPN gateway.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute vpn-tunnels')
            local -a commands
            commands=(
                'create:Create a VPN tunnel.'
                'delete:Delete VPN tunnels.'
                'describe:Describe a Compute Engine VPN tunnel.'
                'list:List Google Compute Engine VPN tunnels.'
            )
            _describe 'command' commands
            ;;
        'gcloud compute zones')
            local -a commands
            commands=(
                'describe:Describe a Compute Engine zone.'
                'list:List Google Compute Engine zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud config')
            local -a commands
            commands=(
                'config-helper:A helper for providing auth and config data to external tools.'
                'configurations:Manage the set of gcloud named configurations.'
                'get:Print the value of a Google Cloud CLI property.'
                'get-value:Alias for '\''gcloud config get'\'', for backwards compatibility.'
                'list:List Google Cloud CLI properties for the currently active configuration.'
                'set:Set a Google Cloud CLI property.'
                'universe-descriptors:Manage the universe descriptor data.'
                'unset:Unset a Google Cloud CLI property.'
                'virtualenv:Manage Cloud SDK virtual env setup.'
            )
            _describe 'command' commands
            ;;
        'gcloud config configurations')
            local -a commands
            commands=(
                'activate:Activates an existing named configuration.'
                'create:Creates a new named configuration.'
                'delete:Deletes a named configuration.'
                'describe:Describes a named configuration by listing its properties.'
                'list:Lists existing named configurations.'
                'rename:Renames a named configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud config universe-descriptors')
            local -a commands
            commands=(
                'create:Create a new universe descriptor data entry.'
                'delete:Delete universe descriptor data.'
                'describe:Describe universe descriptor data dict in the cache.'
                'list:List cached universe descriptors.'
                'update:Update universe descriptor data in the cache.'
            )
            _describe 'command' commands
            ;;
        'gcloud config virtualenv')
            local -a commands
            commands=(
                'create:Create a virtualenv environment.'
                'delete:Delete a virtualenv environment.'
                'describe:Describe a virtualenv environment.'
                'disable:Disable a virtualenv environment.'
                'enable:Enable a virtualenv environment.'
                'update:Update modules installed in a virtualenv environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud container')
            local -a commands
            commands=(
                'ai:Manage AI related workloads for GKE.'
                'attached:Manage Attached clusters for running containers.'
                'aws:\(DEPRECATED\)  Deploy and manage clusters of machines on AWS for running containers.'
                'azure:\(DEPRECATED\)  Deploy and manage clusters of machines on Azure for running containers.'
                'bare-metal:Deploy and manage Anthos clusters on bare metal for running containers.'
                'binauthz:Manage attestations for Binary Authorization on Google Cloud Platform.'
                'clusters:Deploy and teardown Google Kubernetes Engine clusters.'
                'fleet:Centrally manage features and services on all your Kubernetes clusters with fleet.'
                'get-server-config:Get Kubernetes Engine server config.'
                'hub:Centrally manage features and services on all your Kubernetes clusters with fleet.'
                'images:List and manipulate Google Container Registry images.'
                'node-pools:Create and delete operations for Google Kubernetes Engine node pools.'
                'operations:Get and list operations for Google Kubernetes Engine clusters.'
                'subnets:Manage subnets to be used by Google Kubernetes Engine clusters.'
                'vmware:Deploy and manage Anthos clusters on VMware for running containers.'
            )
            _describe 'command' commands
            ;;
        'gcloud container ai')
            local -a commands
            commands=(
                'profiles:Quickstart engine for GKE AI workloads.'
            )
            _describe 'command' commands
            ;;
        'gcloud container ai profiles')
            local -a commands
            commands=(
                'benchmarks:Manage benchmarks for GKE Inference Quickstart.'
                'list:List compatible accelerator profiles.'
                'manifests:Generate optimized Kubernetes manifests.'
                'model-server-versions:Manage supported model server versions for GKE Inference Quickstart.'
                'model-servers:Manage supported model servers for GKE Inference Quickstart.'
                'models:Manage supported models for GKE Inference Quickstart.'
            )
            _describe 'command' commands
            ;;
        'gcloud container ai profiles benchmarks')
            local -a commands
            commands=(
                'list:List benchmarks for a given model and model server.'
            )
            _describe 'command' commands
            ;;
        'gcloud container ai profiles manifests')
            local -a commands
            commands=(
                'create:Generate ready-to-deploy Kubernetes manifests with compute, load balancing, and autoscaling capabilities.'
            )
            _describe 'command' commands
            ;;
        'gcloud container ai profiles model-server-versions')
            local -a commands
            commands=(
                'list:List supported model server versions.'
            )
            _describe 'command' commands
            ;;
        'gcloud container ai profiles model-servers')
            local -a commands
            commands=(
                'list:List supported model servers for a given model.'
            )
            _describe 'command' commands
            ;;
        'gcloud container ai profiles models')
            local -a commands
            commands=(
                'list:List supported models.'
            )
            _describe 'command' commands
            ;;
        'gcloud container attached')
            local -a commands
            commands=(
                'clusters:Create and manage Attached clusters.'
                'get-server-config:Get Anthos Multi-Cloud server configuration for Attached clusters.'
                'operations:Manage Anthos Multi-Cloud long running operations for Attached clusters.'
            )
            _describe 'command' commands
            ;;
        'gcloud container attached clusters')
            local -a commands
            commands=(
                'delete:Delete a registered AttachedCluster resource.'
                'describe:Describe an Attached cluster.'
                'generate-install-manifest:Generate Install Manifest for an Attached cluster.'
                'get-credentials:Get credentials of an Attached cluster.'
                'import:Import fleet membership for an Attached cluster.'
                'list:List Attached clusters.'
                'register:Register an Attached cluster.'
                'update:Update an Attached cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud container attached operations')
            local -a commands
            commands=(
                'describe:Describe an operation.'
                'list:List operations.'
                'wait:Wait for an operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud container aws')
            local -a commands
            commands=(
                'clusters:\(DEPRECATED\)  Create and manage Anthos clusters on AWS.'
                'get-server-config:\(DEPRECATED\)  Get Anthos Multi-Cloud server configuration for AWS.'
                'node-pools:\(DEPRECATED\)  Create and manage node pools in an Anthos cluster on AWS.'
                'operations:\(DEPRECATED\)  Manage Anthos Multi-Cloud long running operations for AWS.'
            )
            _describe 'command' commands
            ;;
        'gcloud container aws clusters')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create an Anthos cluster on AWS.'
                'delete:\(DEPRECATED\)  Delete an Anthos cluster on AWS.'
                'describe:\(DEPRECATED\)  Describe an Anthos cluster on AWS.'
                'get-credentials:\(DEPRECATED\)  Get credentials of an Anthos cluster on AWS.'
                'list:\(DEPRECATED\)  List Anthos clusters on AWS.'
                'print-access-token:\(DEPRECATED\)  Generate an access token for an Anthos cluster on AWS.'
                'update:\(DEPRECATED\)  Update an Anthos cluster on AWS.'
            )
            _describe 'command' commands
            ;;
        'gcloud container aws node-pools')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create a node pool in an Anthos cluster on AWS.'
                'delete:\(DEPRECATED\)  Delete a node pool in an Anthos cluster on AWS.'
                'describe:\(DEPRECATED\)  Describe a node pool in an Anthos cluster on AWS.'
                'list:\(DEPRECATED\)  List node pools in an Anthos cluster on AWS.'
                'rollback:\(DEPRECATED\)  Rollback a node pool in an Anthos cluster on AWS.'
                'update:\(DEPRECATED\)  Update a node pool in an Anthos cluster on AWS.'
            )
            _describe 'command' commands
            ;;
        'gcloud container aws operations')
            local -a commands
            commands=(
                'cancel:\(DEPRECATED\)  Cancel an operation.'
                'describe:\(DEPRECATED\)  Describe an operation.'
                'list:\(DEPRECATED\)  List operations.'
                'wait:\(DEPRECATED\)  Wait for an operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud container azure')
            local -a commands
            commands=(
                'clients:\(DEPRECATED\)  Create and manage Azure clients.'
                'clusters:\(DEPRECATED\)  Create and manage Anthos clusters on Azure.'
                'get-server-config:\(DEPRECATED\)  Get Anthos Multi-Cloud server configuration for Azure.'
                'node-pools:\(DEPRECATED\)  Create and manage node pools in an Anthos cluster on Azure.'
                'operations:\(DEPRECATED\)  Manage Anthos Multi-Cloud long running operations for Azure.'
            )
            _describe 'command' commands
            ;;
        'gcloud container azure clients')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create an Azure client.'
                'delete:\(DEPRECATED\)  Delete an Azure client.'
                'describe:\(DEPRECATED\)  Describe an Azure client.'
                'get-public-cert:\(DEPRECATED\)  Get the public certificate of an Azure client.'
                'list:\(DEPRECATED\)  List Azure clients.'
            )
            _describe 'command' commands
            ;;
        'gcloud container azure clusters')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create an Anthos cluster on Azure.'
                'delete:\(DEPRECATED\)  Delete an Anthos cluster on Azure.'
                'describe:\(DEPRECATED\)  Describe an Anthos cluster on Azure.'
                'get-credentials:\(DEPRECATED\)  Get credentials of an Anthos cluster on Azure.'
                'list:\(DEPRECATED\)  List Anthos clusters on Azure.'
                'print-access-token:\(DEPRECATED\)  Generate an access token for an Anthos cluster on Azure.'
                'update:\(DEPRECATED\)  Update an Anthos cluster on Azure.'
            )
            _describe 'command' commands
            ;;
        'gcloud container azure node-pools')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create a node pool in an Anthos cluster on Azure.'
                'delete:\(DEPRECATED\)  Delete a node pool in an Anthos cluster on Azure.'
                'describe:\(DEPRECATED\)  Describe a node pool in an Anthos cluster on Azure.'
                'list:\(DEPRECATED\)  List node pools in an Anthos cluster on Azure.'
                'update:\(DEPRECATED\)  Update a node pool in an Anthos cluster on Azure.'
            )
            _describe 'command' commands
            ;;
        'gcloud container azure operations')
            local -a commands
            commands=(
                'cancel:\(DEPRECATED\)  Cancel an operation.'
                'describe:\(DEPRECATED\)  Describe an operation.'
                'list:\(DEPRECATED\)  List operations.'
                'wait:\(DEPRECATED\)  Wait for an operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud container bare-metal')
            local -a commands
            commands=(
                'admin-clusters:Create and manage admin clusters in Anthos on bare metal.'
                'clusters:Create and manage Anthos clusters on bare metal.'
                'node-pools:Create and manage node pools in an Anthos cluster on bare metal.'
                'operations:Manage Anthos on bare metal long running operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud container bare-metal admin-clusters')
            local -a commands
            commands=(
                'create:Create an Anthos on bare metal admin cluster.'
                'describe:Describe an Anthos on bare metal admin cluster.'
                'enroll:Enroll an Anthos on bare metal admin cluster.'
                'list:List Anthos on bare metal admin clusters.'
                'query-version-config:Query versions for creating or upgrading an Anthos on bare metal admin cluster.'
                'unenroll:Unenroll an Anthos on bare metal admin cluster so that it is no longer managed by the Anthos On-Prem API.'
                'update:Update an Anthos on bare metal admin cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud container bare-metal clusters')
            local -a commands
            commands=(
                'create:Create an Anthos cluster on bare metal.'
                'delete:Delete an Anthos cluster on bare metal.'
                'describe:Describe an Anthos cluster on bare metal.'
                'enroll:Enroll an Anthos cluster on bare metal.'
                'list:List Anthos clusters on bare metal.'
                'query-version-config:Query versions for creating or upgrading an Anthos on bare metal user cluster.'
                'update:Update an Anthos cluster on bare metal.'
            )
            _describe 'command' commands
            ;;
        'gcloud container bare-metal node-pools')
            local -a commands
            commands=(
                'create:Create a node pool in an Anthos cluster on bare metal.'
                'delete:Delete a node pool in an Anthos cluster on bare metal.'
                'describe:Describe a node pool in an Anthos cluster on bare metal.'
                'enroll:Enroll a node pool of a user cluster in Anthos on bare metal.'
                'list:List node pools in an Anthos cluster on bare metal.'
                'update:Update a node pool in an Anthos cluster on bare metal.'
            )
            _describe 'command' commands
            ;;
        'gcloud container bare-metal operations')
            local -a commands
            commands=(
                'describe:Describe an operation.'
                'list:List operations.'
                'wait:Poll an operation for completion.'
            )
            _describe 'command' commands
            ;;
        'gcloud container binauthz')
            local -a commands
            commands=(
                'attestations:Create and manage Google Binary Authorization attestations.'
                'attestors:Create and manage Google Binary Authorization Attestors.'
                'create-signature-payload:Create a JSON container image signature object.'
                'policy:Create and manage Google Binary Authorization policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud container binauthz attestations')
            local -a commands
            commands=(
                'create:Create a Binary Authorization attestation.'
                'list:List Binary Authorization attestations.'
            )
            _describe 'command' commands
            ;;
        'gcloud container binauthz attestors')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Binary Authorization attestor.'
                'create:Create an Attestor.'
                'delete:Delete an Attestor.'
                'describe:Describe an Attestor.'
                'get-iam-policy:Get the IAM policy for an attestor.'
                'list:List Attestors associated with the current project.'
                'public-keys:Create and manage public keys associated with Attestation Authorities.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Binary Authorization attestor.'
                'set-iam-policy:Set the IAM policy for an attestor.'
                'update:Update an existing Attestor.'
            )
            _describe 'command' commands
            ;;
        'gcloud container binauthz attestors public-keys')
            local -a commands
            commands=(
                'add:Add a public key to an Attestor.'
                'remove:Remove a public key from an Attestor.'
                'update:Update a public key on an Attestor.'
            )
            _describe 'command' commands
            ;;
        'gcloud container binauthz policy')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Binary Authorization policy.'
                'export:Export the Binary Authorization policy for the current project.'
                'get-iam-policy:Get the IAM policy for a Binary Authorization policy.'
                'import:Import a Binary Authorization policy to the current project.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Binary Authorization policy.'
                'set-iam-policy:Set the IAM policy for a Binary Authorization policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud container clusters')
            local -a commands
            commands=(
                'check-autopilot-compatibility:Check autopilot compatibility of a running cluster.'
                'complete-control-plane-upgrade:Complete the control plane upgrade for an existing cluster.'
                'create:Create a cluster for running containers.'
                'create-auto:Create an Autopilot cluster for running containers.'
                'delete:Delete an existing cluster for running containers.'
                'describe:Describe an existing cluster for running containers.'
                'get-credentials:Fetch credentials for a running cluster.'
                'get-upgrade-info:Get information about upgrades for existing clusters including auto upgrade status, upgrade history, upgrade targets, and end of support timelines.'
                'list:List existing clusters for running containers.'
                'resize:Resizes an existing cluster for running containers.'
                'update:Update cluster settings for an existing container cluster.'
                'upgrade:Upgrade the Kubernetes version of an existing container cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet')
            local -a commands
            commands=(
                'cloudrun:Manage the CloudRun feature.'
                'clusterupgrade:Configure the Fleet clusterupgrade feature.'
                'config-management:Use the Config Management feature.'
                'create:Create a fleet.'
                'dataplane-v2-encryption:Manage Dataplane V2 Encryption Feature.'
                'delete:Delete a fleet.'
                'describe:Show fleet info.'
                'features:Manage Hub Feature resources.'
                'fleetobservability:Manage Fleet Observability Feature.'
                'identity-service:Manage Identity Service Feature.'
                'ingress:Manage Multi-cluster Ingress Feature.'
                'list:List fleets visible to the user in an organization.'
                'memberships:Manage memberships of all your GKE and other Kubernetes clusters with fleets.'
                'mesh:Manage Service Mesh Feature.'
                'multi-cluster-services:Manage Multi-cluster Services Feature.'
                'operations:Manage Anthos fleet long-running operations.'
                'packages:Manage Fleet Packages resources.'
                'policycontroller:Manage Policy Controller Feature.'
                'rbacrolebindingactuation:Manage RbacRoleBinding Actuation.'
                'scopes:Manage scopes of all your GKE fleets.'
                'update:Update a fleet.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet cloudrun')
            local -a commands
            commands=(
                'apply:Deploy or update the CloudRun feature.'
                'describe:Describe the status of the CloudRun feature.'
                'disable:Disable the CloudRun feature.'
                'enable:Enable the CloudRun feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet clusterupgrade')
            local -a commands
            commands=(
                'create:Create the clusterupgrade feature for a fleet within a given project.'
                'describe:Describe the clusterupgrade feature for a fleet within a given project.'
                'update:Update the clusterupgrade feature for a fleet within a given project.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet config-management')
            local -a commands
            commands=(
                'describe:Describe the Config Management feature.'
                'disable:Disable the Config Management feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet dataplane-v2-encryption')
            local -a commands
            commands=(
                'describe:Describes the status of the Dataplane V2 Encryption Feature resource.'
                'disable:Disables the Dataplane V2 Encryption Feature.'
                'enable:Enables the Dataplane V2 Encryption Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet features')
            local -a commands
            commands=(
                'describe:Describe a fleet feature.'
                'disable:Disable a fleet feature.'
                'enable:Enable a fleet feature.'
                'list:List enabled features.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet fleetobservability')
            local -a commands
            commands=(
                'describe:Describes the status of the Fleet Observability Feature resource.'
                'disable:Disables the Fleet Observability Feature.'
                'enable:Enables the Fleet Observability Feature.'
                'update:Updates the Fleet Observability Feature resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet identity-service')
            local -a commands
            commands=(
                'apply:Update the Identity Service Feature.'
                'delete:Delete a resource from the Identity Service Feature.'
                'describe:Prints the status of all clusters with Identity Service installed.'
                'disable:Disable Identity Service Feature.'
                'enable:Enable the Identity Service Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet ingress')
            local -a commands
            commands=(
                'describe:Describe the status of Multi-cluster Ingress Feature resource.'
                'disable:Disable Multi-cluster Ingress Feature.'
                'enable:Enable Multi-cluster Ingress Feature.'
                'update:Update Multi-cluster Ingress Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet memberships')
            local -a commands
            commands=(
                'bindings:Membership Bindings for permissions.'
                'create:Create a new membership for a cluster.'
                'delete:Delete a membership.'
                'describe:Describe a membership.'
                'generate-gateway-rbac:Generate RBAC policy files for connected clusters by the user.'
                'get-credentials:Fetch credentials for a fleet-registered cluster to be used in Connect Gateway.'
                'list:List memberships.'
                'register:Register a cluster with a fleet.'
                'support-access:Membership used for support access.'
                'unregister:Unregister a cluster from a fleet.'
                'update:Update a membership.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet memberships bindings')
            local -a commands
            commands=(
                'create:Create a Membership Binding.'
                'delete:Delete a Membership Binding.'
                'describe:Show Membership-Binding info.'
                'list:List Bindings in a Membership.'
                'update:Update the Binding in a Membership.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet memberships support-access')
            local -a commands
            commands=(
                'describe:Describe support access for the specified membership.'
                'disable:Disable support access for the specified membership.'
                'enable:Enable support access for the specified membership.'
                'get-yaml:Generates YAML for anthos support RBAC policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet mesh')
            local -a commands
            commands=(
                'describe:Describe the status of Service Mesh Feature resource.'
                'disable:Disable Service Mesh Feature.'
                'enable:Enable Service Mesh Feature.'
                'update:Update the configuration of the Service Mesh Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet multi-cluster-services')
            local -a commands
            commands=(
                'describe:Describe the status of the Multi-cluster Services Feature resource.'
                'disable:Disable the Multi-cluster Services Feature.'
                'enable:Enable the Multi-cluster Services Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet operations')
            local -a commands
            commands=(
                'describe:Describe a long-running operation.'
                'list:List long-running operations.'
                'wait:Poll a long-running operation for completion.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet packages')
            local -a commands
            commands=(
                'create:Create Package Rollouts Fleet Package.'
                'delete:Delete Package Rollouts Fleet Package.'
                'describe:Describe Package Rollouts Fleet Package.'
                'list:List Package Rollouts Fleet Packages.'
                'resource-bundles:Commands for managing Package Rollouts Resource Bundles.'
                'rollouts:Commands for managing Rollouts.'
                'update:Update Package Rollouts Fleet Package.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet packages resource-bundles')
            local -a commands
            commands=(
                'create:Create Package Rollouts Resource Bundle.'
                'delete:Delete Package Rollouts Resource Bundle.'
                'describe:Describe Package Rollouts Resource Bundle.'
                'list:List Package Rollouts Resource Bundles.'
                'releases:Commands for managing Package Rollouts Releases.'
                'update:Update Package Rollouts Resource Bundle.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet packages resource-bundles releases')
            local -a commands
            commands=(
                'create:Create Package Rollouts Release.'
                'delete:Delete Package Rollouts Release.'
                'describe:Describe Package Rollouts Release.'
                'list:List Releases of a Resource Bundle.'
                'update:Update Package Rollouts Release.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet packages rollouts')
            local -a commands
            commands=(
                'abort:Abort Rollout resource.'
                'describe:Describe Rollout resource.'
                'list:List Rollouts of a Fleet Package.'
                'resume:Resume suspended Rollout.'
                'suspend:Suspend in-progress Rollout.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet policycontroller')
            local -a commands
            commands=(
                'content:Manage Policy Controller content.'
                'deployment:Configure Policy Controller component deployments.'
                'describe:Describe Policy Controller feature.'
                'detach:Detach Policy Controller Feature.'
                'disable:Disable \(Uninstall\) Policy Controller.'
                'enable:Enable Policy Controller Feature.'
                'suspend:Suspend Policy Controller Feature.'
                'update:Updates the configuration of Policy Controller Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet policycontroller content')
            local -a commands
            commands=(
                'bundles:Manage Policy Controller content bundles.'
                'templates:Manage Policy Controller content templates.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet policycontroller content bundles')
            local -a commands
            commands=(
                'remove:Removes a bundle installation for Policy Controller content.'
                'set:Sets bundle installation for Policy Controller content.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet policycontroller content templates')
            local -a commands
            commands=(
                'disable:Disable template installation for Policy Controller content.'
                'enable:Installs the template library for Policy Controller.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet policycontroller deployment')
            local -a commands
            commands=(
                'remove:Removes configuration properties from Policy Controller components.'
                'set:Sets configuration of the Policy Controller components.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet rbacrolebindingactuation')
            local -a commands
            commands=(
                'describe:Describe the status of the RbacRoleBinding Actuation Feature in a fleet.'
                'update:Update RbacRoleBinding Actuation Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet scopes')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Fleet Scope.'
                'create:Create a new fleet scope.'
                'delete:Delete a fleet scope.'
                'describe:Describe a fleet scope.'
                'get-iam-policy:Get the IAM policy for a Fleet Scope.'
                'list:List fleet scopes in a project permitted to be viewed by the caller.'
                'list-memberships:List memberships bound to a fleet scope.'
                'namespaces:Fleet namespaces are the fleet equivalent of k8s cluster namespaces.'
                'rbacrolebindings:Fleet scope RBAC RoleBindings for permissions.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Fleet Scope.'
                'update:Update a scope.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet scopes namespaces')
            local -a commands
            commands=(
                'create:Create a fleet namespace.'
                'delete:Delete a fleet namespace.'
                'describe:Show fleet namespace info.'
                'get-credentials:Fetch credentials for a membership with a particular namespace.'
                'list:List fleet namespaces in a project.'
                'update:Update a fleet namespace.'
            )
            _describe 'command' commands
            ;;
        'gcloud container fleet scopes rbacrolebindings')
            local -a commands
            commands=(
                'create:Create an RBAC RoleBinding.'
                'delete:Delete a fleet scope RBAC RoleBinding.'
                'describe:Show fleet scope RBAC RoleBinding information.'
                'list:List RBAC RoleBindings in a fleet scope.'
                'update:Update a fleet scope RBAC RoleBinding.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub')
            local -a commands
            commands=(
                'cloudrun:Manage the CloudRun feature.'
                'clusterupgrade:Configure the Fleet clusterupgrade feature.'
                'config-management:Use the Config Management feature.'
                'create:Create a fleet.'
                'dataplane-v2-encryption:Manage Dataplane V2 Encryption Feature.'
                'delete:Delete a fleet.'
                'describe:Show fleet info.'
                'features:Manage Hub Feature resources.'
                'fleetobservability:Manage Fleet Observability Feature.'
                'identity-service:Manage Identity Service Feature.'
                'ingress:Manage Multi-cluster Ingress Feature.'
                'list:List fleets visible to the user in an organization.'
                'memberships:Manage memberships of all your GKE and other Kubernetes clusters with fleets.'
                'mesh:Manage Service Mesh Feature.'
                'multi-cluster-services:Manage Multi-cluster Services Feature.'
                'operations:Manage Anthos fleet long-running operations.'
                'packages:Manage Fleet Packages resources.'
                'policycontroller:Manage Policy Controller Feature.'
                'rbacrolebindingactuation:Manage RbacRoleBinding Actuation.'
                'scopes:Manage scopes of all your GKE fleets.'
                'update:Update a fleet.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub cloudrun')
            local -a commands
            commands=(
                'apply:Deploy or update the CloudRun feature.'
                'describe:Describe the status of the CloudRun feature.'
                'disable:Disable the CloudRun feature.'
                'enable:Enable the CloudRun feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub clusterupgrade')
            local -a commands
            commands=(
                'create:Create the clusterupgrade feature for a fleet within a given project.'
                'describe:Describe the clusterupgrade feature for a fleet within a given project.'
                'update:Update the clusterupgrade feature for a fleet within a given project.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub config-management')
            local -a commands
            commands=(
                'describe:Describe the Config Management feature.'
                'disable:Disable the Config Management feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub dataplane-v2-encryption')
            local -a commands
            commands=(
                'describe:Describes the status of the Dataplane V2 Encryption Feature resource.'
                'disable:Disables the Dataplane V2 Encryption Feature.'
                'enable:Enables the Dataplane V2 Encryption Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub features')
            local -a commands
            commands=(
                'describe:Describe a fleet feature.'
                'disable:Disable a fleet feature.'
                'enable:Enable a fleet feature.'
                'list:List enabled features.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub fleetobservability')
            local -a commands
            commands=(
                'describe:Describes the status of the Fleet Observability Feature resource.'
                'disable:Disables the Fleet Observability Feature.'
                'enable:Enables the Fleet Observability Feature.'
                'update:Updates the Fleet Observability Feature resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub identity-service')
            local -a commands
            commands=(
                'apply:Update the Identity Service Feature.'
                'delete:Delete a resource from the Identity Service Feature.'
                'describe:Prints the status of all clusters with Identity Service installed.'
                'disable:Disable Identity Service Feature.'
                'enable:Enable the Identity Service Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub ingress')
            local -a commands
            commands=(
                'describe:Describe the status of Multi-cluster Ingress Feature resource.'
                'disable:Disable Multi-cluster Ingress Feature.'
                'enable:Enable Multi-cluster Ingress Feature.'
                'update:Update Multi-cluster Ingress Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub memberships')
            local -a commands
            commands=(
                'bindings:Membership Bindings for permissions.'
                'create:Create a new membership for a cluster.'
                'delete:Delete a membership.'
                'describe:Describe a membership.'
                'generate-gateway-rbac:Generate RBAC policy files for connected clusters by the user.'
                'get-credentials:Fetch credentials for a fleet-registered cluster to be used in Connect Gateway.'
                'list:List memberships.'
                'register:Register a cluster with a fleet.'
                'support-access:Membership used for support access.'
                'unregister:Unregister a cluster from a fleet.'
                'update:Update a membership.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub memberships bindings')
            local -a commands
            commands=(
                'create:Create a Membership Binding.'
                'delete:Delete a Membership Binding.'
                'describe:Show Membership-Binding info.'
                'list:List Bindings in a Membership.'
                'update:Update the Binding in a Membership.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub memberships support-access')
            local -a commands
            commands=(
                'describe:Describe support access for the specified membership.'
                'disable:Disable support access for the specified membership.'
                'enable:Enable support access for the specified membership.'
                'get-yaml:Generates YAML for anthos support RBAC policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub mesh')
            local -a commands
            commands=(
                'describe:Describe the status of Service Mesh Feature resource.'
                'disable:Disable Service Mesh Feature.'
                'enable:Enable Service Mesh Feature.'
                'update:Update the configuration of the Service Mesh Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub multi-cluster-services')
            local -a commands
            commands=(
                'describe:Describe the status of the Multi-cluster Services Feature resource.'
                'disable:Disable the Multi-cluster Services Feature.'
                'enable:Enable the Multi-cluster Services Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub operations')
            local -a commands
            commands=(
                'describe:Describe a long-running operation.'
                'list:List long-running operations.'
                'wait:Poll a long-running operation for completion.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub packages')
            local -a commands
            commands=(
                'create:Create Package Rollouts Fleet Package.'
                'delete:Delete Package Rollouts Fleet Package.'
                'describe:Describe Package Rollouts Fleet Package.'
                'list:List Package Rollouts Fleet Packages.'
                'resource-bundles:Commands for managing Package Rollouts Resource Bundles.'
                'rollouts:Commands for managing Rollouts.'
                'update:Update Package Rollouts Fleet Package.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub packages resource-bundles')
            local -a commands
            commands=(
                'create:Create Package Rollouts Resource Bundle.'
                'delete:Delete Package Rollouts Resource Bundle.'
                'describe:Describe Package Rollouts Resource Bundle.'
                'list:List Package Rollouts Resource Bundles.'
                'releases:Commands for managing Package Rollouts Releases.'
                'update:Update Package Rollouts Resource Bundle.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub packages resource-bundles releases')
            local -a commands
            commands=(
                'create:Create Package Rollouts Release.'
                'delete:Delete Package Rollouts Release.'
                'describe:Describe Package Rollouts Release.'
                'list:List Releases of a Resource Bundle.'
                'update:Update Package Rollouts Release.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub packages rollouts')
            local -a commands
            commands=(
                'abort:Abort Rollout resource.'
                'describe:Describe Rollout resource.'
                'list:List Rollouts of a Fleet Package.'
                'resume:Resume suspended Rollout.'
                'suspend:Suspend in-progress Rollout.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub policycontroller')
            local -a commands
            commands=(
                'content:Manage Policy Controller content.'
                'deployment:Configure Policy Controller component deployments.'
                'describe:Describe Policy Controller feature.'
                'detach:Detach Policy Controller Feature.'
                'disable:Disable \(Uninstall\) Policy Controller.'
                'enable:Enable Policy Controller Feature.'
                'suspend:Suspend Policy Controller Feature.'
                'update:Updates the configuration of Policy Controller Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub policycontroller content')
            local -a commands
            commands=(
                'bundles:Manage Policy Controller content bundles.'
                'templates:Manage Policy Controller content templates.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub policycontroller content bundles')
            local -a commands
            commands=(
                'remove:Removes a bundle installation for Policy Controller content.'
                'set:Sets bundle installation for Policy Controller content.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub policycontroller content templates')
            local -a commands
            commands=(
                'disable:Disable template installation for Policy Controller content.'
                'enable:Installs the template library for Policy Controller.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub policycontroller deployment')
            local -a commands
            commands=(
                'remove:Removes configuration properties from Policy Controller components.'
                'set:Sets configuration of the Policy Controller components.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub rbacrolebindingactuation')
            local -a commands
            commands=(
                'describe:Describe the status of the RbacRoleBinding Actuation Feature in a fleet.'
                'update:Update RbacRoleBinding Actuation Feature.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub scopes')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Fleet Scope.'
                'create:Create a new fleet scope.'
                'delete:Delete a fleet scope.'
                'describe:Describe a fleet scope.'
                'get-iam-policy:Get the IAM policy for a Fleet Scope.'
                'list:List fleet scopes in a project permitted to be viewed by the caller.'
                'list-memberships:List memberships bound to a fleet scope.'
                'namespaces:Fleet namespaces are the fleet equivalent of k8s cluster namespaces.'
                'rbacrolebindings:Fleet scope RBAC RoleBindings for permissions.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Fleet Scope.'
                'update:Update a scope.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub scopes namespaces')
            local -a commands
            commands=(
                'create:Create a fleet namespace.'
                'delete:Delete a fleet namespace.'
                'describe:Show fleet namespace info.'
                'get-credentials:Fetch credentials for a membership with a particular namespace.'
                'list:List fleet namespaces in a project.'
                'update:Update a fleet namespace.'
            )
            _describe 'command' commands
            ;;
        'gcloud container hub scopes rbacrolebindings')
            local -a commands
            commands=(
                'create:Create an RBAC RoleBinding.'
                'delete:Delete a fleet scope RBAC RoleBinding.'
                'describe:Show fleet scope RBAC RoleBinding information.'
                'list:List RBAC RoleBindings in a fleet scope.'
                'update:Update a fleet scope RBAC RoleBinding.'
            )
            _describe 'command' commands
            ;;
        'gcloud container images')
            local -a commands
            commands=(
                'add-tag:Adds tags to existing image.'
                'delete:Delete existing images.'
                'describe:Lists information about the specified image.'
                'list:List existing images.'
                'list-gcr-usage:List Container Registry usage.'
                'list-tags:List tags and digests for the specified image.'
                'untag:Remove existing image tags.'
            )
            _describe 'command' commands
            ;;
        'gcloud container node-pools')
            local -a commands
            commands=(
                'complete-upgrade:Complete a node pool upgrade.'
                'create:Create a node pool in a running cluster.'
                'delete:Delete an existing node pool in a running cluster.'
                'describe:Describe an existing node pool for a cluster.'
                'get-upgrade-info:Get upgrade information for an existing node pool for a cluster.'
                'list:List existing node pools for a cluster.'
                'rollback:Rollback a node-pool upgrade.'
                'update:Updates a node pool in a running cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud container operations')
            local -a commands
            commands=(
                'cancel:Cancel a running operation.'
                'describe:Describe an operation.'
                'list:List operations for container clusters.'
                'wait:Poll an operation for completion.'
            )
            _describe 'command' commands
            ;;
        'gcloud container subnets')
            local -a commands
            commands=(
                'list-usable:List subnets usable for cluster creation in a specific project.'
            )
            _describe 'command' commands
            ;;
        'gcloud container vmware')
            local -a commands
            commands=(
                'admin-clusters:Create and manage admin clusters in Anthos on VMware.'
                'clusters:Create and manage Anthos clusters on VMware.'
                'node-pools:Create and manage node pools in an Anthos cluster on VMware.'
                'operations:Manage Anthos on VMware long running operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud container vmware admin-clusters')
            local -a commands
            commands=(
                'describe:Describe an Anthos on VMware admin cluster.'
                'enroll:Enroll an Anthos on VMware admin cluster.'
                'list:List Anthos on VMware admin clusters.'
                'unenroll:Unenroll an Anthos on VMware admin cluster.'
                'update:Update an Anthos on VMware admin cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud container vmware clusters')
            local -a commands
            commands=(
                'create:Create an Anthos cluster on VMware.'
                'delete:Delete an Anthos cluster on VMware.'
                'describe:Describe an Anthos cluster on VMware.'
                'enroll:Enroll an Anthos cluster on VMware.'
                'list:List Anthos clusters on VMware.'
                'query-version-config:Query versions for creating or upgrading an Anthos on VMware user cluster.'
                'update:Update an Anthos cluster on VMware.'
                'upgrade:Centrally upgrade an Anthos cluster on VMware.'
            )
            _describe 'command' commands
            ;;
        'gcloud container vmware node-pools')
            local -a commands
            commands=(
                'create:Create a node pool in an Anthos cluster on VMware.'
                'delete:Delete a node pool in an Anthos cluster on VMware.'
                'describe:Describe a node pool in an Anthos cluster on VMware.'
                'enroll:Enroll a node pool in an Anthos cluster on VMware.'
                'list:List node pools in an Anthos cluster on VMware.'
                'update:Update a node pool in an Anthos cluster on VMware.'
            )
            _describe 'command' commands
            ;;
        'gcloud container vmware operations')
            local -a commands
            commands=(
                'describe:Describe an operation.'
                'list:List operations.'
                'wait:Poll an operation for completion.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog')
            local -a commands
            commands=(
                'entries:Manage entries in Data Catalog.'
                'entry-groups:\(DEPRECATED\)  Manage entry groups in Data Catalog.'
                'search:\(DEPRECATED\)  Search Data Catalog for resources that match a query.'
                'tag-templates:\(DEPRECATED\)  Manage tag templates in Data Catalog.'
                'tags:\(DEPRECATED\)  Manage tags in Data Catalog.'
                'taxonomies:Manage taxonomies in Data Catalog.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog entries')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create a Data Catalog entry.'
                'delete:\(DEPRECATED\)  Delete a Data Catalog entry.'
                'describe:\(DEPRECATED\)  Describe a Data Catalog entry.'
                'list:\(DEPRECATED\)  List all entries in a Data Catalog entry group.'
                'lookup:\(DEPRECATED\)  Lookup a Data Catalog entry by its target name.'
                'star:\(DEPRECATED\)  Star a Data Catalog entry.'
                'unstar:\(DEPRECATED\)  Unstar a Data Catalog entry.'
                'update:\(DEPRECATED\)  Update a Data Catalog entry.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog entry-groups')
            local -a commands
            commands=(
                'add-iam-policy-binding:\(DEPRECATED\)  Add an IAM policy binding to a Data Catalog entry group.'
                'create:\(DEPRECATED\)  Create a Data Catalog entry group.'
                'delete:\(DEPRECATED\)  Delete a Data Catalog entry group.'
                'describe:\(DEPRECATED\)  Describe a Data Catalog entry group.'
                'get-iam-policy:\(DEPRECATED\)  Get the IAM policy for a Data Catalog entry group.'
                'list:\(DEPRECATED\)  List all entry groups in a Data Catalog location.'
                'remove-iam-policy-binding:\(DEPRECATED\)  Remove an IAM policy binding from a Data Catalog entry group.'
                'set-iam-policy:\(DEPRECATED\)  Set the IAM policy for a Data Catalog entry group.'
                'update:\(DEPRECATED\)  Update a Data Catalog entry group.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog tag-templates')
            local -a commands
            commands=(
                'add-iam-policy-binding:\(DEPRECATED\)  Add IAM policy binding to a Data Catalog tag template.'
                'create:\(DEPRECATED\)  Create a Data Catalog tag template.'
                'delete:\(DEPRECATED\)  Delete a Data Catalog tag template.'
                'describe:\(DEPRECATED\)  Describe a Data Catalog tag template.'
                'fields:\(DEPRECATED\)  Manage tag template fields in Data Catalog.'
                'get-iam-policy:\(DEPRECATED\)  Get the IAM policy for a Data Catalog tag template.'
                'remove-iam-policy-binding:\(DEPRECATED\)  Remove IAM policy binding from a Data Catalog tag template.'
                'set-iam-policy:\(DEPRECATED\)  Set the IAM policy for a Data Catalog tag template.'
                'update:\(DEPRECATED\)  Update a Data Catalog tag template.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog tag-templates fields')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create a Data Catalog tag template field.'
                'delete:\(DEPRECATED\)  Delete a Data Catalog tag template field.'
                'enum-values:\(DEPRECATED\)  Manage tag template enum values in Data Catalog.'
                'rename:\(DEPRECATED\)  Rename a Data Catalog tag template field.'
                'update:\(DEPRECATED\)  Update a Data Catalog tag template field.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog tag-templates fields enum-values')
            local -a commands
            commands=(
                'rename:\(DEPRECATED\)  Rename an enum value in Data Catalog tag template enum field.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog tags')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create a Data Catalog entry tag.'
                'delete:\(DEPRECATED\)  Delete a Data Catalog entry tag.'
                'list:\(DEPRECATED\)  List Data Catalog entry tags.'
                'update:\(DEPRECATED\)  Update a Data Catalog entry tag.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog taxonomies')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Policy Tag Taxonomy.'
                'describe:Describe a Policy Tag Taxonomy.'
                'export:Export a list of taxonomies from a certain project.'
                'get-iam-policy:Get the IAM policy for a Policy Tag Taxonomy.'
                'import:Export a file with serialized taxonomies to a certain project.'
                'list:List Cloud Policy Tag Taxonomies.'
                'policy-tags:Manage policy tags in Data Catalog.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a policy tag taxonomy.'
                'set-iam-policy:Set the IAM policy for a Policy Tag taxonomy.'
            )
            _describe 'command' commands
            ;;
        'gcloud data-catalog taxonomies policy-tags')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Data Catalog policy tag.'
                'describe:Describe a Policy Tag Manager Policy tag.'
                'get-iam-policy:Get the IAM policy for a Data Catalog Policy Tag.'
                'list:List Cloud Policy Tag Manager policy tags.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Data Catalog policy tag.'
                'set-iam-policy:Set the IAM policy for a Data Catalog Policy Tag.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration')
            local -a commands
            commands=(
                'connection-profiles:Manage Database Migration Service connection profiles.'
                'conversion-workspaces:Manage Database Migration Service conversion workspaces.'
                'migration-jobs:Manage Database Migration Service migration jobs.'
                'objects:Manage Database Migration Service migration job objects.'
                'operations:Manage Database Migration Service operations.'
                'private-connections:Manage Database Migration Service private connections.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration connection-profiles')
            local -a commands
            commands=(
                'create:Create Database Migration Service connection profiles.'
                'delete:Delete a Database Migration Service connection profile.'
                'describe:Show details about a Database Migration Service connection profile.'
                'list:List Database Migration Service connection profiles.'
                'test:Test a Database Migration Service connection profile.'
                'update:Update a Database Migration Service connection profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration connection-profiles create')
            local -a commands
            commands=(
                'alloydb:Create a Database Migration Service connection profile for AlloyDB.'
                'cloudsql:Create a Database Migration Service connection profile for Cloud SQL.'
                'mysql:Create a Database Migration Service connection profile for MySQL.'
                'oracle:Create a Database Migration Service connection profile for Oracle.'
                'postgresql:Create a Database Migration Service connection profile for PostgreSQL.'
                'sqlserver:Create a Database Migration Service connection profile for SQL Server.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration conversion-workspaces')
            local -a commands
            commands=(
                'apply:Apply a Database Migration Service conversion workspace.'
                'commit:Commit a Database Migration Service conversion workspace.'
                'convert:Convert a Database Migration Service conversion workspace.'
                'convert-application-code:Convert the application code.'
                'create:Create a Database Migration Service conversion workspace.'
                'delete:Delete a Database Migration conversion workspace.'
                'describe:Show details about a database migration conversion workspace.'
                'describe-ddls:Describe DDLs in a Database Migration Service conversion workspace.'
                'describe-entities:Describe database entities in a Database Migration conversion workspace.'
                'describe-issues:Describe issues in a Database Migration Service conversion workspace.'
                'import-rules:Import mapping rules in a Database Migration Service conversion workspace.'
                'list:List conversion workspaces.'
                'list-background-jobs:List background jobs in the conversion workspaces.'
                'mapping-rules:Manage Database Migration Service Conversion Workspace mapping rules.'
                'rollback:Rollback a Database Migration Service conversion workspace.'
                'seed:Seed a Database Migration Service conversion workspace.'
                'update:Update a Database Migration Service conversion workspace.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration conversion-workspaces mapping-rules')
            local -a commands
            commands=(
                'list:List Mapping Rules.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration migration-jobs')
            local -a commands
            commands=(
                'create:Create a Database Migration Service migration job.'
                'delete:Delete a Database Migration Service migration job.'
                'demote-destination:Demote a destination of a Database Migration Service migration job.'
                'describe:Show details about a Database Migration Service migration job.'
                'fetch-source-objects:Fetch objects for a Database Migration Service migration job by connection to the source.'
                'generate-ssh-script:Generate a SSH script for a Database Migration Service migration job.'
                'list:List Database Migration Service migration jobs.'
                'promote:Promote a Database Migration Service migration job.'
                'restart:Restart a Database Migration Service migration job.'
                'resume:Resume a Database Migration Service migration job.'
                'start:Start a Database Migration Service migration job.'
                'stop:Stop a Database Migration Service migration job.'
                'update:Update a Database Migration Service migration job.'
                'verify:Verify a Database Migration Service migration job.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration objects')
            local -a commands
            commands=(
                'list:List a DMS migration job objects.'
                'lookup:Lookup a DMS migration job object.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration operations')
            local -a commands
            commands=(
                'delete:Delete a Database Migration Service operation.'
                'describe:Show details about a operation.'
                'list:List operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud database-migration private-connections')
            local -a commands
            commands=(
                'create:Create a Database Migration private connection.'
                'delete:Delete a Database Migration private connection.'
                'describe:Show details about a database migration private connection.'
                'list:List private connections.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataflow')
            local -a commands
            commands=(
                'flex-template:A group of subcommands for working with Dataflow flex template.'
                'jobs:A group of subcommands for working with Dataflow jobs.'
                'snapshots:A group of subcommands for working with Cloud Dataflow snapshots.'
                'sql:\(REMOVED\)  A group of subcommands for working with Dataflow SQL.'
                'yaml:A group of subcommands for launching Beam YAML jobs on Dataflow.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataflow flex-template')
            local -a commands
            commands=(
                'build:Builds a flex template file from the specified parameters.'
                'run:Runs a job from the specified path.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataflow jobs')
            local -a commands
            commands=(
                'archive:Archives a job.'
                'cancel:Cancels all jobs that match the command line arguments.'
                'describe:Outputs the Job object resulting from the Get API.'
                'drain:Drains all jobs that match the command line arguments.'
                'list:Lists all jobs in a particular project, optionally filtered by region.'
                'run:Runs a job from the specified path.'
                'show:Shows a short description of the given job.'
                'update-options:Update pipeline options on-the-fly for running Dataflow jobs.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataflow snapshots')
            local -a commands
            commands=(
                'create:Creates a snapshot for a Cloud Dataflow job.'
                'delete:Delete a Cloud Dataflow snapshot.'
                'describe:Describe a Cloud Dataflow snapshot.'
                'list:List all Cloud Dataflow snapshots in a project in the specified region, optionally filtered by job ID.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataflow sql')
            local -a commands
            commands=(
                'query:\(REMOVED\)  Execute the user-specified SQL query on Dataflow.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataflow yaml')
            local -a commands
            commands=(
                'run:Runs a job from the specified path.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex')
            local -a commands
            commands=(
                'aspect-types:Manage Dataplex Aspect Types.'
                'assets:Manage Dataplex Asset resources.'
                'content:Manage Dataplex Content.'
                'datascans:Manage Dataplex Datascan.'
                'encryption-config:Manage Dataplex encryption configs.'
                'entries:Manage Dataplex Catalog Entries resources.'
                'entry-groups:Manage Dataplex Entry Groups.'
                'entry-types:Manage Dataplex Entry Types.'
                'environments:Manage Dataplex Environments.'
                'glossaries:Manage Dataplex glossaries.'
                'lakes:Manage Dataplex Lake resources.'
                'metadata-jobs:Manage Dataplex metadata jobs.'
                'tasks:Manage Dataplex Task services.'
                'zones:Manage Dataplex Zone resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex aspect-types')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Dataplex Aspect Type.'
                'create:Create a Dataplex Aspect Type.'
                'delete:Delete a Dataplex Aspect Type.'
                'describe:Describe a Dataplex Aspect Type.'
                'get-iam-policy:Retrieve a Dataplex Aspect Type IAM policy.'
                'list:List Dataplex Aspect Types.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Dataplex Aspect Type.'
                'set-iam-policy:Set an IAM policy binding for a Dataplex Aspect Type as defined in a JSON or YAML file.'
                'update:Update a Dataplex Aspect Type.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex assets')
            local -a commands
            commands=(
                'actions:Manage Dataplex asset resource actions.'
                'add-iam-policy-binding:Adds IAM policy binding to a Dataplex asset resource.'
                'create:Create a Dataplex asset resource.'
                'delete:Delete a Dataplex asset resource.'
                'describe:Describe a Dataplex asset resource.'
                'get-iam-policy:Get the IAM policy for a Dataplex asset resource.'
                'list:List Dataplex asset resources.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Dataplex asset resource.'
                'set-iam-policy:Set the IAM policy to a Dataplex asset as defined in a JSON or YAML file.'
                'update:Update a Dataplex asset resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex assets actions')
            local -a commands
            commands=(
                'list:List Dataplex asset actions.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex content')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds IAM policy binding to a Dataplex Content.'
                'create:Creating a content.'
                'delete:Delete a Dataplex Content Resource.'
                'describe:Retrieve a Dataplex Content Resource.'
                'get-iam-policy:Retrieve the IAM policy for a Dataplex Content.'
                'list:List Dataplex Content Resources.'
                'remove-iam-policy-binding:Removes IAM policy binding from a Dataplex Content.'
                'set-iam-policy:Set the IAM policy to a Dataplex Content as defined in a JSON or YAML file.'
                'update:Update a Dataplex Content Resource with the given configurations.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex datascans')
            local -a commands
            commands=(
                'create:Manage Dataplex Datascans creation.'
                'delete:Delete a Dataplex Datascan resource.'
                'describe:Describe a Dataplex datascan resource.'
                'get-iam-policy:Get the IAM policy for a Dataplex datascan resource.'
                'jobs:Manage Dataplex Datascan Jobs service.'
                'list:List Dataplex Datascan resources under a project.'
                'run:Run a Dataplex DataScan resource.'
                'set-iam-policy:Set the IAM policy to a Dataplex datascan as defined in a JSON or YAML file.'
                'update:Manage Dataplex Datascans updation.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex datascans create')
            local -a commands
            commands=(
                'data-discovery:Create a Dataplex data discovery scan job.'
                'data-profile:Create a Dataplex data profile scan job.'
                'data-quality:Create a Dataplex data quality scan job.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex datascans jobs')
            local -a commands
            commands=(
                'describe:Describe a Dataplex datascan job.'
                'list:List job runs of a Dataplex datascan resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex datascans update')
            local -a commands
            commands=(
                'data-discovery:Update a Dataplex data discovery scan job.'
                'data-profile:Update a Dataplex data profile scan job.'
                'data-quality:Update a Dataplex data quality scan job.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex encryption-config')
            local -a commands
            commands=(
                'create:Create a Dataplex encryption config resource.'
                'describe:Describe an EncryptionConfig.'
                'update:Update an Encryption Config.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex entries')
            local -a commands
            commands=(
                'create:Create a Dataplex Entry resource.'
                'delete:Delete a Dataplex entry.'
                'describe:Describe a Dataplex entry.'
                'list:List Dataplex entries.'
                'lookup:Lookup a Dataplex entry.'
                'remove-aspects:Remove aspects from a Dataplex Entry.'
                'search:Searches for Dataplex entries.'
                'update:Update a Dataplex Entry.'
                'update-aspects:Add or update aspects for a Dataplex Entry.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex entry-groups')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Dataplex Entry Group.'
                'create:Create a Dataplex Entry Group.'
                'delete:Delete a Dataplex Entry Group.'
                'describe:Describe a Dataplex Entry Group.'
                'get-iam-policy:Retrieve a Dataplex Entry Group IAM policy.'
                'list:List Dataplex Entry Groups.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Dataplex Entry Group.'
                'set-iam-policy:Set an IAM policy binding for a Dataplex Entry Group as defined in a JSON or YAML file.'
                'update:Update a Dataplex Entry Group.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex entry-types')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Dataplex Entry Type.'
                'create:Create a Dataplex Entry Type.'
                'delete:Delete a Dataplex Entry Type.'
                'describe:Describe a Dataplex Entry Type.'
                'get-iam-policy:Retrieve a Dataplex Entry Type IAM policy.'
                'list:List Dataplex Entry Types.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Dataplex Entry Type.'
                'set-iam-policy:Set an IAM policy binding for a Dataplex Entry Type as defined in a JSON or YAML file.'
                'update:Update a Dataplex Entry Type.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex environments')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds IAM policy binding to a Dataplex Environment.'
                'create:Create a Dataplex Environment.'
                'delete:Delete a Dataplex Environment.'
                'describe:Retrieve a Dataplex Environment.'
                'get-iam-policy:Retrieve a Dataplex Environment IAM policy.'
                'list:List Dataplex Environments.'
                'remove-iam-policy-binding:Removes IAM policy binding from a Dataplex Environment.'
                'sessions:Manage Dataplex Sessions services.'
                'set-iam-policy:Set an IAM policy binding for a Dataplex Environment as defined in a JSON or YAML file.'
                'update:Update a Dataplex Environment with the given configurations.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex environments sessions')
            local -a commands
            commands=(
                'list:List Sessions associated with a Environment.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex glossaries')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Dataplex Glossary.'
                'categories:Manage Dataplex glossary categories.'
                'create:Create a Dataplex Glossary resource.'
                'delete:Delete a Dataplex Glossary.'
                'describe:Describe a Glossary.'
                'get-iam-policy:Retrieve a Dataplex Glossary IAM policy.'
                'list:List Glossaries.'
                'remove-iam-policy-binding:Removes IAM policy binding from a Dataplex Glossary.'
                'set-iam-policy:Set an IAM policy binding for a Dataplex Glossary as defined in a JSON or YAML file.'
                'terms:Manage Dataplex glossary terms.'
                'update:Updates a Dataplex Glossary.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex glossaries categories')
            local -a commands
            commands=(
                'create:Creates a glossary category.'
                'delete:Deletes a glossary category.'
                'describe:Describes a glossary category.'
                'list:List glossary categories.'
                'update:Updates a glossary category.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex glossaries terms')
            local -a commands
            commands=(
                'create:Creates a glossary term.'
                'delete:Deletes a glossary term.'
                'describe:Describes a glossary term.'
                'list:List glossary terms.'
                'update:Updates a glossary term.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex lakes')
            local -a commands
            commands=(
                'actions:Manage Dataplex lake resource actions.'
                'add-iam-policy-binding:Add IAM policy binding to a Dataplex lake resource.'
                'authorize:Authorize a service agent to manage resources.'
                'create:Create a Dataplex lake resource.'
                'deauthorize:Deauthorize a service agent from managing resources.'
                'delete:Delete a Dataplex lake resource.'
                'describe:Describe a Dataplex lake resource.'
                'get-iam-policy:Get the IAM policy for a Dataplex lake resource.'
                'list:List Dataplex lake resources under a project.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Dataplex lake resource.'
                'set-iam-policy:Set the IAM policy to a Dataplex lake as defined in a JSON or YAML file.'
                'update:Update a Dataplex lake resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex lakes actions')
            local -a commands
            commands=(
                'list:List Dataplex lake actions.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex metadata-jobs')
            local -a commands
            commands=(
                'cancel:Cancel a Metadata Job run.'
                'create:Create a Dataplex Metadata Job.'
                'describe:Describe a Metadata Job.'
                'list:List Metadata Job resources under a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex tasks')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Dataplex task resource.'
                'create:Create a Dataplex task resource.'
                'delete:Delete a Dataplex task resource.'
                'describe:Describe a Dataplex task resource.'
                'get-iam-policy:Get the IAM policy for a Dataplex task resource.'
                'jobs:Manage Dataplex Jobs services.'
                'list:List Dataplex task resources under a lake.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Dataplex task resource.'
                'run:Trigger one-time run of a Dataplex task.'
                'set-iam-policy:Set the IAM policy to a Dataplex task as defined in a JSON or YAML file.'
                'update:Update a Dataplex task resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex tasks jobs')
            local -a commands
            commands=(
                'cancel:Cancel a Dataplex Job running a particular task.'
                'describe:Describe a Dataplex job running a particular task.'
                'list:List job runs of a Dataplex task resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex zones')
            local -a commands
            commands=(
                'actions:Manage Dataplex zone resource actions.'
                'add-iam-policy-binding:Add IAM policy binding to a Dataplex zone resource.'
                'create:Create a zone.'
                'delete:Delete a Dataplex zone resource.'
                'describe:Describe a Dataplex zone resource.'
                'get-iam-policy:Get the IAM policy for a Dataplex zone resource.'
                'list:List Dataplex zone resources under a lake.'
                'remove-iam-policy-binding:Remove IAM policy binding from a Dataplex zone resource.'
                'set-iam-policy:Set the IAM policy to a Dataplex zone as defined in a JSON or YAML file.'
                'update:Update a Dataplex zone resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataplex zones actions')
            local -a commands
            commands=(
                'list:List Dataplex zone actions.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc')
            local -a commands
            commands=(
                'autoscaling-policies:Create and manage Dataproc autoscaling policies.'
                'batches:Submit Dataproc batch jobs.'
                'clusters:Create and manage Dataproc clusters.'
                'jobs:Submit and manage Dataproc jobs.'
                'node-groups:Manage Dataproc node groups.'
                'operations:View and manage Dataproc operations.'
                'workflow-templates:Create and manage Dataproc workflow templates.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc autoscaling-policies')
            local -a commands
            commands=(
                'delete:Delete an autoscaling policy.'
                'describe:Describe an autoscaling policy.'
                'export:Export an autoscaling policy.'
                'get-iam-policy:Get IAM policy for an autoscaling policy.'
                'import:Import an autoscaling policy.'
                'list:List autoscaling policies.'
                'set-iam-policy:Set IAM policy for an autoscaling policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc batches')
            local -a commands
            commands=(
                'cancel:Cancel a batch job without removing batch resources.'
                'delete:Delete a batch job.'
                'describe:Describe a batch job.'
                'list:List batch jobs in a project.'
                'submit:Submit a Dataproc batch job.'
                'wait:View the output of a batch as it runs or after it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc batches submit')
            local -a commands
            commands=(
                'pyspark:Submit a PySpark batch job.'
                'ray:Submit a Ray batch job.'
                'spark:Submit a Spark batch job.'
                'spark-r:Submit a Spark R batch job.'
                'spark-sql:Submit a Spark SQL batch job.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc clusters')
            local -a commands
            commands=(
                'create:Create a cluster.'
                'delete:Delete a cluster.'
                'describe:View the details of a cluster.'
                'diagnose:Run a detailed diagnostic on a cluster.'
                'enable-personal-auth-session:Enable a personal auth session on a cluster.'
                'export:Export a cluster.'
                'get-iam-policy:Get IAM policy for a cluster.'
                'gke:Create Dataproc GKE-based virtual clusters.'
                'import:Import a cluster.'
                'list:View a list of clusters in a project.'
                'repair:Repair a cluster.'
                'set-iam-policy:Set IAM policy for a cluster.'
                'start:Start a cluster.'
                'stop:Stop a cluster.'
                'update:Update labels and/or the number of worker nodes in a cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc clusters gke')
            local -a commands
            commands=(
                'create:Create a GKE-based virtual cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc jobs')
            local -a commands
            commands=(
                'delete:Delete the record of an inactive job.'
                'describe:View the details of a job.'
                'get-iam-policy:Get IAM policy for a job.'
                'kill:Kill an active job.'
                'list:List jobs in a project.'
                'set-iam-policy:Set IAM policy for a job.'
                'submit:Submit Dataproc jobs to execute on a cluster.'
                'update:Update the labels for a job.'
                'wait:View the output of a job as it runs or after it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc jobs submit')
            local -a commands
            commands=(
                'flink:Submit a Flink job to a cluster.'
                'hadoop:Submit a Hadoop job to a cluster.'
                'hive:Submit a Hive job to a cluster.'
                'pig:Submit a Pig job to a cluster.'
                'presto:Submit a Presto job to a cluster.'
                'pyflink:Submit a PyFlink job to a cluster.'
                'pyspark:Submit a PySpark job to a cluster.'
                'spark:Submit a Spark job to a cluster.'
                'spark-r:Submit a SparkR job to a cluster.'
                'spark-sql:Submit a Spark SQL job to a cluster.'
                'trino:Submit a Trino job to a cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc node-groups')
            local -a commands
            commands=(
                'describe:Describe the node group.'
                'resize:Resize the number of nodes in the node group.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc operations')
            local -a commands
            commands=(
                'cancel:Cancel an active operation.'
                'delete:Delete the record of an inactive operation.'
                'describe:View the details of an operation.'
                'get-iam-policy:Get IAM policy for an operation.'
                'list:View the list of all operations.'
                'set-iam-policy:Set IAM policy for an operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc workflow-templates')
            local -a commands
            commands=(
                'add-job:Add Dataproc jobs to workflow template.'
                'create:Create a workflow template.'
                'delete:Delete a workflow template.'
                'describe:Describe a workflow template.'
                'export:Export a workflow template.'
                'get-iam-policy:Get IAM policy for a workflow template.'
                'import:Import a workflow template.'
                'instantiate:Instantiate a workflow template.'
                'instantiate-from-file:Instantiate a workflow template from a file.'
                'list:List workflow templates.'
                'remove-dag-timeout:Remove DAG timeout from a workflow template.'
                'remove-job:Remove a job from workflow template.'
                'set-cluster-selector:Set cluster selector for the workflow template.'
                'set-dag-timeout:Set DAG timeout on a workflow template.'
                'set-iam-policy:Set IAM policy for a template.'
                'set-managed-cluster:Set a managed cluster for the workflow template.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc workflow-templates add-job')
            local -a commands
            commands=(
                'hadoop:Add a hadoop job to the workflow template.'
                'hive:Add a Hive job to the workflow template.'
                'pig:Add a Pig job to the workflow template.'
                'presto:Add a Presto job to the workflow template.'
                'pyspark:Add a PySpark job to the workflow template.'
                'spark:Add a Spark job to the workflow template.'
                'spark-r:Add a SparkR job to the workflow template.'
                'spark-sql:Add a SparkSql job to the workflow template.'
                'trino:Add a Trino job to the workflow template.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc-gdc')
            local -a commands
            commands=(
                'service-instances:Manage Service Instance resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc-gdc service-instances')
            local -a commands
            commands=(
                'spark-applications:Manage Dataproc GDC Spark Applications.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc-gdc service-instances spark-applications')
            local -a commands
            commands=(
                'delete:Delete a Dataproc GDC spark application.'
                'describe:Describe a Dataproc GDC spark application.'
                'list:List Dataproc GDC Spark applications.'
                'submit:Submit Dataproc GDC Spark Applications.'
            )
            _describe 'command' commands
            ;;
        'gcloud dataproc-gdc service-instances spark-applications submit')
            local -a commands
            commands=(
                'pyspark:Create a Dataproc GDC pySpark application.'
                'spark:Create a Dataproc GDC spark application.'
                'spark-r:Create a Dataproc GDC pySpark application.'
                'spark-sql:Create a Dataproc GDC Spark SQL application.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastore')
            local -a commands
            commands=(
                'export:Export Cloud Datastore entities to Google Cloud Storage.'
                'import:Import Cloud Datastore entities from Google Cloud Storage.'
                'indexes:Manage your Cloud Datastore indexes.'
                'operations:Manage Long Running Operations for Cloud Datastore.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastore indexes')
            local -a commands
            commands=(
                'cleanup:Remove unused datastore indexes based on your local index configuration.'
                'create:Create new datastore indexes based on your local index configuration.'
                'describe:Show details about an Cloud Datastore index.'
                'list:List Cloud Datastore indexes.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastore operations')
            local -a commands
            commands=(
                'cancel:Cancel a currently-running Cloud Datastore admin operation.'
                'delete:Delete a completed Cloud Datastore admin operation.'
                'describe:Retrieves information about a Cloud Datastore admin operation.'
                'list:List pending Cloud Datastore admin operations and their status.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream')
            local -a commands
            commands=(
                'connection-profiles:Manage Datastream connection profiles.'
                'locations:Manage Datastream location resources.'
                'objects:Manage Datastream stream objects.'
                'operations:Manage Datastream operations.'
                'private-connections:Manage Datastream private connections.'
                'routes:Manage Datastream routes.'
                'streams:Manage Datastream stream resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream connection-profiles')
            local -a commands
            commands=(
                'create:Create a Datastream connection profile.'
                'delete:Delete a Datastream connection profile.'
                'describe:Show details about a Datastream connection profile.'
                'discover:Discover a Datastream connection profile.'
                'list:List Datastream connection profiles.'
                'update:Update a Datastream connection profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream locations')
            local -a commands
            commands=(
                'describe:Show details about the location.'
                'fetch-static-ips:List Datastream static ips per location.'
                'list:List Datastream locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream objects')
            local -a commands
            commands=(
                'describe:Show details about a Stream object.'
                'list:List a Datastream stream objects.'
                'lookup:Lookup a Datastream stream object.'
                'start-backfill:Start a backfill job for a Stream object.'
                'stop-backfill:Stop a backfill job for a Stream object.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream operations')
            local -a commands
            commands=(
                'cancel:Cancel a Datastream operation.'
                'delete:Delete a Datastream operation.'
                'describe:Show details about a operation.'
                'list:List operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream private-connections')
            local -a commands
            commands=(
                'create:Create a Datastream private connection.'
                'delete:Delete a Datastream private connection.'
                'describe:Show details about a Datastream private connection.'
                'list:List private connections.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream routes')
            local -a commands
            commands=(
                'create:Create a Datastream private connection route.'
                'delete:Delete a Datastream private connection route.'
                'describe:Show details about the route.'
                'list:List Datastream routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud datastream streams')
            local -a commands
            commands=(
                'create:Create a Datastream stream.'
                'delete:Delete a Datastream stream.'
                'describe:Show details about a Datastream stream resource.'
                'list:List Datastream stream resources.'
                'update:Updates a Datastream stream.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy')
            local -a commands
            commands=(
                'apply:Applies a yaml configuration containing Delivery Pipeline\(s\), Target\(s\), Custom Target Type\(s\), Deploy Policy\(ies\), and Automation\(s\) declarative definitions.'
                'automation-runs:Manages AutomationRuns resources for Cloud Deploy.'
                'automations:Manages Automations resources for Cloud Deploy.'
                'custom-target-types:Create and manage Custom Target Type resources for Cloud Deploy.'
                'delete:Deletes Delivery Pipeline\(s\), Target\(s\), Custom Target Type\(s\), and Automation\(s\) in a yaml configuration.'
                'delivery-pipelines:Create and manage Delivery Pipeline resources for Cloud Deploy.'
                'deploy-policies:Create and manage Deploy Policy resources for Google Cloud Deploy.'
                'get-config:Get the Cloud Deploy config for the provided region and project.'
                'job-runs:Manages job runs resources for Cloud Deploy.'
                'releases:Create and manage Release resources for Cloud Deploy.'
                'rollouts:Create and manage Rollout resources for Cloud Deploy.'
                'targets:Create and manage Target resources for Cloud Deploy.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy automation-runs')
            local -a commands
            commands=(
                'cancel:Cancels a Cloud Deploy Automation Run.'
                'describe:Show details for an Automation Run.'
                'list:List the Automation Runs.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy automations')
            local -a commands
            commands=(
                'delete:Deletes a Cloud Deploy Automation.'
                'describe:Show details for an Automation.'
                'export:Returns the YAML definition of the specified Automation.'
                'list:List the Automations.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy custom-target-types')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a Cloud Deploy Custom Target Type.'
                'delete:Delete a custom target type.'
                'describe:Show details for a custom target type.'
                'export:Returns the .yaml definition of the specified custom target type.'
                'get-iam-policy:Get the IAM policy for a Cloud Deploy Custom Target Type.'
                'list:List the custom target types.'
                'remove-iam-policy-binding:Remove an IAM policy binding for a Cloud Deploy Custom Target Type.'
                'set-iam-policy:Set the IAM policy for a Cloud Deploy Custom Target Type.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy delivery-pipelines')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a Cloud Deploy delivery pipeline.'
                'delete:Delete a delivery pipeline.'
                'describe:Show details about a delivery pipeline.'
                'export:Returns the .yaml definition of the specified delivery pipeline.'
                'get-iam-policy:Get the IAM policy for a Cloud Deploy delivery pipeline.'
                'list:List Cloud Deploy delivery pipelines.'
                'remove-iam-policy-binding:Remove an IAM policy binding for a Cloud Deploy delivery pipeline.'
                'set-iam-policy:Set the IAM policy for a Cloud Deploy delivery pipeline.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy deploy-policies')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a Cloud Deploy Policy.'
                'delete:Delete a deploy policy.'
                'describe:Show details about a deploy policy.'
                'export:Returns the .yaml definition of the specified deploy policy.'
                'get-iam-policy:Get the IAM policy for a Cloud Deploy Policy.'
                'list:List the deploy policies.'
                'remove-iam-policy-binding:Remove an IAM policy binding for a Cloud Deploy Policy.'
                'set-iam-policy:Set the IAM policy for a Cloud Deploy Policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy job-runs')
            local -a commands
            commands=(
                'describe:Show details for a job run.'
                'list:List the job runs.'
                'terminate:Terminates a Cloud Deploy job run.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy releases')
            local -a commands
            commands=(
                'abandon:Abandons a release.'
                'create:Creates a new release, delivery pipeline qualified.'
                'describe:Show details about a release.'
                'list:List releases.'
                'promote:Promotes a release from one target \(source\), to another \(destination\).'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy rollouts')
            local -a commands
            commands=(
                'advance:Advances a rollout.'
                'approve:Approves a rollout having an Approval state of "Required".'
                'cancel:Cancel a Rollout.'
                'describe:Show details for a rollout.'
                'ignore-job:Ignores a specified job and phase combination on a rollout.'
                'list:List the rollouts.'
                'reject:Rejects a rollout having an Approval state of "Required".'
                'retry-job:Retries a specified job, phase combination on a rollout.'
            )
            _describe 'command' commands
            ;;
        'gcloud deploy targets')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a Cloud Deploy target.'
                'delete:Deletes a Cloud Deploy target.'
                'describe:Describes details specific to the individual target, delivery pipeline qualified.'
                'export:Returns the .yaml definition of the specified target.'
                'get-iam-policy:Get the IAM policy for a Cloud Deploy target.'
                'list:List Cloud Deploy targets.'
                'redeploy:Redeploy the last release to a target.'
                'remove-iam-policy-binding:Remove an IAM policy binding for a Cloud Deploy target.'
                'rollback:Rollbacks a target to a prior rollout.'
                'set-iam-policy:Set the IAM policy for a Cloud Deploy target.'
            )
            _describe 'command' commands
            ;;
        'gcloud deployment-manager')
            local -a commands
            commands=(
                'deployments:Commands for Deployment Manager deployments.'
                'manifests:Commands for Deployment Manager manifests.'
                'operations:Commands for Deployment Manager operations.'
                'resources:Commands for Deployment Manager resources.'
                'types:Commands for Deployment Manager types.'
            )
            _describe 'command' commands
            ;;
        'gcloud deployment-manager deployments')
            local -a commands
            commands=(
                'cancel-preview:Cancel a pending or running deployment preview.'
                'create:Create a deployment.'
                'delete:Delete a deployment.'
                'describe:Provide information about a deployment.'
                'list:List deployments in a project.'
                'stop:Stop a pending or running deployment update or creation.'
                'update:Update a deployment based on a provided config file.'
            )
            _describe 'command' commands
            ;;
        'gcloud deployment-manager manifests')
            local -a commands
            commands=(
                'describe:Provide information about a manifest.'
                'list:List manifests in a deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud deployment-manager operations')
            local -a commands
            commands=(
                'describe:Provide information about an operation.'
                'list:List operations in a project.'
                'wait:Wait for all operations specified to complete before returning.'
            )
            _describe 'command' commands
            ;;
        'gcloud deployment-manager resources')
            local -a commands
            commands=(
                'describe:Provide information about a resource.'
                'list:List resources in a deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud deployment-manager types')
            local -a commands
            commands=(
                'list:List types in a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud developer-connect')
            local -a commands
            commands=(
                'connections:Manage connection resources.'
                'insights-configs:Manage Insights Config resources.'
                'operations:Manage Operation resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud developer-connect connections')
            local -a commands
            commands=(
                'create:Create a connection resource.'
                'delete:Delete a single connection.'
                'describe:Get details of a single connection resource.'
                'git-repository-links:Manage git repository link resources.'
                'list:List connections.'
                'update:Update the parameters of a single connection.'
            )
            _describe 'command' commands
            ;;
        'gcloud developer-connect connections git-repository-links')
            local -a commands
            commands=(
                'create:Create a git repository link.'
                'delete:Delete a single git repository link.'
                'describe:Get details of a single git repository link.'
                'fetch-read-token:Fetch the read token of a given gitRepositoryLink.'
                'fetch-read-write-token:Fetch the read/write token of a given gitRepositoryLink.'
                'list:List all git repository links in a connection.'
            )
            _describe 'command' commands
            ;;
        'gcloud developer-connect insights-configs')
            local -a commands
            commands=(
                'create:Create an insight config.'
                'delete:Delete insightsConfigs.'
                'describe:Describe insightsConfigs.'
                'list:List insightsConfigs.'
                'update:Update the configuration of an insight config.'
            )
            _describe 'command' commands
            ;;
        'gcloud developer-connect operations')
            local -a commands
            commands=(
                'cancel:Cancel operations.'
                'delete:Delete operations.'
                'describe:Describe operations.'
                'list:List operations.'
                'wait:Wait operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns')
            local -a commands
            commands=(
                'dns-keys:Manage Cloud DNS DNSKEY records.'
                'managed-zones:Manage your Cloud DNS managed-zones.'
                'operations:Manage your Cloud DNS operations.'
                'policies:Manage your Cloud DNS policies.'
                'project-info:View Cloud DNS related information for a project.'
                'record-sets:Manage the record-sets within your managed-zones.'
                'response-policies:Manage your Cloud DNS response policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns dns-keys')
            local -a commands
            commands=(
                'describe:Show details about a DNS key resource.'
                'list:List DNS key resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns managed-zones')
            local -a commands
            commands=(
                'create:Create a Cloud DNS managed-zone.'
                'delete:Delete an empty Cloud DNS managed-zone.'
                'describe:View the details of a Cloud DNS managed-zone.'
                'get-iam-policy:Get the IAM policy for a Cloud DNS managed-zone.'
                'list:View the list of all your managed-zones.'
                'set-iam-policy:Set the IAM policy for a Cloud DNS managed-zone.'
                'update:Update an existing Cloud DNS managed-zone.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns operations')
            local -a commands
            commands=(
                'describe:Describe an operation.'
                'list:List Cloud DNS operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns policies')
            local -a commands
            commands=(
                'create:Creates a new Cloud DNS policy.'
                'delete:Deletes a Cloud DNS policy.'
                'describe:Describes a Cloud DNS policy.'
                'list:View the list of all your Cloud DNS policies.'
                'update:Update an existing Cloud DNS policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns project-info')
            local -a commands
            commands=(
                'describe:View Cloud DNS related information for a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns record-sets')
            local -a commands
            commands=(
                'changes:View details about changes to your Cloud DNS record-sets.'
                'create:Creates a record-set in a managed-zone.'
                'delete:Delete a record-set in a managed-zone.'
                'describe:Describe a record-set in a managed-zone.'
                'export:Export your record-sets into a file.'
                'import:Import record-sets into your managed-zone.'
                'list:View the list of record-sets in a managed-zone.'
                'transaction:Make scriptable and transactional changes to your record-sets.'
                'update:Updates a record-set in a managed-zone.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns record-sets changes')
            local -a commands
            commands=(
                'describe:View the details of a change.'
                'list:View the list of changes that have been made to your record-sets.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns record-sets transaction')
            local -a commands
            commands=(
                'abort:Abort transaction.'
                'add:Append a record-set addition to the transaction.'
                'describe:Describe the transaction.'
                'execute:Execute the transaction on Cloud DNS.'
                'remove:Append a record-set deletion to the transaction.'
                'start:Start a transaction.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns response-policies')
            local -a commands
            commands=(
                'create:Creates a new Cloud DNS response policy.'
                'delete:Deletes a Cloud DNS response policy.'
                'describe:Describes a Cloud DNS response policy.'
                'list:Displays the list of all Cloud DNS response policies in a given project.'
                'rules:Manage your Cloud DNS response policy rules.'
                'update:Updates a Cloud DNS response policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud dns response-policies rules')
            local -a commands
            commands=(
                'create:Creates a new Cloud DNS response policy rule.'
                'delete:Deletes a Cloud DNS response policy rule.'
                'describe:Shows details about a Cloud DNS response policy rule.'
                'list:Displays the list of all a Cloud DNS response policy rules.'
                'update:Updates a new Cloud DNS response policy rule.'
            )
            _describe 'command' commands
            ;;
        'gcloud domains')
            local -a commands
            commands=(
                'list-user-verified:Lists the user'\''s verified domains.'
                'registrations:Manage Cloud Domains registrations.'
                'verify:Verifies a domain via an in-browser workflow.'
            )
            _describe 'command' commands
            ;;
        'gcloud domains registrations')
            local -a commands
            commands=(
                'authorization-code:Manage Cloud Domains registration'\''s authorization code.'
                'configure:Configure Cloud Domains registrations'\'' management, DNS or contact settings.'
                'delete:Delete a Cloud Domains registration.'
                'describe:Describe an existing Cloud Domains registration.'
                'export:\(REMOVED\)  Export a Cloud Domains registration.'
                'get-register-parameters:Get register parameters \(including availability\) of a specific domain.'
                'get-transfer-parameters:\(REMOVED\)  Get transfer parameters of a specific domain.'
                'google-domains-dns:Manage deprecated Google Domains DNS configuration.'
                'import:\(REMOVED\)  Import a domain from Google Domains registrar to Cloud Domains.'
                'initiate-push-transfer:Initiates the push transfer process.'
                'list:List Cloud Domains registrations.'
                'list-importable-domains:\(REMOVED\)  List Google Domains registrations importable into Cloud Domains.'
                'operations:Manage Cloud Domains operations.'
                'register:Register a new domain.'
                'renew-domain:Renew a recently expired Cloud Domains registration.'
                'search-domains:Search for available domains.'
                'transfer:\(REMOVED\)  Transfer a domain from another registrar.'
                'update:Update a Cloud Domains registration.'
            )
            _describe 'command' commands
            ;;
        'gcloud domains registrations authorization-code')
            local -a commands
            commands=(
                'get:Get authorization code of a specific Cloud Domains registration.'
                'reset:Resets authorization code of a specific Cloud Domains registration.'
            )
            _describe 'command' commands
            ;;
        'gcloud domains registrations configure')
            local -a commands
            commands=(
                'contacts:Configure contact settings of a Cloud Domains registration.'
                'dns:Configure DNS settings of a Cloud Domains registration.'
                'management:Configure management settings of a Cloud Domains registration.'
            )
            _describe 'command' commands
            ;;
        'gcloud domains registrations google-domains-dns')
            local -a commands
            commands=(
                'export-dns-record-sets:Export your registration'\''s Google Domains DNS zone'\''s record-sets into a file.'
                'get-forwarding-config:Get forwarding configuration of a specific Cloud Domains registration.'
            )
            _describe 'command' commands
            ;;
        'gcloud domains registrations operations')
            local -a commands
            commands=(
                'describe:Show details about a Cloud Domains operation.'
                'list:List Cloud Domains operations.'
                'wait:Wait for asynchronous operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cache')
            local -a commands
            commands=(
                'keysets:Interact with and manage EdgeCacheKeyset resources.'
                'operations:Manage EdgeCache operations.'
                'origins:Interact with and manage EdgeCacheOrigin resources.'
                'services:Interact with and manage EdgeCacheService resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cache keysets')
            local -a commands
            commands=(
                'create:Create an EdgeCacheKeyset resource.'
                'delete:Delete an EdgeCacheKeyset resource.'
                'describe:Show details about an EdgeCacheKeyset resource.'
                'export:Export an EdgeCacheKeyset resource.'
                'import:Import an EdgeCacheKeyset resource.'
                'list:List EdgeCacheKeyset resources.'
                'update:Update an EdgeCacheKeyset resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cache operations')
            local -a commands
            commands=(
                'describe:Describe a long-running operation.'
                'list:List long-running operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cache origins')
            local -a commands
            commands=(
                'create:Create an EdgeCacheOrigin resource.'
                'delete:Delete an EdgeCacheOrigin resource.'
                'describe:Show details about an EdgeCacheOrigin resource.'
                'export:Export an EdgeCacheOrigin resource.'
                'import:Import an EdgeCacheOrigin resource.'
                'list:List all EdgeCacheOrigin resources in a project.'
                'update:Update an EdgeCacheOrigin resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cache services')
            local -a commands
            commands=(
                'delete:Delete an EdgeCacheService resource.'
                'describe:Show details about an EdgeCacheService resource.'
                'export:Export an EdgeCacheService resource.'
                'import:Import an EdgeCacheService resource.'
                'invalidate-cache:Invalidate the cache for an EdgeCacheService resource.'
                'list:List all EdgeCacheService resources in a project.'
                'update:Update an EdgeCacheService resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud')
            local -a commands
            commands=(
                'container:Manage Edge Container resources.'
                'networking:Manage Distributed Cloud Edge Network resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container')
            local -a commands
            commands=(
                'clusters:Manage Kubernetes Edge clusters.'
                'get-server-config:Get server config.'
                'machines:Manage Kubernetes Edge machines.'
                'operations:Command group for working with Kubernetes Edge operations.'
                'regions:Manages Edge Container regions.'
                'vpn-connections:Manage Edge VPN connections between an Edge Container cluster and a VPC network.'
                'zones:Inspect Edge Container zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container clusters')
            local -a commands
            commands=(
                'create:Create an Edge Container cluster.'
                'delete:Delete an Edge Container cluster.'
                'describe:Show details about the cluster.'
                'get-credentials:Get credentials of an edge-container cluster.'
                'list:List Edge Container clusters.'
                'node-pools:Manage Kubernetes Edge node pools.'
                'print-access-token:Generate an access token for an Edge Container cluster.'
                'update:Update an Edge Container cluster.'
                'upgrade:Upgrade an Edge Container cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container clusters node-pools')
            local -a commands
            commands=(
                'create:Create an Edge Container node pool.'
                'delete:Delete an Edge Container nodePool.'
                'describe:Show details about the nodePool.'
                'list:List Edge Container nodePools.'
                'update:Updates an Edge Container node pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container machines')
            local -a commands
            commands=(
                'describe:Show details about the machine.'
                'list:List Edge Container machines.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container operations')
            local -a commands
            commands=(
                'describe:Get description of a long-running edge container operation.'
                'wait:Poll long-running edge container operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container regions')
            local -a commands
            commands=(
                'describe:Describe an Edge Container region \(location\).'
                'list:List Edge Container regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container vpn-connections')
            local -a commands
            commands=(
                'create:Create a VPN connection between an Edge Container cluster and a VPC network.'
                'delete:Delete a VPN connection between an Edge Container cluster and a VPC network.'
                'describe:Show details about a VPN connection.'
                'list:List VPN connections.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud container zones')
            local -a commands
            commands=(
                'describe:Describe an Edge Container zone.'
                'list:List Edge Container zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking')
            local -a commands
            commands=(
                'interconnects:Manage Distributed Cloud Edge Network interconnects.'
                'networks:Manage Distributed Cloud Edge Network networks.'
                'operations:Command group for working with Distributed Cloud Edge Network operations.'
                'routers:Manage Distributed Cloud Edge Network routers.'
                'subnets:Manage Distributed Cloud Edge Network subnets.'
                'zones:Manage Distributed Cloud Edge Network zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking interconnects')
            local -a commands
            commands=(
                'attachments:Manage Distributed Cloud Edge Network interconnect attachments.'
                'describe:Show details about the Distributed Cloud Edge Network interconnect.'
                'get-diagnostics:Get the diagnostics of a specified Distributed Cloud Edge Network interconnect.'
                'list:List Distributed Cloud Edge Network interconnects.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking interconnects attachments')
            local -a commands
            commands=(
                'dedicated:Manage Distributed Cloud Edge Network dedicated interconnect attachments.'
                'delete:Delete a Distributed Cloud Edge Network interconnect attachment.'
                'describe:Show details about a Distributed Cloud Edge Network interconnect attachment.'
                'list:List Distributed Cloud Edge Network interconnect attachments.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking interconnects attachments dedicated')
            local -a commands
            commands=(
                'create:Create a Distributed Cloud Edge Network interconnect attachment.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking networks')
            local -a commands
            commands=(
                'create:Create a Distributed Cloud Edge Network network.'
                'delete:Delete a Distributed Cloud Edge Network network.'
                'describe:Show details about the Distributed Cloud Edge Network network.'
                'get-status:Get the status of a specified Distributed Cloud Edge Network network.'
                'list:List Distributed Cloud Edge Network networks.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking operations')
            local -a commands
            commands=(
                'describe:Get description of a long-running edge network operation.'
                'wait:Poll long-running edge network operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking routers')
            local -a commands
            commands=(
                'add-bgp-peer:Add a BGP peer to a Distributed Cloud Edge Network router.'
                'add-interface:Add an interface to a Distributed Cloud Edge Network router.'
                'create:Create a Distributed Cloud Edge Network router.'
                'delete:Delete a Distributed Cloud Edge Network router.'
                'describe:Show details about the Distributed Cloud Edge Network router.'
                'get-status:Get the status of a specified Distributed Cloud Edge Network router.'
                'list:List Distributed Cloud Edge Network routers.'
                'remove-bgp-peer:Remove a BGP peer from a Distributed Cloud Edge Network router.'
                'remove-interface:remove an interface on a Distributed Cloud Edge Network router.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking subnets')
            local -a commands
            commands=(
                'create:Create a Distributed Cloud Edge Network subnet.'
                'delete:Delete a Distributed Cloud Edge Network subnet.'
                'describe:Show details about the Distributed Cloud Edge Network subnet.'
                'list:List Distributed Cloud Edge Network subnets.'
            )
            _describe 'command' commands
            ;;
        'gcloud edge-cloud networking zones')
            local -a commands
            commands=(
                'init:Initialize a specified Distributed Cloud Edge Network zone.'
            )
            _describe 'command' commands
            ;;
        'gcloud emulators')
            local -a commands
            commands=(
                'firestore:Manage your local Firestore emulator.'
                'spanner:Manage your local Spanner emulator.'
            )
            _describe 'command' commands
            ;;
        'gcloud emulators firestore')
            local -a commands
            commands=(
                'start:Start a local Firestore emulator.'
            )
            _describe 'command' commands
            ;;
        'gcloud emulators spanner')
            local -a commands
            commands=(
                'env-init:Print the commands required to export Spanner emulator'\''s env variables.'
                'start:Start a local Cloud Spanner emulator.'
            )
            _describe 'command' commands
            ;;
        'gcloud endpoints')
            local -a commands
            commands=(
                'configs:View configurations for various services.'
                'operations:Manage Operation for various services.'
                'services:Manage Services.'
            )
            _describe 'command' commands
            ;;
        'gcloud endpoints configs')
            local -a commands
            commands=(
                'describe:Describes the configuration for a given version of a service.'
                'list:Lists the configurations for a given service.'
            )
            _describe 'command' commands
            ;;
        'gcloud endpoints operations')
            local -a commands
            commands=(
                'describe:Describes an operation resource for a given operation name.'
                'list:List operations for a project.'
                'wait:Waits for an operation to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud endpoints services')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a service.'
                'check-iam-policy:Returns information about a principal'\''s permissions on a service.'
                'delete:Deletes a service from Google Service Management.'
                'deploy:Deploys a service configuration for the given service name.'
                'describe:Describes a service given a service name.'
                'get-iam-policy:Describes the IAM policy for a service.'
                'list:List services for a project.'
                'remove-iam-policy-binding:Remove IAM policy binding from a service.'
                'undelete:Undeletes a service configuration that was previously deleted.'
            )
            _describe 'command' commands
            ;;
        'gcloud essential-contacts')
            local -a commands
            commands=(
                'compute:Compute the essential contacts that are subscribed to the specified notification categories for a resource.'
                'create:Create an essential contact.'
                'delete:Delete an essential contact.'
                'describe:Describe an essential contact.'
                'list:List essential contacts for a resource.'
                'update:Update an essential contact.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc')
            local -a commands
            commands=(
                'audit-logs-provider:Explore provider serviceNames and methodNames for event type '\''google.cloud.audit.log.v1.written'\'' in Eventarc.'
                'channel-connections:Manage Eventarc channel connections.'
                'channels:Manage Eventarc channels.'
                'enrollments:Manage Eventarc enrollments.'
                'gke-destinations:Manage Eventarc with Cloud Run for Anthos/GKE destinations.'
                'google-api-sources:Manage Eventarc Google API sources.'
                'google-channels:Manage Eventarc Google channels.'
                'locations:Explore locations available for Eventarc.'
                'message-buses:Manage Eventarc message buses.'
                'pipelines:Manage Eventarc pipelines.'
                'providers:Explore event providers available in Eventarc.'
                'triggers:Manage Eventarc triggers.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc audit-logs-provider')
            local -a commands
            commands=(
                'method-names:Explore values for the methodName attribute for event type '\''google.cloud.audit.log.v1.written'\''.'
                'service-names:Explore values for the serviceName attribute for event type '\''google.cloud.audit.log.v1.written'\''.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc audit-logs-provider method-names')
            local -a commands
            commands=(
                'list:List values for the methodName attribute for event type '\''google.cloud.audit.log.v1.written'\''.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc audit-logs-provider service-names')
            local -a commands
            commands=(
                'list:List values for the serviceName attribute for event type '\''google.cloud.audit.log.v1.written'\''.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc channel-connections')
            local -a commands
            commands=(
                'create:Create an Eventarc channel connection.'
                'delete:Delete an Eventarc channel connection.'
                'describe:Describe an Eventarc channel connection.'
                'list:List Eventarc channel connections.'
                'publish:Publish to an Eventarc channel connection.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc channels')
            local -a commands
            commands=(
                'create:Create an Eventarc channel.'
                'delete:Delete an Eventarc channel.'
                'describe:Describe an Eventarc channel.'
                'list:List Eventarc channels.'
                'publish:Publish to an Eventarc channel.'
                'update:Update an Eventarc channel.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc enrollments')
            local -a commands
            commands=(
                'create:Create an Eventarc enrollment.'
                'delete:Delete an Eventarc enrollment.'
                'describe:Describe an Eventarc enrollment.'
                'list:List Eventarc enrollments.'
                'update:Update an Eventarc enrollment.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc gke-destinations')
            local -a commands
            commands=(
                'init:Initialize a project for Eventarc with Cloud Run for Anthos/GKE destinations.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc google-api-sources')
            local -a commands
            commands=(
                'create:Create an Eventarc Google API source.'
                'delete:Delete an Eventarc Google API source.'
                'describe:Describe an Eventarc Google API source.'
                'list:List Eventarc Google API sources.'
                'update:Update an Eventarc Google API source.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc google-channels')
            local -a commands
            commands=(
                'describe:Describe an Eventarc Google channel.'
                'update:Update an Eventarc Google channel.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc locations')
            local -a commands
            commands=(
                'list:List locations available for Eventarc.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc message-buses')
            local -a commands
            commands=(
                'create:Create an Eventarc message bus.'
                'delete:Delete an Eventarc message bus.'
                'describe:Describe an Eventarc message bus.'
                'list:List Eventarc message buses.'
                'list-enrollments:List Eventarc enrollments attached to an Eventarc message bus.'
                'publish:Publish to an Eventarc message bus.'
                'update:Update an Eventarc message bus.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc pipelines')
            local -a commands
            commands=(
                'create:Create an Eventarc pipeline.'
                'delete:Delete an Eventarc pipeline.'
                'describe:Describe an Eventarc pipeline.'
                'list:List Eventarc pipelines.'
                'update:Update an Eventarc pipeline.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc providers')
            local -a commands
            commands=(
                'describe:Describe an Eventarc event provider.'
                'list:List event providers available in Eventarc.'
            )
            _describe 'command' commands
            ;;
        'gcloud eventarc triggers')
            local -a commands
            commands=(
                'create:Create an Eventarc trigger.'
                'delete:Delete an Eventarc trigger.'
                'describe:Describe an Eventarc trigger.'
                'list:List Eventarc triggers.'
                'update:Update an Eventarc trigger.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore')
            local -a commands
            commands=(
                'backups:Create and manage Filestore backups.'
                'instances:Create and manage Filestore instances.'
                'locations:List locations where Filestore is available.'
                'operations:Read and manipulate Filestore operations.'
                'regions:List regions where Filestore is available.'
                'zones:List zones where Filestore is available.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore backups')
            local -a commands
            commands=(
                'create:Create a Filestore backup.'
                'delete:Delete a Filestore backup.'
                'describe:Describe a Filestore backup.'
                'list:List Filestore backups.'
                'update:Update a Filestore backup.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore instances')
            local -a commands
            commands=(
                'create:Create a Filestore instance.'
                'delete:Delete a Filestore instance.'
                'describe:Show metadata for a Filestore instance.'
                'list:List Filestore instances.'
                'promote-replica:Promote a Filestore standby replication instance.'
                'restore:Restore a Filestore instance from a backup.'
                'revert:Revert a Filestore instance.'
                'snapshots:Create and manage Filestore snapshots.'
                'update:Update a Filestore instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore instances snapshots')
            local -a commands
            commands=(
                'create:Create a Filestore snapshot.'
                'delete:Delete a Filestore snapshot.'
                'describe:Display information about a Filestore snapshot.'
                'list:List Filestore snapshots.'
                'update:Update the description or labels of a Filestore snapshot.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore locations')
            local -a commands
            commands=(
                'describe:Describe a Filestore location.'
                'list:List all Filestore locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore operations')
            local -a commands
            commands=(
                'cancel:Cancel a Filestore operation.'
                'describe:Describe a Filestore operation.'
                'list:List all Filestore operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore regions')
            local -a commands
            commands=(
                'list:List all Filestore regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud filestore zones')
            local -a commands
            commands=(
                'list:List all Filestore zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase')
            local -a commands
            commands=(
                'test:Interact with Firebase Test Lab.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test')
            local -a commands
            commands=(
                'android:Command group for Android application testing.'
                'ios:Command group for iOS application testing.'
                'network-profiles:Explore network profiles available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test android')
            local -a commands
            commands=(
                'list-device-capacities:List capacity information for Android models & versions.'
                'locales:Explore Android locales available for testing.'
                'models:Explore Android models available in the Test Environment catalog.'
                'run:Invoke a test in Firebase Test Lab for Android and view test results.'
                'versions:Explore Android versions available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test android locales')
            local -a commands
            commands=(
                'describe:Describe an Android locale.'
                'list:List all Android locales available for testing internationalized apps.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test android models')
            local -a commands
            commands=(
                'describe:Describe an Android model.'
                'list:List all Android models available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test android versions')
            local -a commands
            commands=(
                'describe:Describe an Android OS version.'
                'list:List all Android OS versions available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test ios')
            local -a commands
            commands=(
                'list-device-capacities:List capacity information for iOS models & versions.'
                'locales:Explore iOS locales available for testing.'
                'models:Explore iOS models available in the Test Environment catalog.'
                'run:Invoke a test in Firebase Test Lab for iOS and view test results.'
                'versions:Explore iOS versions available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test ios locales')
            local -a commands
            commands=(
                'describe:Describe an iOS locale.'
                'list:List all iOS locales available for testing internationalized apps.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test ios models')
            local -a commands
            commands=(
                'describe:Describe an iOS model.'
                'list:List all iOS models available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test ios versions')
            local -a commands
            commands=(
                'describe:Describe an iOS operating system version.'
                'list:List all iOS versions available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firebase test network-profiles')
            local -a commands
            commands=(
                'describe:Describe a network profile.'
                'list:List all network profiles available for testing.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore')
            local -a commands
            commands=(
                'backups:The set of commands to manage backups for Cloud Firestore.'
                'bulk-delete:bulk delete Cloud Firestore documents.'
                'databases:Manage Creation of Cloud Firestore in Native mode Database.'
                'export:export Cloud Firestore documents to Google Cloud Storage.'
                'fields:Manage field metadata for Cloud Firestore.'
                'import:import Cloud Firestore documents from Google Cloud Storage.'
                'indexes:Manage indexes for Cloud Firestore.'
                'locations:The set of commands to manage Locations for Cloud Firestore.'
                'operations:Manage Long Running Operations for Cloud Firestore.'
                'user-creds:Manage the user creds for a Cloud Firestore Database.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore backups')
            local -a commands
            commands=(
                'delete:Deletes a Cloud Firestore backup.'
                'describe:Retrieves information about a Cloud Firestore backup.'
                'list:List backups available to Cloud Firestore.'
                'schedules:Manage the backup schedules for a Cloud Firestore Database.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore backups schedules')
            local -a commands
            commands=(
                'create:Creates a Cloud Firestore backup schedule.'
                'delete:Deletes a Cloud Firestore backup schedule.'
                'describe:Describes a Cloud Firestore backup schedule.'
                'list:Lists backup schedules under a Cloud Firestore database.'
                'update:Updates a Cloud Firestore backup schedule.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore databases')
            local -a commands
            commands=(
                'connection-string:Prints the mongo connection string for the given Firestore database.'
                'create:Create a Google Cloud Firestore database via Firestore API.'
                'delete:Delete a Google Cloud Firestore database.'
                'describe:Describes information about a Cloud Firestore database.'
                'list:Lists all Firestore databases under the project.'
                'ping:Times the connection and ping time for a Firestore with MongoDB compatibility database.'
                'restore:Restores a Cloud Firestore database from a backup.'
                'update:Update the database configuration of a Cloud Firestore database.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore fields')
            local -a commands
            commands=(
                'ttls:Manage Time-to-live metadata for Cloud Firestore.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore fields ttls')
            local -a commands
            commands=(
                'list:List all fields used as a Time To Live expiration setting.'
                'update:Update the TTL configuration of the given field.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore indexes')
            local -a commands
            commands=(
                'composite:Manage composite indexes for Cloud Firestore.'
                'fields:Manage single-field indexes for Cloud Firestore.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore indexes composite')
            local -a commands
            commands=(
                'create:Create a new composite index.'
                'delete:Delete the given composite index.'
                'describe:Describe the given composite index.'
                'list:List composite indexes.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore indexes fields')
            local -a commands
            commands=(
                'describe:Describe the index configuration of the given field.'
                'list:List fields with non-default index settings.'
                'update:Update the index configuration of the given field.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore locations')
            local -a commands
            commands=(
                'list:List locations available to Google Cloud Firestore.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore operations')
            local -a commands
            commands=(
                'cancel:Cancel a currently-running Cloud Firestore admin operation.'
                'delete:Delete a completed Cloud Firestore admin operation.'
                'describe:Retrieves information about a Cloud Firestore admin operation.'
                'list:List pending Cloud Firestore admin operations and their status.'
            )
            _describe 'command' commands
            ;;
        'gcloud firestore user-creds')
            local -a commands
            commands=(
                'create:Creates a Cloud Firestore user creds.'
                'delete:Deletes a Cloud Firestore user creds.'
                'describe:Describes a Cloud Firestore user creds.'
                'disable:Disables a Cloud Firestore user creds.'
                'enable:Enables a Cloud Firestore user creds.'
                'list:Lists user creds under a Cloud Firestore database.'
                'reset-password:Resets a Cloud Firestore user creds.'
            )
            _describe 'command' commands
            ;;
        'gcloud functions')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds an IAM policy binding for a Google Cloud Function.'
                'add-invoker-policy-binding:Adds an invoker binding to the IAM policy of a Google Cloud Function.'
                'call:Triggers execution of a Google Cloud Function.'
                'delete:Delete a Google Cloud Function.'
                'deploy:Create or update a Google Cloud Function.'
                'describe:Display details of a Google Cloud Function.'
                'detach:Detach a Cloud Functions v2 function from its existing environment and make it a native Cloud Run function.'
                'event-types:List types of events that can be a trigger for a Google Cloud Function.'
                'get-iam-policy:Get IAM policy for a Google Cloud Function.'
                'list:List Google Cloud Functions.'
                'logs:Display log entries produced by Google Cloud Functions.'
                'regions:List regions available to Google Cloud Functions.'
                'remove-iam-policy-binding:Removes an IAM policy binding from a Google Cloud Function.'
                'remove-invoker-policy-binding:Removes an invoker binding from the IAM policy of a Google Cloud Function.'
                'runtimes:List runtimes available to Google Cloud Functions.'
                'set-iam-policy:Sets IAM policy for a Google Cloud Function.'
            )
            _describe 'command' commands
            ;;
        'gcloud functions event-types')
            local -a commands
            commands=(
                'list:List types of events that can be a trigger for a Google Cloud Function.'
            )
            _describe 'command' commands
            ;;
        'gcloud functions logs')
            local -a commands
            commands=(
                'read:Display log entries produced by Google Cloud Functions.'
            )
            _describe 'command' commands
            ;;
        'gcloud functions regions')
            local -a commands
            commands=(
                'list:List regions available to Google Cloud Functions.'
            )
            _describe 'command' commands
            ;;
        'gcloud functions runtimes')
            local -a commands
            commands=(
                'list:List runtimes available to Google Cloud Functions.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini')
            local -a commands
            commands=(
                'code-repository-indexes:Manage Code Repository Index resources.'
                'code-tools-settings:Manage Code Tools Setting resources.'
                'data-sharing-with-google-settings:Manage Data Sharing With Google Setting resources.'
                'gemini-gcp-enablement-settings:Manage Gemini Gcp Enablement Setting resources.'
                'logging-settings:Manage Logging Setting resources.'
                'operations:Manage Operation resources.'
                'release-channel-settings:Manage Release Channel Setting resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini code-repository-indexes')
            local -a commands
            commands=(
                'create:Create a code repository index instance.'
                'delete:Delete a code repository index instance.'
                'describe:Get details of a code repository index instance.'
                'list:List all code repository index instances in a specified project and location.'
                'repository-groups:Manage Repository Group resources.'
                'update:Update the configuration of a code repository index instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini code-repository-indexes repository-groups')
            local -a commands
            commands=(
                'create:Create a repository group for a given code repository index instance.'
                'delete:Delete a repository group from a given code repository index instance.'
                'describe:Get details of a code repository index instance.'
                'get-iam-policy:Get the IAM policy for a code repository index repository group.'
                'list:List all repository group for a given code repository index instance.'
                'set-iam-policy:Get the IAM policy for a code repository index repository group.'
                'update:Update the configuration of a repository group.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini code-tools-settings')
            local -a commands
            commands=(
                'create:Create codeToolsSettings.'
                'delete:Delete codeToolsSettings.'
                'describe:Describe codeToolsSettings.'
                'list:List codeToolsSettings.'
                'setting-bindings:Manage Setting Binding resources.'
                'update:Update codeToolsSettings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini code-tools-settings setting-bindings')
            local -a commands
            commands=(
                'create:Create settingBindings.'
                'delete:Delete settingBindings.'
                'describe:Describe settingBindings.'
                'list:List settingBindings.'
                'update:Update settingBindings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini data-sharing-with-google-settings')
            local -a commands
            commands=(
                'create:Create dataSharingWithGoogleSettings.'
                'delete:Delete dataSharingWithGoogleSettings.'
                'describe:Describe dataSharingWithGoogleSettings.'
                'list:List dataSharingWithGoogleSettings.'
                'setting-bindings:Manage Setting Binding resources.'
                'update:Update dataSharingWithGoogleSettings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini data-sharing-with-google-settings setting-bindings')
            local -a commands
            commands=(
                'create:Create settingBindings.'
                'delete:Delete settingBindings.'
                'describe:Describe settingBindings.'
                'list:List settingBindings.'
                'update:Update settingBindings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini gemini-gcp-enablement-settings')
            local -a commands
            commands=(
                'create:Create geminiGcpEnablementSettings.'
                'delete:Delete geminiGcpEnablementSettings.'
                'describe:Describe geminiGcpEnablementSettings.'
                'list:List geminiGcpEnablementSettings.'
                'setting-bindings:Manage Setting Binding resources.'
                'update:Update geminiGcpEnablementSettings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini gemini-gcp-enablement-settings setting-bindings')
            local -a commands
            commands=(
                'create:Create settingBindings.'
                'delete:Delete settingBindings.'
                'describe:Describe settingBindings.'
                'list:List settingBindings.'
                'update:Update settingBindings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini logging-settings')
            local -a commands
            commands=(
                'create:Create loggingSettings.'
                'delete:Delete loggingSettings.'
                'describe:Describe loggingSettings.'
                'list:List loggingSettings.'
                'setting-bindings:Manage Setting Binding resources.'
                'update:Update loggingSettings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini logging-settings setting-bindings')
            local -a commands
            commands=(
                'create:Create settingBindings.'
                'delete:Delete settingBindings.'
                'describe:Describe settingBindings.'
                'list:List settingBindings.'
                'update:Update settingBindings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini operations')
            local -a commands
            commands=(
                'cancel:Cancel operations.'
                'delete:Delete operations.'
                'describe:Describe operations.'
                'list:List operations.'
                'wait:Wait operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini release-channel-settings')
            local -a commands
            commands=(
                'create:Create releaseChannelSettings.'
                'delete:Delete releaseChannelSettings.'
                'describe:Describe releaseChannelSettings.'
                'list:List releaseChannelSettings.'
                'setting-bindings:Manage Setting Binding resources.'
                'update:Update releaseChannelSettings.'
            )
            _describe 'command' commands
            ;;
        'gcloud gemini release-channel-settings setting-bindings')
            local -a commands
            commands=(
                'create:Create settingBindings.'
                'delete:Delete settingBindings.'
                'describe:Describe settingBindings.'
                'list:List settingBindings.'
                'update:Update settingBindings.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare')
            local -a commands
            commands=(
                'consent-stores:Manage Cloud Healthcare API consent stores.'
                'datasets:Manage Cloud Healthcare API datasets.'
                'dicom-stores:Manage Cloud Healthcare API DICOM stores.'
                'fhir-stores:Manage Cloud Healthcare API FHIR stores.'
                'hl7v2-stores:Manage Cloud Healthcare API HL7v2 stores.'
                'operations:Manage Cloud Healthcare API operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare consent-stores')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Healthcare API consent store.'
                'check-data-access:Check the consent for a particular data ID.'
                'create:Create a Cloud Healthcare API consent store.'
                'delete:Delete a Cloud Healthcare API consent store.'
                'describe:Describe a Cloud Healthcare API consent store.'
                'evaluate-user-consents:Check the consents for a particular user'\''s data.'
                'get-iam-policy:Retrieve the IAM policy for a Cloud Healthcare API consent store.'
                'list:List Cloud Healthcare API consent stores.'
                'query-accessible-data:Queries all accessible data IDs.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Healthcare API consent store.'
                'set-iam-policy:Set the IAM policy for a Cloud Healthcare API consent store.'
                'update:Update a Cloud Healthcare API consent store.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare datasets')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Healthcare API dataset.'
                'create:Create a Cloud Healthcare API dataset.'
                'deidentify:Create a new Cloud Healthcare API dataset containing de-identified data from the source dataset.'
                'delete:Delete a Cloud Healthcare API dataset.'
                'describe:Describe a Cloud Healthcare API dataset.'
                'get-iam-policy:Retrieve the IAM policy for a Cloud Healthcare API dataset.'
                'list:List Cloud Healthcare API datasets.'
                'remove-iam-policy-binding:Remove an IAM policy binding to a Cloud Healthcare API dataset.'
                'set-iam-policy:Set the IAM policy for a Cloud Healthcare API dataset.'
                'update:Update a Cloud Healthcare API dataset.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare dicom-stores')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Healthcare API DICOM store.'
                'create:Create a Cloud Healthcare API DICOM store.'
                'deidentify:De-identify data from the source store and write it to the destination store.'
                'delete:Delete a Cloud Healthcare API DICOM store.'
                'describe:Describe a Cloud Healthcare API DICOM store.'
                'export:Manage Cloud Healthcare API DICOM store exports.'
                'get-iam-policy:Retrieve the IAM policy for a Cloud Healthcare API DICOM store.'
                'import:Manage Cloud Healthcare API DICOM store imports.'
                'list:List Cloud Healthcare API DICOM stores.'
                'metrics:Get the metrics for a Cloud Healthcare API DICOM store.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Healthcare API DICOM store.'
                'set-iam-policy:Set the IAM policy for a Cloud Healthcare API DICOM store.'
                'update:Update a Cloud Healthcare API DICOM store.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare dicom-stores export')
            local -a commands
            commands=(
                'bq:Export a Cloud Healthcare API API DICOM store to BigQuery.'
                'gcs:Export a Cloud Healthcare API DICOM store to Google Cloud Storage.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare dicom-stores import')
            local -a commands
            commands=(
                'gcs:Import DICOM objects into a Cloud Healthcare API DICOM store.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare fhir-stores')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Healthcare API FHIR store.'
                'create:Create a Cloud Healthcare API FHIR store.'
                'deidentify:De-identify data from the source store and write it to the destination store.'
                'delete:Delete a Cloud Healthcare API FHIR store.'
                'describe:Describe a Cloud Healthcare API FHIR store.'
                'export:Manage Cloud Healthcare API FHIR store exports.'
                'get-iam-policy:Retrieve the IAM policy for a Cloud Healthcare API FHIR store.'
                'import:Manage Cloud Healthcare API FHIR store imports.'
                'list:List Cloud Healthcare API FHIR stores.'
                'metrics:Gets the metrics for a Cloud Healthcare API FHIR store.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Healthcare API FHIR store.'
                'set-iam-policy:Set the IAM policy for a Cloud Healthcare API FHIR store.'
                'update:Update a Cloud Healthcare API FHIR store.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare fhir-stores export')
            local -a commands
            commands=(
                'bq:Export Cloud Healthcare API FHIR resources to BigQuery.'
                'gcs:Export Cloud Healthcare API FHIR resources to Google Cloud Storage.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare fhir-stores import')
            local -a commands
            commands=(
                'gcs:Import FHIR resources from Google Cloud Storage into a Cloud Healthcare API FHIR store.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare hl7v2-stores')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Cloud Healthcare API HL7v2 store.'
                'create:Create a Cloud Healthcare API HL7v2 store.'
                'delete:Delete a Cloud Healthcare API HL7v2 store.'
                'describe:Describe a Cloud Healthcare API HL7v2 store.'
                'export:Manage Cloud Healthcare API HL7v2 store exports.'
                'get-iam-policy:Retrieve the IAM policy for a Cloud Healthcare API HL7v2 store.'
                'import:Manage Cloud Healthcare API HL7v2 store imports.'
                'list:List Cloud Healthcare API HL7v2 stores.'
                'metrics:Gets the metrics for a Cloud Healthcare API HL7v2 store.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Cloud Healthcare API HL7v2 store.'
                'set-iam-policy:Set the IAM policy for a Cloud Healthcare API HL7v2 store.'
                'update:Update a Cloud Healthcare API HL7v2 store.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare hl7v2-stores export')
            local -a commands
            commands=(
                'gcs:Export Cloud Healthcare API HL7v2 messages to Google Cloud Storage.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare hl7v2-stores import')
            local -a commands
            commands=(
                'gcs:Import HL7v2 messages from Google Cloud Storage into a Cloud Healthcare API HL7v2 store.'
            )
            _describe 'command' commands
            ;;
        'gcloud healthcare operations')
            local -a commands
            commands=(
                'describe:Describe a Cloud Healthcare API operation.'
                'list:List Cloud Healthcare API operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam')
            local -a commands
            commands=(
                'list-grantable-roles:List IAM grantable roles for a resource.'
                'list-testable-permissions:List IAM testable permissions for a resource.'
                'oauth-clients:Create and manage OAuth clients.'
                'policies:Manage IAM deny policies.'
                'policy-bindings:Manage policy bindings.'
                'principal-access-boundary-policies:Manage principal access boundary policies.'
                'roles:Create and manipulate roles.'
                'service-accounts:Create and manipulate service accounts.'
                'simulator:Understand how an IAM policy change could impact access before deploying the change.'
                'workforce-pools:Create and manage workforce pools.'
                'workload-identity-pools:Manage IAM workload identity pools.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam oauth-clients')
            local -a commands
            commands=(
                'create:Create an OAuth client.'
                'credentials:Create and manage OAuth client credentials.'
                'delete:Delete an OAuth client.'
                'describe:Describe an OAuth client.'
                'list:List OAuth clients.'
                'undelete:Undelete an OAuth client.'
                'update:Update an OAuth client.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam oauth-clients credentials')
            local -a commands
            commands=(
                'create:Create an OAuth client credential.'
                'delete:Delete an OAuth client credential.'
                'describe:Describe an OAuth client credential.'
                'list:List OAuth client credentials.'
                'update:Update an OAuth client credential.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam policies')
            local -a commands
            commands=(
                'create:Create a policy on the given attachment point with the given name.'
                'delete:Delete a policy on the given attachment point with the given name.'
                'get:Get a policy on the given attachment point with the given name.'
                'list:List the policies on the given attachment point.'
                'update:Update the policy on the given attachment point with the given name.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam policy-bindings')
            local -a commands
            commands=(
                'create:Create PolicyBinding instance.'
                'delete:Delete PolicyBinding instance.'
                'describe:Get PolicyBinding instance.'
                'list:List PolicyBinding instances.'
                'search-target-policy-bindings:Search policy bindings by target.'
                'update:Update PolicyBinding instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam principal-access-boundary-policies')
            local -a commands
            commands=(
                'create:Create PrincipalAccessBoundaryPolicy instance.'
                'delete:Delete PrincipalAccessBoundaryPolicy instance.'
                'describe:Get PrincipalAccessBoundaryPolicy instance.'
                'list:List PrincipalAccessBoundaryPolicy instances.'
                'search-policy-bindings:Search Principal Access Boundary Policy Bindings.'
                'update:Update PrincipalAccessBoundaryPolicy instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam roles')
            local -a commands
            commands=(
                'copy:Create a role from an existing role.'
                'create:Create a custom role for a project or an organization.'
                'delete:Delete a custom role from an organization or a project.'
                'describe:Show metadata for a role.'
                'list:List predefined roles, or the custom roles for an organization or project.'
                'undelete:Undelete a custom role from an organization or a project.'
                'update:Update an IAM custom role.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam service-accounts')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to an IAM service account.'
                'create:Create a service account for a project.'
                'delete:Delete a service account from a project.'
                'describe:Show metadata for a service account from a project.'
                'disable:Disable an IAM service account.'
                'enable:Enable an IAM service account.'
                'get-iam-policy:Get the IAM policy for a service account.'
                'keys:Manage service account keys.'
                'list:List all of a project'\''s service accounts.'
                'remove-iam-policy-binding:Remove IAM policy binding from a service account.'
                'set-iam-policy:Set IAM policy for a service account.'
                'sign-blob:Sign a blob with a managed service account key.'
                'sign-jwt:Sign a JWT with a managed service account key.'
                'undelete:Undelete a service account for a project.'
                'update:Update an IAM service account.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam service-accounts keys')
            local -a commands
            commands=(
                'create:Create a service account key.'
                'delete:Delete a service account key.'
                'disable:Disable a service account key.'
                'enable:Enable a service account key.'
                'list:List the keys for a service account.'
                'upload:Upload a public key for an IAM service account.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam simulator')
            local -a commands
            commands=(
                'replay-recent-access:Determine affected recent access attempts before IAM policy                 change deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools')
            local -a commands
            commands=(
                'create:Create a new workforce pool under an organization.'
                'create-cred-config:Create a configuration file for generated credentials.'
                'create-login-config:Create a login configuration file to enable sign-in via a web-based authorization flow using Workforce Identity Federation.'
                'delete:Delete a workforce pool.'
                'describe:Describe a workforce pool.'
                'get-iam-policy:Get the IAM policy for a workforce pool.'
                'list:List the workforce pools for an organization.'
                'operations:Manage IAM workforce pool long-running operations.'
                'providers:Create and manage workforce pool providers.'
                'set-iam-policy:Set the IAM policy for a workforce pool.'
                'subjects:Create and manage workforce pool subjects.'
                'undelete:Undelete a workforce pool.'
                'update:Update a workforce pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools operations')
            local -a commands
            commands=(
                'describe:Describe a workforce pool operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools providers')
            local -a commands
            commands=(
                'create-oidc:Create a new OIDC workforce pool provider.'
                'create-saml:Create a new SAML workforce pool provider.'
                'delete:Delete a workforce pool provider.'
                'describe:Describe a workforce pool provider.'
                'keys:Create and manage IAM workforce pool provider keys.'
                'list:List workforce pool providers.'
                'operations:Manage IAM workforce pool provider long-running operations.'
                'scim-tenants:Manage IAM workforce identity pool provider SCIM tenants.'
                'undelete:Undelete a workforce pool provider.'
                'update-oidc:Update an OIDC workforce pool provider.'
                'update-saml:Update a new SAML workforce pool provider.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools providers keys')
            local -a commands
            commands=(
                'create:Create a new workforce pool provider key.'
                'delete:Delete a workforce pool provider key.'
                'describe:Describe a workforce pool provider key.'
                'list:List workforce pool provider keys.'
                'operations:Manage IAM workforce pool provider key long-running operations.'
                'undelete:Undelete a workforce pool provider key.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools providers keys operations')
            local -a commands
            commands=(
                'describe:Describe a workforce pool provider key operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools providers operations')
            local -a commands
            commands=(
                'describe:Describe a workforce pool provider operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools providers scim-tenants')
            local -a commands
            commands=(
                'create:Create an IAM workforce identity pool provider SCIM tenant.'
                'delete:Delete an IAM workforce identity pool provider SCIM tenant.'
                'describe:Describe an IAM workforce identity pool provider SCIM tenant.'
                'list:List IAM workforce identity pool provider SCIM tenants.'
                'tokens:Manage IAM workforce identity pool provider SCIM tenant tokens.'
                'undelete:Undelete an IAM workforce identity pool provider SCIM tenant.'
                'update:Update an IAM workforce identity pool provider SCIM tenant.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools providers scim-tenants tokens')
            local -a commands
            commands=(
                'create:Create an IAM workforce identity pool provider SCIM tenant token.'
                'delete:Delete an IAM workforce identity pool provider SCIM tenant token.'
                'describe:Describe an IAM workforce identity pool provider SCIM tenant token.'
                'list:List IAM workforce identity pool provider SCIM tenant tokens.'
                'undelete:Undelete an IAM workforce identity pool provider SCIM tenant token.'
                'update:Update an IAM workforce identity pool provider SCIM tenant token.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools subjects')
            local -a commands
            commands=(
                'delete:Delete a workforce pool subject.'
                'operations:Manage IAM workforce pool subject long-running operations.'
                'undelete:Undelete a workforce pool subject.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workforce-pools subjects operations')
            local -a commands
            commands=(
                'describe:Describe a workforce pool subject operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools')
            local -a commands
            commands=(
                'add-attestation-rule:Add an attestation rule on a workload identity pool.'
                'add-iam-policy-binding:Add IAM policy binding for a workload identity pool.'
                'create:Create a new workload identity pool.'
                'create-cred-config:Create a configuration file for generated credentials.'
                'delete:Delete a workload identity pool.'
                'describe:Describe a workload identity pool.'
                'get-iam-policy:Get the IAM policy for a workload identity pool.'
                'list:List workload identity pools.'
                'list-attestation-rules:List the attestation rules on a workload identity pool.'
                'managed-identities:Manage IAM workload identity pool managed identities.'
                'namespaces:Manage IAM workload identity pool namespaces.'
                'operations:Manage IAM workload identity pool long running operations.'
                'providers:Manage IAM workload identity pool providers.'
                'remove-attestation-rule:Remove an attestation rule on a workload identity pool.'
                'remove-iam-policy-binding:Remove IAM policy binding from a workload identity pool.'
                'set-attestation-rules:Set attestation rules on a workload identity pool.'
                'set-iam-policy:Set the IAM policy for a workload identity pool.'
                'undelete:Undelete a workload identity pool.'
                'update:Update a workload identity pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools managed-identities')
            local -a commands
            commands=(
                'add-attestation-rule:Add an attestation rule on a workload identity pool managed identity.'
                'create:Create a workload identity pool managed identity.'
                'delete:Delete a workload identity pool managed identity.'
                'describe:Describe a workload identity pool managed identity.'
                'list:List workload identity pool managed identities.'
                'list-attestation-rules:List the attestation rules on a workload identity pool managed identity.'
                'operations:Manage IAM workload identity pool managed identity long running operations.'
                'remove-attestation-rule:Remove an attestation rule on a workload identity pool managed identity.'
                'set-attestation-rules:Set attestation rules on a workload identity pool managed identity.'
                'undelete:Undelete a workload identity pool managed identity.'
                'update:Update workload identity pool managed identity.'
                'workload-sources:Manage IAM workload identity pool managed identity workload sources.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools managed-identities operations')
            local -a commands
            commands=(
                'describe:Describe a workload identity pool managed identity operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools managed-identities workload-sources')
            local -a commands
            commands=(
                'create:Create a workload source for a workload identity pool managed identity.'
                'delete:Delete a workload identity pool managed identity workload source.'
                'describe:Describe a workload identity pool managed identity workload source.'
                'list:List workload identity pool managed identity workload sources.'
                'operations:Manage IAM workload identity pool managed identity workload source long running operations.'
                'update:Update a workload source for a workload identity pool managed identity.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools managed-identities workload-sources operations')
            local -a commands
            commands=(
                'describe:Describe a workload identity pool managed identity workload source operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools namespaces')
            local -a commands
            commands=(
                'add-attestation-rule:Add an attestation rule on a workload identity pool namespace.'
                'create:Create a workload identity pool namespace.'
                'delete:Delete a workload identity pool namespace.'
                'describe:Describe a workload identity pool namespace.'
                'list:List workload identity pool namespaces.'
                'list-attestation-rules:List the attestation rules on a workload identity pool namespace.'
                'operations:Manage IAM workload identity pool namespace long running operations.'
                'remove-attestation-rule:Remove an attestation rule on a workload identity pool namespace.'
                'set-attestation-rules:Set attestation rules on a workload identity pool namespace.'
                'undelete:Undelete a workload identity pool namespace.'
                'update:Update workload identity pool namespace.'
                'workload-sources:Manage IAM workload identity pool namespace workload sources.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools namespaces operations')
            local -a commands
            commands=(
                'describe:Describe a workload identity pool namespace operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools namespaces workload-sources')
            local -a commands
            commands=(
                'create:Create a workload source for a workload identity pool namespace.'
                'delete:Delete a workload identity pool namespace workload source.'
                'describe:Describe a workload identity pool namespace workload source.'
                'list:List workload identity pool namespace workload sources.'
                'operations:Manage IAM workload identity pool namespace workload source long running operations.'
                'update:Update a workload source for a workload identity pool namespace.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools namespaces workload-sources operations')
            local -a commands
            commands=(
                'describe:Describe a workload identity pool namespace workload source operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools operations')
            local -a commands
            commands=(
                'describe:Describe a workload identity pool operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools providers')
            local -a commands
            commands=(
                'create-aws:Create a new AWS workload identity pool provider.'
                'create-oidc:Create a new OIDC workload identity pool provider.'
                'create-saml:Create a new SAML workload identity pool provider.'
                'create-x509:Create a new X.509 workload identity pool provider.'
                'delete:Delete a workload identity pool provider.'
                'describe:Describe a workload identity pool provider.'
                'keys:Manage IAM workload identity pool provider keys.'
                'list:List workload identity pool providers.'
                'operations:Manage IAM workload identity pool provider long running operations.'
                'undelete:Undelete a workload identity pool provider.'
                'update-aws:Update an AWS workload identity pool provider.'
                'update-oidc:Update an OIDC workload identity pool provider.'
                'update-saml:Update a SAML workload identity pool provider.'
                'update-x509:Update an X.509 workload identity pool provider.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools providers keys')
            local -a commands
            commands=(
                'create:Create a new workload identity pool provider key.'
                'delete:Delete a workload identity pool provider key.'
                'describe:Describe a workload identity pool provider key.'
                'list:List workload identity pool provider keys.'
                'operations:Manage IAM workload identity pool provider key long running operations.'
                'undelete:Undelete a workload identity pool provider key.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools providers keys operations')
            local -a commands
            commands=(
                'describe:Describe a workload identity pool provider key operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iam workload-identity-pools providers operations')
            local -a commands
            commands=(
                'describe:Describe a workload identity pool provider operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud iap')
            local -a commands
            commands=(
                'oauth-brands:\(DEPRECATED\)  Manage IAP OAuth brands.'
                'oauth-clients:\(DEPRECATED\)  Manage IAP OAuth clients.'
                'settings:Manage IAP settings.'
                'tcp:Manage IAP TCP resources.'
                'web:Manage IAP web policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud iap oauth-brands')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create a Cloud OAuth brand for the project.'
                'describe:\(DEPRECATED\)  Describe a Cloud OAuth brand.'
                'list:\(DEPRECATED\)  List Cloud OAuth brands in the project.'
            )
            _describe 'command' commands
            ;;
        'gcloud iap oauth-clients')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Create a Cloud IAP OAuth client in the project.'
                'delete:\(DEPRECATED\)  Delete a Cloud IAP OAuth client.'
                'describe:\(DEPRECATED\)  Describe a Cloud IAP OAuth client.'
                'list:\(DEPRECATED\)  List Cloud IAP OAuth clients in the Cloud OAuth brand.'
                'reset-secret:\(DEPRECATED\)  Reset a Cloud IAP OAuth client secret.'
            )
            _describe 'command' commands
            ;;
        'gcloud iap settings')
            local -a commands
            commands=(
                'get:Get the setting for an IAP resource.'
                'set:Set the setting for an IAP resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud iap tcp')
            local -a commands
            commands=(
                'dest-groups:Manage IAP TCP Destination Group resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud iap tcp dest-groups')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to an IAP TCP Tunnel Destination Group resource.'
                'create:Create the IAP TCP Destination Group resource.'
                'delete:Delete the IAP TCP Destination Group resource.'
                'describe:Describe the IAP TCP Destination Group resource.'
                'get-iam-policy:Get IAM policy for an IAP TCP Destination Group resource.'
                'list:Lists the IAP TCP Destination Group resource.'
                'remove-iam-policy-binding:Remove IAM policy binding from an IAP TCP Destination Group resource.'
                'set-iam-policy:Set the IAM policy for an IAP TCP Destination Group resource.'
                'update:Update the IAP TCP Destination Group resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud iap web')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to an IAP IAM resource.'
                'disable:Disable Cloud Identity-Aware Proxy \(Cloud IAP\) on an IAP resource.'
                'enable:Enable Cloud Identity-Aware Proxy \(Cloud IAP\) on an IAP resource.'
                'get-iam-policy:Get IAM policy for an IAP IAM resource.'
                'remove-iam-policy-binding:Remove IAM policy binding from an IAP IAM resource.'
                'set-iam-policy:Set the IAM policy for an IAP IAM resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud identity')
            local -a commands
            commands=(
                'groups:Manage Cloud Identity Groups.'
            )
            _describe 'command' commands
            ;;
        'gcloud identity groups')
            local -a commands
            commands=(
                'create:Create a new group.'
                'delete:Delete an existing group.'
                'describe:Describe an existing group.'
                'memberships:Manage Cloud Identity Groups Memberships.'
                'search:Searches for Groups matching a specified query.'
                'update:Update a group.'
            )
            _describe 'command' commands
            ;;
        'gcloud identity groups memberships')
            local -a commands
            commands=(
                'add:Create a new membership in an existing group.'
                'check-transitive-membership:Check a potential member for transitive membership in a group.'
                'delete:Delete a membership from an existing group.'
                'describe:Describe a membership in a group.'
                'get-membership-graph:Get a membership graph of just a member or both a member and a group.'
                'list:List memberships in an existing group.'
                'modify-membership-roles:Add/remove/modify membership roles of a membership in a group.'
                'search-transitive-groups:Search transitive groups of a member.'
                'search-transitive-memberships:Search transitive memberships of a group.'
            )
            _describe 'command' commands
            ;;
        'gcloud ids')
            local -a commands
            commands=(
                'endpoints:Create and manage Cloud IDS Endpoints.'
            )
            _describe 'command' commands
            ;;
        'gcloud ids endpoints')
            local -a commands
            commands=(
                'create:Create a Cloud IDS endpoint.'
                'delete:Delete a Cloud IDS endpoint.'
                'describe:Describe a Cloud IDS endpoint.'
                'list:List Cloud IDS endpoints.'
                'update:Update an existing Cloud IDS endpoint.'
            )
            _describe 'command' commands
            ;;
        'gcloud immersive-stream')
            local -a commands
            commands=(
                'xr:Manage Immersive Stream resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud immersive-stream xr')
            local -a commands
            commands=(
                'contents:Manage Immersive Stream for XR contents.'
                'instances:Manage Immersive Stream for XR instances.'
                'operations:Manage Immersive Stream for XR operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud immersive-stream xr contents')
            local -a commands
            commands=(
                'build:Build an Immersive Stream for XR content resource.'
                'create:Create an Immersive Stream for XR content resource.'
                'delete:Delete an Immersive Stream for XR content resource.'
                'describe:Describe a specific Immersive Stream for XR content resource.'
                'list:List Immersive Stream for XR content resources.'
                'update:Update an Immersive Stream for XR content resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud immersive-stream xr instances')
            local -a commands
            commands=(
                'create:Create an Immersive Stream for XR service instance.'
                'delete:Delete an Immersive Stream for XR service instance.'
                'describe:Describe a specific Immersive Stream for XR service instance.'
                'list:List Immersive Stream for XR service instances.'
                'update:Update an Immersive Stream for XR service instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud immersive-stream xr operations')
            local -a commands
            commands=(
                'describe:Get description of a long-running Immersive Stream for XR operation.'
                'list:List Immersive Stream for XR operations.'
                'wait:Poll long-running Immersive Stream for XR operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager')
            local -a commands
            commands=(
                'deployments:Manage Deployment resources.'
                'previews:Manage Preview resources.'
                'resource-changes:Manage resource change resources.'
                'resource-drifts:Manage resource drift resources.'
                'resources:List or describe resources under a Revision.'
                'revisions:Manage Revision resources.'
                'terraform-versions:Manage Terraform version resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager deployments')
            local -a commands
            commands=(
                'apply:Create or update a deployment.'
                'delete:Delete deployments.'
                'describe:Describe deployments.'
                'export-lock:Exports lock info of a deployment.'
                'export-statefile:Export a terraform state file.'
                'import-statefile:Import a terraform state file.'
                'list:List deployments.'
                'lock:Locks the deployment.'
                'unlock:Unlocks the deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager previews')
            local -a commands
            commands=(
                'create:Create a preview.'
                'delete:Delete previews.'
                'describe:Describe previews.'
                'export:Export preview results.'
                'list:List previews.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager resource-changes')
            local -a commands
            commands=(
                'describe:Describe resource changes.'
                'list:List resource changes.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager resource-drifts')
            local -a commands
            commands=(
                'describe:Describe resource drifts.'
                'list:List resource drifts.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager resources')
            local -a commands
            commands=(
                'describe:Describe resources.'
                'list:List resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager revisions')
            local -a commands
            commands=(
                'describe:Describe revisions.'
                'export-statefile:Export a terraform state file.'
                'list:List revisions.'
            )
            _describe 'command' commands
            ;;
        'gcloud infra-manager terraform-versions')
            local -a commands
            commands=(
                'describe:Describe Terraform versions.'
                'list:List Terraform versions.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms')
            local -a commands
            commands=(
                'asymmetric-decrypt:Decrypt an input file using an asymmetric-encryption key version.'
                'asymmetric-sign:Sign a user input file using an asymmetric-signing key version.'
                'autokey-config:Update and retrieve the AutokeyConfig.'
                'decapsulate:Decapsulate an input file using a key-encapsulation key version.'
                'decrypt:Decrypt a ciphertext file using a Cloud KMS key.'
                'ekm-config:Update and retrieve the EkmConfig.'
                'ekm-connections:Create and manage ekm connections.'
                'encrypt:Encrypt a plaintext file using a key.'
                'import-jobs:Create and manage import jobs.'
                'inventory:Manages the KMS Inventory and Key Tracking commands.'
                'key-handles:Create and manage KeyHandle resources.'
                'keyrings:Create and manage keyrings.'
                'keys:Create and manage keys.'
                'locations:View locations available for a project.'
                'mac-sign:Sign a user input file using a MAC key version.'
                'mac-verify:Verify a user signature file using a MAC key version.'
                'raw-decrypt:Decrypt a ciphertext file using a raw key.'
                'raw-encrypt:Encrypt a plaintext file using a raw key.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms autokey-config')
            local -a commands
            commands=(
                'describe:Describe the AutokeyConfig of a folder.'
                'show-effective-config:Gets the effective Cloud KMS AutokeyConfig for a given project.'
                'update:Updates the AutokeyConfig for a folder.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms ekm-config')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to an EkmConfig.'
                'describe:Describe the EkmConfig.'
                'get-iam-policy:Get the IAM policy for an EkmConfig.'
                'remove-iam-policy-binding:Remove IAM policy binding from an EkmConfig.'
                'set-iam-policy:Set the IAM policy for an EkmConfig.'
                'update:Update the EkmConfig.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms ekm-connections')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a kms ekm connection.'
                'create:Create a new ekm connection.'
                'describe:Get metadata for an ekmconnection.'
                'get-iam-policy:Get the IAM policy for an ekm connection.'
                'list:List ekmconnections within a location.'
                'remove-iam-policy-binding:Remove IAM policy binding for a kms ekm connection.'
                'set-iam-policy:Set the IAM policy binding for a KMS ekm connection.'
                'update:Update an ekmconnection.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms import-jobs')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a KMS import job.'
                'create:Create a new import job.'
                'describe:Get metadata for a given import job.'
                'get-iam-policy:Get the IAM policy for an import job.'
                'list:Lists import jobs within a keyring.'
                'remove-iam-policy-binding:Remove IAM policy binding for a KMS import job.'
                'set-iam-policy:Set the IAM policy binding for a KMS import job.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms inventory')
            local -a commands
            commands=(
                'get-protected-resources-summary:Gets the protected resources summary.'
                'list-keys:Lists the keys in a project.'
                'search-protected-resources:Searches the resources protected by a key.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms key-handles')
            local -a commands
            commands=(
                'create:Create a new KeyHandle.'
                'describe:Get metadata for a KeyHandle.'
                'list:List KeyHandle resources within a project and location.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms keyrings')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a kms keyring.'
                'create:Create a new keyring.'
                'describe:Get metadata for a keyring.'
                'get-iam-policy:Get the IAM policy for a keyring.'
                'list:List keyrings within a location.'
                'remove-iam-policy-binding:Remove IAM policy binding for a kms keyring.'
                'set-iam-policy:Set the IAM policy for a keyring.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms keys')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a kms key.'
                'create:Create a new key.'
                'describe:Get metadata for a given key.'
                'get-iam-policy:Get the IAM policy for a key.'
                'list:List the keys within a keyring.'
                'remove-iam-policy-binding:Remove IAM policy binding for a kms key.'
                'remove-rotation-schedule:Remove the rotation schedule for a key.'
                'set-iam-policy:Set the IAM policy for a key.'
                'set-primary-version:Set the primary version of a key.'
                'set-rotation-schedule:Update the rotation schedule for a key.'
                'update:Update a key.'
                'versions:Create and manage versions.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms keys versions')
            local -a commands
            commands=(
                'create:Create a new version.'
                'describe:Get metadata for a given version.'
                'destroy:Schedule a version to be destroyed.'
                'disable:Disable a given version.'
                'enable:Enable a given version.'
                'get-certificate-chain:Get a certificate chain for a given version.'
                'get-public-key:Get the public key for a given version.'
                'import:Import a version into an existing crypto key.'
                'list:List the versions within a key.'
                'restore:Restore a version scheduled for destruction.'
                'update:Update a key version.'
            )
            _describe 'command' commands
            ;;
        'gcloud kms locations')
            local -a commands
            commands=(
                'list:List the project'\''s locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging')
            local -a commands
            commands=(
                'buckets:Manage Cloud Logging buckets.'
                'cmek-settings:Manages the customer-managed encryption key \(CMEK\) settings for the Cloud Logging Logs Router.'
                'copy:Copy log entries.'
                'links:Manage linked datasets.'
                'locations:Query Cloud Logging locations.'
                'logs:Manages your project'\''s logs.'
                'metrics:Manages logs-based metrics.'
                'operations:Manage long running operations.'
                'read:Read log entries.'
                'redact:Redact log entries.'
                'resource-descriptors:Get information about resource descriptors.'
                'scopes:Manages Cloud Logging log scopes.'
                'settings:Manages the org settings for the Cloud Logging Logs Router.'
                'sinks:Manages sinks used to route logs to storage or export destinations.'
                'views:Manage log views.'
                'write:Write a log entry.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging buckets')
            local -a commands
            commands=(
                'create:Create a bucket.'
                'delete:Delete a bucket.'
                'describe:Display information about a bucket.'
                'list:List the defined buckets.'
                'move:Move a bucket.'
                'undelete:Undelete a bucket.'
                'update:Update a bucket.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging cmek-settings')
            local -a commands
            commands=(
                'describe:Display the CMEK settings for the Cloud Logging Logs Router.'
                'update:Update the CMEK settings for the Cloud Logging Logs Router.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging links')
            local -a commands
            commands=(
                'create:Create a linked dataset on an analytics log bucket.'
                'delete:Delete a linked dataset.'
                'describe:Display information about a linked dataset.'
                'list:List created linked datasets on the specified bucket.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging locations')
            local -a commands
            commands=(
                'describe:Display information about a location.'
                'list:List the availables location.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging logs')
            local -a commands
            commands=(
                'delete:Delete all entries from a log in the global '\'''\'''\''Default'\'''\'''\'' log bucket.'
                'list:List your project'\''s logs.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging metrics')
            local -a commands
            commands=(
                'create:Create a logs-based metric.'
                'delete:Delete a logs-based metric.'
                'describe:Display the definition of a logs-based metric.'
                'list:Display all logs-based metrics.'
                'update:Update the definition of a logs-based metric.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging operations')
            local -a commands
            commands=(
                'cancel:Cancel a long running operation.'
                'describe:Display the information about a long running operation.'
                'list:List long running operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging resource-descriptors')
            local -a commands
            commands=(
                'list:List all available resource descriptors.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging scopes')
            local -a commands
            commands=(
                'create:Create a log scope.'
                'delete:Delete a log scope.'
                'describe:Display information about a log scope.'
                'list:List the defined log scopes.'
                'update:Update a log scope.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging settings')
            local -a commands
            commands=(
                'describe:Display the settings for the Cloud Logging Logs Router.'
                'update:Update the settings for the Cloud Logging Logs Router.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging sinks')
            local -a commands
            commands=(
                'create:Create a log sink.'
                'delete:Delete a sink.'
                'describe:Display information about a sink.'
                'list:List the defined sinks.'
                'update:Update a sink.'
            )
            _describe 'command' commands
            ;;
        'gcloud logging views')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a log view.'
                'create:Create a log view on a log bucket.'
                'delete:Delete a view.'
                'describe:Display information about a view.'
                'get-iam-policy:Display the IAM policy for a view.'
                'list:List the defined views.'
                'remove-iam-policy-binding:Remove IAM policy binding to a log view.'
                'set-iam-policy:Set IAM policy for a view.'
                'update:Update a view.'
            )
            _describe 'command' commands
            ;;
        'gcloud looker')
            local -a commands
            commands=(
                'backups:Manage Looker instances.'
                'instances:Manage Looker instances.'
                'operations:Manage Looker operations.'
                'regions:Manage Looker regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud looker backups')
            local -a commands
            commands=(
                'create:Create a backup of a Looker instance.'
                'delete:Delete a backup of a Looker instance.'
                'describe:Show metadata of a backup for a Looker instance.'
                'list:List backups of a Looker instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud looker instances')
            local -a commands
            commands=(
                'create:Create a Looker instance.'
                'delete:Delete a Looker instance.'
                'describe:Show metadata for a Looker instance.'
                'export:Export a Looker instance.'
                'import:Import a Looker instance.'
                'list:List Looker instances.'
                'restart:Restart a Looker instance.'
                'restore:Restore a Looker instance from a backup.'
                'update:Update a Looker instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud looker operations')
            local -a commands
            commands=(
                'cancel:Cancel a Looker import or export operation.'
                'describe:Show metadata for a Looker operation.'
                'list:List Looker operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud looker regions')
            local -a commands
            commands=(
                'list:List Looker regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud lustre')
            local -a commands
            commands=(
                'instances:Manage Instance resources.'
                'locations:View Locations resources.'
                'operations:Manage Operation resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud lustre instances')
            local -a commands
            commands=(
                'create:Creates a Managed Lustre instance.'
                'delete:Deletes a Managed Lustre instance.'
                'describe:Gets details of a single Managed Lustre instance.'
                'export-data:Exports data from Managed Lustre instance to Cloud Storage.'
                'import-data:Imports data from Cloud Storage to Managed Lustre instance.'
                'list:List Lustre instances.'
                'update:Updates the parameters of a single Managed Lustre instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud lustre locations')
            local -a commands
            commands=(
                'describe:Describe locations.'
                'list:List locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud lustre operations')
            local -a commands
            commands=(
                'cancel:Cancel operations.'
                'delete:Delete operations.'
                'describe:Describe operations.'
                'list:List operations.'
                'wait:Wait operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka')
            local -a commands
            commands=(
                'acls:Administer Managed Service for Apache Kafka acls.'
                'clusters:Administer Managed Service for Apache Kafka clusters.'
                'connect-clusters:Administer Managed Service for Apache Kafka connect-clusters.'
                'connectors:Administer Managed Service for Apache Kafka connectors.'
                'consumer-groups:Administer Managed Service for Apache Kafka consumer groups.'
                'operations:View Managed Service for Apache Kafka operations.'
                'topics:Administer Managed Service for Apache Kafka topics.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka acls')
            local -a commands
            commands=(
                'add-acl-entry:Add an acl entry to a Managed Service for Apache Kafka acl.'
                'create:Create a Managed Service for Apache Kafka acl.'
                'delete:Delete a Managed Service for Apache Kafka ACL.'
                'describe:Describe a Managed Service for Apache Kafka acl.'
                'list:List all Managed Service for Apache Kafka acls in a given cluster.'
                'remove-acl-entry:Remove an acl entry from a Managed Service for Apache Kafka acl.'
                'update:Update a Managed Service for Apache Kafka acl.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka clusters')
            local -a commands
            commands=(
                'create:Create a Managed Service for Apache Kafka cluster.'
                'delete:Delete a Managed Service for Apache Kafka cluster.'
                'describe:Describe a Managed Service for Apache Kafka cluster.'
                'list:List all Managed Service for Apache Kafka clusters in a given location.'
                'update:Update a Managed Service for Apache Kafka cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka connect-clusters')
            local -a commands
            commands=(
                'create:Create a Managed Service for Apache Kafka connect cluster.'
                'delete:Delete a Managed Service for Apache Kafka connect cluster.'
                'describe:Describe a Managed Service for Apache Kafka connect cluster.'
                'list:List all Managed Service for Apache Kafka connect clusters in a given location.'
                'update:Update a Managed Service for Apache Kafka for BigQuery connect cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka connectors')
            local -a commands
            commands=(
                'create:Create a Managed Service for Apache Kafka connector.'
                'delete:Delete a Managed Service for Apache Kafka connector.'
                'describe:Describe a Managed Service for Apache Kafka connector.'
                'list:List all Managed Service for Apache Kafka connectors for a given connect cluster.'
                'pause:Pauses operation of a Managed Service for Apache Kafka connector.'
                'restart:Restarts a Managed Service for Apache Kafka connector.'
                'resume:Resumes operation of a stopped Managed Service for Apache Kafka connector.'
                'stop:Stops operation of a Managed Service for Apache Kafka connector.'
                'update:Update a Managed Service for Apache Kafka connector.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka consumer-groups')
            local -a commands
            commands=(
                'delete:Delete a Managed Service for Apache Kafka consumer group.'
                'describe:Describe a Managed Service for Apache Kafka consumer group.'
                'list:List all Managed Service for Apache Kafka consumer groups in a given cluster and location.'
                'update:Update a Managed Service for Apache Kafka consumer group.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka operations')
            local -a commands
            commands=(
                'describe:Describe a Managed Service for Apache Kafka operation.'
                'list:List all Managed Service for Apache Kafka operations in a given location.'
            )
            _describe 'command' commands
            ;;
        'gcloud managed-kafka topics')
            local -a commands
            commands=(
                'create:Create a Managed Service for Apache Kafka topic.'
                'delete:Delete a Managed Service for Apache Kafka topic.'
                'describe:Describe a Managed Service for Apache Kafka topic.'
                'list:List all Managed Service for Apache Kafka topics in a given cluster.'
                'update:Update a Managed Service for Apache Kafka topic.'
            )
            _describe 'command' commands
            ;;
        'gcloud memcache')
            local -a commands
            commands=(
                'instances:Manage Cloud Memorystore Memcached instances.'
                'operations:Manage Cloud Memorystore Memcached operations.'
                'regions:Manage Cloud Memorystore Memcached regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud memcache instances')
            local -a commands
            commands=(
                'apply-parameters:Apply parameter update to nodes in a Memorystore Memcached instance.'
                'apply-software-update:Apply software update to nodes in a Memorystore Memcached instance.'
                'create:Create a Memorystore Memcached instance.'
                'delete:Delete a Memorystore Memcached instance.'
                'describe:Display metadata for a Memorystore Memcached instance.'
                'list:List Memorystore Memcached instances.'
                'reschedule-maintenance:Reschedule maintenance window for a Memcache instance.'
                'update:Update a Memorystore Memcached instance.'
                'upgrade:Upgrade memcache instance to a newer memcached version.'
            )
            _describe 'command' commands
            ;;
        'gcloud memcache operations')
            local -a commands
            commands=(
                'delete:Delete a Memorystore Memcached operation.'
                'describe:Display metadata for a Memorystore Memcached operation.'
                'list:List Memorystore Memcached operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud memcache regions')
            local -a commands
            commands=(
                'describe:Display metadata for a Memorystore Memcached region.'
                'list:List Memorystore Memcached regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud memorystore')
            local -a commands
            commands=(
                'backup-collections:Manage Backup Collection resources.'
                'instances:Manage Instance resources.'
                'locations:Manage Memorystore for Valkey locations.'
                'operations:Manage Memorystore operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud memorystore backup-collections')
            local -a commands
            commands=(
                'backups:Manage Backup resources.'
                'describe:Describe backupCollections.'
                'list:List backupCollections.'
            )
            _describe 'command' commands
            ;;
        'gcloud memorystore backup-collections backups')
            local -a commands
            commands=(
                'delete:Delete backups.'
                'describe:Describe backups.'
                'export:export backups.'
                'list:List backups.'
            )
            _describe 'command' commands
            ;;
        'gcloud memorystore instances')
            local -a commands
            commands=(
                'backup:backup instances.'
                'create:Create a Memorystore instance.'
                'delete:Delete a Memorystore instance.'
                'describe:Get details of a Memorystore instance.'
                'get-certificate-authority:Get certificate authority details of a Memorystore instance.'
                'list:List all Memorystore instances in a specified project and location.'
                'reschedule-maintenance:Reschedule maintenance window for an instance.'
                'update:Update the configuration of a Memorystore instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud memorystore locations')
            local -a commands
            commands=(
                'describe:Show metadata for a Memorystore for Valkey location.'
                'list:List Memorystore for Valkey locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud memorystore operations')
            local -a commands
            commands=(
                'cancel:Cancel a Memorystore operation.'
                'delete:Delete a Memorystore operation.'
                'describe:Describe a Memorystore operation.'
                'list:List Memorystore operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta')
            local -a commands
            commands=(
                'apis:Inspect the APIs registered in gcloud.'
                'cache:Cloud SDK persistent cache commands.'
                'cli-trees:CLI trees manager.'
                'daemon:\(DEBUG MODE\) Precomputes gcloud CLI and runs a single-request server.'
                'debug:Run an interactive debug console with the Cloud SDK libraries loaded.'
                'generate-command:Generate YAML file to implement given command.'
                'generate-config-commands:Generate declarative config commands with surface specs and tests.'
                'generate-help-docs:Generate and/or update help document directories.'
                'lint:Validate gcloud flags according to Cloud SDK CLI Style.'
                'lint-gcloud-commands:Generate YAML file to implement given command.'
                'list-commands:List all possible gcloud commands excluding flags.'
                'list-files-for-upload:List files for upload.'
                'list-from-json:Read JSON data and list it on the standard output.'
                'list-gcloud:List the gcloud CLI command tree with flag, positional and help details.'
                'render-markdown:Uses gcloud'\''s markdown renderer to render the given markdown file.'
                'resource-maps:Command group for resource map related commands.'
                'resources:Cloud SDK resource parser test commands.'
                'test:Run miscellaneous gcloud command and CLI test scenarios.'
                'validate-yaml:Validate a YAML file against a JSON Schema.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta apis')
            local -a commands
            commands=(
                'collections:Inspect the API collections registered in gcloud.'
                'describe:Describe the details of an API registered in gcloud.'
                'discovery:Inspect the Google Cloud Platform APIs through the discovery service.'
                'list:List the APIs registered in gcloud.'
                'messages:Inspect the API messages in an API.'
                'methods:Inspect the methods for an API collection registered in gcloud.'
                'regen:Regenerate given API\(s\) in gcloud.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta apis collections')
            local -a commands
            commands=(
                'describe:Describe the details of a collection for an API.'
                'lint:Show which collections have non-compliant list API methods.'
                'list:List the resource collections for an API.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta apis discovery')
            local -a commands
            commands=(
                'describe:Describe the details of an API in discovery service.'
                'list:List the APIs available via discovery service.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta apis messages')
            local -a commands
            commands=(
                'describe:Describe the details of a proto message in an API.'
                'generate-export-schemas:Generate YAML export schemas for a message in a given API.'
                'list:List the proto messages for an API.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta apis methods')
            local -a commands
            commands=(
                'call:Calls an API method with specific parameters.'
                'describe:Describe the details of a collection for an API.'
                'list:List the methods of a resource collection for an API.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta cache')
            local -a commands
            commands=(
                'completers:Cloud SDK resource completer cache commands.'
                'delete:Delete a persistent cache or tables in the cache.'
                'list:List the tables or table contents in a persistent cache.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta cache completers')
            local -a commands
            commands=(
                'list:List all Cloud SDK command argument completer objects.'
                'run:Cloud SDK completer module tester.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta cli-trees')
            local -a commands
            commands=(
                'list:List the installed gcloud interactive CLI trees.'
                'update:Updates gcloud CLI command trees in the installation directory.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta resource-maps')
            local -a commands
            commands=(
                'update-resource-map:Command used for updating resource maps.'
            )
            _describe 'command' commands
            ;;
        'gcloud meta resources')
            local -a commands
            commands=(
                'generate:Cloud SDK resource test URI generator.'
                'parse:Cloud SDK resource parser module tester.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore')
            local -a commands
            commands=(
                'federations:Manage Dataproc Metastore federations.'
                'locations:Get information about Dataproc Metastore locations.'
                'operations:Manage Dataproc Metastore operations.'
                'services:Manage Dataproc Metastore services.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore federations')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a federation.'
                'create:Create a Dataproc Metastore federation.'
                'delete:Delete one or more Dataproc Metastore federations.'
                'describe:Describe a Dataproc Metastore federation.'
                'get-iam-policy:Get the IAM policy for the federation.'
                'list:List Dataproc Metastore federations.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a federation.'
                'set-iam-policy:Set the IAM policy for the federation.'
                'update:Update a Dataproc Metastore federation.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore locations')
            local -a commands
            commands=(
                'describe:Show metadata for a Dataproc Metastore location.'
                'list:List Dataproc Metastore locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore operations')
            local -a commands
            commands=(
                'cancel:Cancel a Dataproc Metastore operation.'
                'delete:Delete one or more completed Dataproc Metastore operations.'
                'describe:Show metadata for a Dataproc Metastore operation.'
                'list:List Dataproc Metastore operations.'
                'wait:Poll a long-running Dataproc Metastore operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore services')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a service.'
                'alter-metadata-resource-location:Alter metadata resource location.'
                'alter-table-properties:Alter metadata table properties.'
                'backups:Manage backups under Dataproc Metastore services.'
                'create:Create a Dataproc Metastore service.'
                'delete:Delete one or more Dataproc Metastore services.'
                'describe:Describe a Dataproc Metastore service.'
                'export:Export metadata from a Dataproc Metastore service.'
                'get-iam-policy:Get the IAM policy for the service.'
                'import:Import metadata into a Dataproc Metastore service.'
                'list:List Dataproc Metastore services.'
                'move-table-to-database:Move table to another database.'
                'query-metadata:Execute a SQL query against a Dataproc Metastore Service'\''s metadata.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a service.'
                'restore:Restore a Dataproc Metastore service.'
                'set-iam-policy:Set the IAM policy for the service.'
                'update:Update a Dataproc Metastore service.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore services backups')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a backup.'
                'create:Backup a service.'
                'delete:Delete a service backup.'
                'describe:Describe a backup.'
                'get-iam-policy:Get the IAM policy for the backup.'
                'list:List backups under a Dataproc Metastore service.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a backup.'
                'set-iam-policy:Set the IAM policy for a backup.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore services export')
            local -a commands
            commands=(
                'gcs:Export metadata from a Dataproc Metastore service to Google Cloud Storage.'
            )
            _describe 'command' commands
            ;;
        'gcloud metastore services import')
            local -a commands
            commands=(
                'gcs:Import metadata into a Dataproc Metastore service from Google Cloud Storage.'
            )
            _describe 'command' commands
            ;;
        'gcloud migration')
            local -a commands
            commands=(
                'vms:Provides Migrate to Virtual Machines \(VM migration\) service functionality.'
            )
            _describe 'command' commands
            ;;
        'gcloud migration vms')
            local -a commands
            commands=(
                'image-imports:Imports images to Google Compute Engine from Google Cloud Storage.'
                'machine-image-imports:Imports machine images to Google Compute Engine from Google Cloud Storage.'
                'target-projects:Manage Target Projects.'
            )
            _describe 'command' commands
            ;;
        'gcloud migration vms image-imports')
            local -a commands
            commands=(
                'create:import Virtual Disk images to Google Compute Engine.'
                'delete:delete an Image Import resource.'
                'describe:describe an Image Import.'
                'list:list Image Imports.'
            )
            _describe 'command' commands
            ;;
        'gcloud migration vms machine-image-imports')
            local -a commands
            commands=(
                'create:import machine images to Google Compute Engine.'
                'delete:delete an Image Import resource.'
                'describe:describe an Image Import.'
                'list:list Image Imports.'
            )
            _describe 'command' commands
            ;;
        'gcloud migration vms target-projects')
            local -a commands
            commands=(
                'list:list Target Projects.'
            )
            _describe 'command' commands
            ;;
        'gcloud ml')
            local -a commands
            commands=(
                'language:Use the Google Cloud Natural Language API to analyze text.'
                'speech:Use Google Cloud Speech to get transcripts of audio.'
                'video:Cloud ML Video-Intelligence command groups.'
                'vision:Use Google Cloud Vision to analyze images.'
            )
            _describe 'command' commands
            ;;
        'gcloud ml language')
            local -a commands
            commands=(
                'analyze-entities:Use Google Cloud Natural Language API to identify entities in text.'
                'analyze-entity-sentiment:Use Google Cloud Natural Language API to identify entity-level sentiment.'
                'analyze-sentiment:Use Google Cloud Natural Language API to identify sentiments in a text.'
                'analyze-syntax:Use Google Cloud Natural Language API to identify linguistic information.'
                'classify-text:Classifies input document into categories.'
            )
            _describe 'command' commands
            ;;
        'gcloud ml speech')
            local -a commands
            commands=(
                'operations:Interact with Google Cloud Speech operations.'
                'recognize:Get transcripts of short \(less than 60 seconds\) audio from an audio file.'
                'recognize-long-running:Get transcripts of longer audio from an audio file.'
            )
            _describe 'command' commands
            ;;
        'gcloud ml speech operations')
            local -a commands
            commands=(
                'describe:Get description of a long-running speech recognition operation.'
                'wait:Poll long-running speech recognition operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud ml video')
            local -a commands
            commands=(
                'detect-explicit-content:Detect explicit content in videos.'
                'detect-labels:Detect general labels for videos.'
                'detect-shot-changes:Detect shot changes in videos.'
                'operations:Command group for working with Cloud Video Intelligence operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud ml video operations')
            local -a commands
            commands=(
                'describe:Get description of a long-running video analysis operation.'
                'wait:Poll long-running video analysis operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud ml vision')
            local -a commands
            commands=(
                'detect-document:Detect dense text in an image.'
                'detect-faces:Detect faces within an image.'
                'detect-image-properties:Detect general attributes of an image.'
                'detect-labels:Detect broad sets of categories within an image.'
                'detect-landmarks:Detect popular natural and man-made structures within an image.'
                'detect-logos:Detect popular product logos within an image.'
                'detect-objects:Detect and extract multiple objects in an image with object localization.'
                'detect-safe-search:Detect explicit content in an image.'
                'detect-text:Detect and extract text within an image.'
                'detect-text-pdf:Detect and transcribe text from PDF files stored in Google Cloud Storage.'
                'detect-text-tiff:Detect and transcribe text from TIFF files stored in Google Cloud Storage.'
                'detect-web:Detect entities in an image from similar images on the web.'
                'suggest-crop:Suggest a bounding box in an image.'
            )
            _describe 'command' commands
            ;;
        'gcloud model-armor')
            local -a commands
            commands=(
                'floorsettings:Manage FloorSettings resources.'
                'templates:Manage Template resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud model-armor floorsettings')
            local -a commands
            commands=(
                'describe:Describe the FloorSetting resource.'
                'update:Update the FloorSetting resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud model-armor templates')
            local -a commands
            commands=(
                'create:Create Model Armor Template.'
                'delete:Delete Model Armor Template.'
                'describe:Get Model Armor Template.'
                'list:List Model Armor Templates.'
                'sanitize-model-response:Sanitize Model Response.'
                'sanitize-user-prompt:Sanitize User Prompt.'
                'update:Update Model Armor Template.'
            )
            _describe 'command' commands
            ;;
        'gcloud monitoring')
            local -a commands
            commands=(
                'dashboards:Manage Cloud Monitoring dashboards.'
                'snoozes:Manage Cloud Monitoring snoozes.'
                'uptime:Manage Cloud Monitoring uptime checks and synthetic monitors.'
            )
            _describe 'command' commands
            ;;
        'gcloud monitoring dashboards')
            local -a commands
            commands=(
                'create:Create a new Cloud Monitoring dashboard.'
                'delete:Delete a Cloud Monitoring dashboard.'
                'describe:Describe a Cloud Monitoring dashboard.'
                'list:List Cloud Monitoring dashboards.'
                'update:Update a Cloud Monitoring dashboard.'
            )
            _describe 'command' commands
            ;;
        'gcloud monitoring snoozes')
            local -a commands
            commands=(
                'cancel:Cancels a snooze.'
                'create:Create a new snooze.'
                'describe:Describe a snooze.'
                'list:List snoozes.'
                'update:Updates a snooze.'
            )
            _describe 'command' commands
            ;;
        'gcloud monitoring uptime')
            local -a commands
            commands=(
                'create:Create a new uptime check or synthetic monitor.'
                'delete:Delete an uptime check or synthetic monitor.'
                'describe:Describe an uptime check or synthetic monitor.'
                'list-configs:List uptime checks and synthetic monitors.'
                'list-ips:List uptime check server ips.'
                'update:Update an existing uptime check or synthetic monitor.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp')
            local -a commands
            commands=(
                'active-directories:Create and manage Cloud NetApp Active Directories.'
                'backup-policies:Create and manage Cloud NetApp Backup Policies.'
                'backup-vaults:Create and manage Cloud NetApp Backup Vaults.'
                'kms-configs:Create and manage Cloud NetApp Volumes KMS Configs.'
                'locations:Get and list locations where Cloud NetApp Files is available.'
                'operations:Read and manage Cloud NetApp Files Operations.'
                'storage-pools:Create and manage Cloud NetApp Storage Pools.'
                'volumes:Create and manage Cloud NetApp Volumes.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp active-directories')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Active Directory.'
                'delete:Delete a Cloud NetApp Active Directory.'
                'describe:Show metadata for a Cloud NetApp Active Directory.'
                'list:List Cloud NetApp Active Directories.'
                'update:Update a Cloud NetApp Active Directory.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp backup-policies')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Backup Policy.'
                'delete:Delete a Cloud NetApp Volumes Backup Policy.'
                'describe:Show metadata for a Cloud NetApp Volumes Backup Policy.'
                'list:List Cloud NetApp Volumes Backup Policies.'
                'update:Update a Cloud NetApp Volumes Backup Policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp backup-vaults')
            local -a commands
            commands=(
                'backups:Create and manage Cloud NetApp Backups.'
                'create:Create a Cloud NetApp Backup Vault.'
                'delete:Delete a Cloud NetApp Volumes Backup Vault.'
                'describe:Show metadata for a Cloud NetApp Volumes Backup Vault.'
                'list:List Cloud NetApp Volumes Backup Vaults.'
                'update:Update a Cloud NetApp Volumes Backup Vault.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp backup-vaults backups')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Backup.'
                'delete:Delete a Cloud NetApp Backup.'
                'describe:Describe a Cloud NetApp Backup.'
                'list:List Cloud NetApp Backups.'
                'update:Update a Cloud NetApp Backup.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp kms-configs')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Volumes KMS Config.'
                'delete:Delete a Cloud NetApp Volumes KMS Config.'
                'describe:Show metadata for a Cloud NetApp Volumes KMS Config.'
                'encrypt:Encrypt all existing volumes and storage pools in the same region with the desired Cloud NetApp Volumes KMS Config.'
                'list:List Cloud NetApp Volumes KMS Configs.'
                'update:Update a Cloud NetApp Volumes KMS Config.'
                'verify:Verify that the Cloud NetApp Volumes KMS Config is reachable.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp locations')
            local -a commands
            commands=(
                'describe:Describe a Cloud NetApp Files location.'
                'list:List all Cloud NetApp Files locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp operations')
            local -a commands
            commands=(
                'describe:Describe a Cloud NetApp Files operation.'
                'list:List Cloud NetApp Files operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp storage-pools')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Storage Pool.'
                'delete:Delete a Cloud NetApp Storage Pool.'
                'describe:Show metadata for a Cloud NetApp Storage Pool.'
                'list:List Cloud NetApp Storage Pools.'
                'switch:Switch a Regional Cloud NetApp Flex Storage Pool zone.'
                'update:Update a Cloud NetApp Storage Pool.'
                'validate-directory-service:Validate directory service for a Cloud Netapp storage pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp volumes')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Volume.'
                'delete:Delete a Cloud NetApp Volume.'
                'describe:Show metadata for a Cloud NetApp Volume.'
                'list:List Cloud NetApp Volumes.'
                'quota-rules:Create and manage Cloud NetApp Volume QuotaRules.'
                'replications:Create and manage Cloud NetApp Volume Replications.'
                'restore-backup-files:Restore specific files from a backup to a Volume.'
                'revert:Revert a Cloud NetApp Volume back to a specified Snapshot.'
                'snapshots:Create and manage Cloud NetApp Volume Snapshots.'
                'update:Update a Cloud NetApp Volume.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp volumes quota-rules')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Volume Quota Rule.'
                'delete:Delete a Cloud NetApp Volume QuotaRule.'
                'describe:Describe a Cloud NetApp Volume Quota Rule.'
                'list:List Cloud NetApp Volume QuotaRules.'
                'update:Update a Cloud NetApp Volume QuotaRule.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp volumes replications')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Volume Replication.'
                'delete:Delete a Cloud NetApp Volume Replication.'
                'describe:Describe a Cloud NetApp Volume Replication.'
                'establish-peering:Establish peering for Hybrid replication.'
                'list:List Cloud NetApp Volume Replications.'
                'resume:Resume a Cloud NetApp Volume Replication.'
                'reverse:Reverse a Cloud NetApp Volume Replication'\''s direction.'
                'stop:Stop a Cloud NetApp Volume Replication.'
                'sync:Sync a Cloud NetApp Volume Replication.'
                'update:Update a Cloud NetApp Volume Replication.'
            )
            _describe 'command' commands
            ;;
        'gcloud netapp volumes snapshots')
            local -a commands
            commands=(
                'create:Create a Cloud NetApp Volume Snapshot.'
                'delete:Delete a Cloud NetApp Volume Snapshot.'
                'describe:Describe a Cloud NetApp Volume Snapshot.'
                'list:List Cloud NetApp Volume Snapshots.'
                'update:Update a Cloud NetApp Volume Snapshot.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity')
            local -a commands
            commands=(
                'hubs:Manage Network Connectivity Center hubs.'
                'internal-ranges:Manage internal ranges.'
                'locations:Get information about supported Network Connectivity Center locations.'
                'multicloud-data-transfer-configs:Manage Multicloud Data Transfer Config resources.'
                'multicloud-data-transfer-supported-services:Manage Multicloud Data Transfer Supported Service resources.'
                'operations:Manage Network Connectivity Center operations.'
                'policy-based-routes:Manage Policy-based Routes.'
                'regional-endpoints:Manage Network Connectivity RegionalEndpoints.'
                'service-connection-policies:Manage Service Connection Policies.'
                'spokes:Manage Network Connectivity Center spokes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity hubs')
            local -a commands
            commands=(
                'accept-spoke:Accept a spoke into a hub.'
                'accept-spoke-update:Accept a proposal to update a spoke in a hub.'
                'add-iam-policy-binding:Add an IAM policy binding to the IAM policy of a hub resource.'
                'create:Create a new hub.'
                'delete:Delete a hub.'
                'describe:Describe a hub.'
                'get-iam-policy:Get the IAM policy for a hub resource.'
                'groups:Manage Network Connectivity Center groups.'
                'list:List hubs.'
                'list-spokes:List hub spokes.'
                'query-status:Query the status of Private Service Connect propagation for a hub.'
                'reject-spoke:Reject a spoke from a hub.'
                'reject-spoke-update:Reject a proposal to update a spoke in a hub.'
                'remove-iam-policy-binding:Remove an IAM policy binding from the IAM policy of a hub resource.'
                'route-tables:Manage Network Connectivity Center route tables.'
                'set-iam-policy:Set the IAM policy of a hub resource.'
                'update:Update a hub.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity hubs groups')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to the IAM policy of a group resource.'
                'describe:Describe a group.'
                'get-iam-policy:Get the IAM policy for a group resource.'
                'list:List groups.'
                'remove-iam-policy-binding:Remove an IAM policy binding from the IAM policy of a group resource.'
                'set-iam-policy:Set the IAM policy of a group resource.'
                'update:Update a group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity hubs route-tables')
            local -a commands
            commands=(
                'describe:Describe a route table.'
                'list:List route tables.'
                'routes:Manage Network Connectivity Center routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity hubs route-tables routes')
            local -a commands
            commands=(
                'describe:Describe a route.'
                'list:List routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity internal-ranges')
            local -a commands
            commands=(
                'create:Create a new internal range.'
                'delete:Delete an internal range.'
                'describe:Describe an internal range.'
                'list:List internal ranges.'
                'update:Update an internal range.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity locations')
            local -a commands
            commands=(
                'describe:Describe a Network Connectivity Center location.'
                'list:List Network Connectivity Center locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity multicloud-data-transfer-configs')
            local -a commands
            commands=(
                'create:Create a multicloudDataTransferConfig.'
                'delete:Delete a multicloudDataTransferConfig.'
                'describe:Describe a multicloudDataTransferConfig.'
                'destinations:Manage Destination resources.'
                'list:List multicloudDataTransferConfigs.'
                'update:Update a multicloudDataTransferConfig.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity multicloud-data-transfer-configs destinations')
            local -a commands
            commands=(
                'create:Create a destination.'
                'delete:Delete a destination.'
                'describe:Describe a destination.'
                'list:List destinations.'
                'update:Update a destination.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity multicloud-data-transfer-supported-services')
            local -a commands
            commands=(
                'describe:Describe multicloudDataTransferSupportedService.'
                'list:List multicloudDataTransferSupportedServices.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity operations')
            local -a commands
            commands=(
                'describe:Describe a Network Connectivity Center operation.'
                'list:List Network Connectivity Center operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity policy-based-routes')
            local -a commands
            commands=(
                'create:Create a new policy-based route.'
                'delete:Delete a policy-based route.'
                'describe:Describe a policy-based route.'
                'list:List policy-based routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity regional-endpoints')
            local -a commands
            commands=(
                'create:Create a new regional endpoint.'
                'delete:Delete a regional endpoint.'
                'describe:Describe a regional endpoint.'
                'list:List regional endpoints.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity service-connection-policies')
            local -a commands
            commands=(
                'create:Create a new Service Connection Policy.'
                'delete:Delete a service connection policy.'
                'describe:Describe a service connection policy.'
                'list:List service connection policies.'
                'update:Update a service connection policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity spokes')
            local -a commands
            commands=(
                'activate:Activate a spoke.'
                'deactivate:Deactivate a spoke.'
                'delete:Delete a spoke.'
                'describe:Describe a spoke.'
                'linked-interconnect-attachments:Manage VLAN attachment spokes.'
                'linked-producer-vpc-network:Manage Producer VPC spokes.'
                'linked-router-appliances:Manage Router appliance spokes.'
                'linked-vpc-network:Manage VPC spokes.'
                'linked-vpn-tunnels:Manage VPN spokes.'
                'list:List spokes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity spokes linked-interconnect-attachments')
            local -a commands
            commands=(
                'create:Create a new VLAN attachment spoke.'
                'update:Update a VLAN attachment spoke.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity spokes linked-producer-vpc-network')
            local -a commands
            commands=(
                'create:Create a new Producer VPC spoke.'
                'update:Update a Producer VPC spoke.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity spokes linked-router-appliances')
            local -a commands
            commands=(
                'create:Create a new Router appliance spoke.'
                'update:Update a Router appliance spoke.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity spokes linked-vpc-network')
            local -a commands
            commands=(
                'create:Create a new VPC spoke.'
                'update:Update a VPC spoke.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-connectivity spokes linked-vpn-tunnels')
            local -a commands
            commands=(
                'create:Create a new VPN spoke.'
                'update:Update a VPN spoke.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-management')
            local -a commands
            commands=(
                'connectivity-tests:Manage Network Management ConnectivityTests.'
                'operations:Manage Network Management operations.'
                'vpc-flow-logs-configs:Manage the VPC Flow Logs configurations.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-management connectivity-tests')
            local -a commands
            commands=(
                'create:Create a new connectivity test.'
                'delete:Delete a connectivity test.'
                'describe:Describe a connectivity test.'
                'list:List connectivity tests.'
                'rerun:Rerun a connectivity test.'
                'update:Update an existing connectivity test.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-management operations')
            local -a commands
            commands=(
                'describe:Describe a Network Management operation.'
                'list:List Network Management operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-management vpc-flow-logs-configs')
            local -a commands
            commands=(
                'create:Creates a new VPC Flow Logs configuration.'
                'delete:Deletes the specified VPC Flow Logs configuration.'
                'describe:Describe the details of a specific VPC Flow Logs configuration.'
                'list:List all VPC Flow Logs configurations.'
                'query-org-vpc-flow-logs-configs:Fetch all organization-level VPC Flow Logs configurations associated with the project.'
                'show-effective-flow-logs-configs:Show all effective VPC Flow Logs configurations for a resource.'
                'update:Updates one or more fields in an existing VPC Flow Logs configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security')
            local -a commands
            commands=(
                'address-groups:Manage Network Security AddressGroups.'
                'authorization-policies:Manage Network Security AuthorizationPolicies.'
                'authz-policies:Manage Network Security '\''AuthzPolicy'\'' resources.'
                'backend-authentication-configs:Manage Network Security BackendAuthenticationConfigs.'
                'client-tls-policies:Manage Network Security ClientTlsPolicies.'
                'firewall-endpoint-associations:Create and manage Firewall Plus endpoint associations.'
                'firewall-endpoints:Create and manage Firewall Plus endpoints.'
                'gateway-security-policies:Manage Network Security Gateway Security Policies.'
                'intercept-deployment-groups:Manage Intercept Deployment Group resources.'
                'intercept-deployments:Manage Intercept Deployment resources.'
                'intercept-endpoint-group-associations:Manage Intercept Endpoint Group Association resources.'
                'intercept-endpoint-groups:Manage Intercept Endpoint Group resources.'
                'mirroring-deployment-groups:Manage Mirroring Deployment Group resources.'
                'mirroring-deployments:Manage Mirroring Deployment resources.'
                'mirroring-endpoint-group-associations:Manage Mirroring Endpoint Group Association resources.'
                'mirroring-endpoint-groups:Manage Mirroring Endpoint Group resources.'
                'org-address-groups:Manage Network Security AddressGroups.'
                'security-profile-groups:Manage Network Security - Security Profile Groups.'
                'security-profiles:Manage Network Security - Security Profiles.'
                'server-tls-policies:Manage Network Security ServerTlsPolicies.'
                'tls-inspection-policies:Manage Network Security TLS Inspection Policies.'
                'url-lists:Manage Network Security Url Lists.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security address-groups')
            local -a commands
            commands=(
                'add-items:Add items to an address group.'
                'clone-items:Clone items from source address group.'
                'create:Create an address group.'
                'delete:Delete address group.'
                'describe:Describe an address group.'
                'list:List address groups.'
                'list-references:Lists References of an Address Group.'
                'remove-items:Remove items from an address group.'
                'update:Update an address group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security authorization-policies')
            local -a commands
            commands=(
                'delete:Delete authorization policy.'
                'export:Export authorization policy.'
                'import:Import authorization policy.'
                'list:List authorization policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security authz-policies')
            local -a commands
            commands=(
                'delete:Delete an '\''AuthzPolicy'\'' resource.'
                'describe:Describe an '\''AuthzPolicy'\'' resource.'
                'import:Import an '\''AuthzPolicy'\'' resource.'
                'list:List '\''AuthzPolicy'\'' resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security backend-authentication-configs')
            local -a commands
            commands=(
                'create:Create a BackendAuthenticationConfig.'
                'delete:Delete BackendAuthenticationConfig.'
                'describe:Describe BackendAuthenticationConfig.'
                'export:Export BackendAuthenticationConfig.'
                'import:Import BackendAuthenticationConfigs.'
                'list:List BackendAuthenticationConfigs.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security client-tls-policies')
            local -a commands
            commands=(
                'delete:Delete ClientTlsPolicy.'
                'export:Export ClientTlsPolicy.'
                'import:Import ClientTlsPolicy.'
                'list:List ClientTlsPolicies.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security firewall-endpoint-associations')
            local -a commands
            commands=(
                'create:Create a Firewall Plus endpoint association.'
                'delete:Delete a Firewall Plus endpoint association.'
                'describe:Describe a Firewall Plus endpoint association.'
                'list:List Firewall Plus endpoint associations.'
                'update:Update a Firewall Plus endpoint association.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security firewall-endpoints')
            local -a commands
            commands=(
                'create:Create a Firewall Plus endpoint.'
                'delete:Delete a Firewall Plus endpoint.'
                'describe:Describe a Firewall Plus endpoint.'
                'list:List Firewall Plus endpoints.'
                'update:Update a Firewall Plus endpoint.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security gateway-security-policies')
            local -a commands
            commands=(
                'delete:Delete Gateway Security Policy.'
                'export:Export Gateway Security Policy.'
                'import:Import Gateway Security Policy.'
                'list:List Gateway Security Policies.'
                'rules:Manage Network Security Gateway Security Policy Rules.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security gateway-security-policies rules')
            local -a commands
            commands=(
                'delete:Delete Gateway Security Policy Rule.'
                'export:Export Gateway Security Policy Rule.'
                'import:Import Gateway Security Policy Rule.'
                'list:List Gateway Security Policy Rules.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security intercept-deployment-groups')
            local -a commands
            commands=(
                'create:Create an Intercept Deployment Group.'
                'delete:Delete an Intercept Deployment Group.'
                'describe:Describe an Intercept Deployment Group.'
                'list:List Intercept Deployment Groups.'
                'update:Update an Intercept Deployment Group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security intercept-deployments')
            local -a commands
            commands=(
                'create:Create an Intercept Deployment.'
                'delete:Delete an Intercept Deployment.'
                'describe:Describe an Intercept Deployment.'
                'list:List Intercept Deployments.'
                'update:Update an Intercept Deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security intercept-endpoint-group-associations')
            local -a commands
            commands=(
                'create:Create an Intercept Endpoint Group Association.'
                'delete:Delete an Intercept Endpoint Group Association.'
                'describe:Describe an Intercept Endpoint Group Association.'
                'list:List Intercept Endpoint Group Associations.'
                'update:Update an Intercept Endpoint Group Association.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security intercept-endpoint-groups')
            local -a commands
            commands=(
                'create:Create a Intercept Endpoint Group.'
                'delete:Delete a Intercept Endpoint Group.'
                'describe:Describe a Intercept Endpoint Group.'
                'list:List Intercept Endpoint Groups.'
                'update:Update a Intercept Endpoint Group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security mirroring-deployment-groups')
            local -a commands
            commands=(
                'create:Create a Mirroring Deployment Group.'
                'delete:Delete a Mirroring Deployment Group.'
                'describe:Describe a Mirroring Deployment Group.'
                'list:List Mirroring Deployment Groups.'
                'update:Update a Mirroring Deployment Group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security mirroring-deployments')
            local -a commands
            commands=(
                'create:Create a Mirroring Deployment.'
                'delete:Delete a Mirroring Deployment.'
                'describe:Describe a Mirroring Deployment.'
                'list:List Mirroring Deployments.'
                'update:Update a Mirroring Deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security mirroring-endpoint-group-associations')
            local -a commands
            commands=(
                'create:Create a Mirroring Endpoint Group Association.'
                'delete:Delete a Mirroring Endpoint Group Association.'
                'describe:Describe a Mirroring Endpoint Group Association.'
                'list:List Mirroring Endpoint Group Associations.'
                'update:Update a Mirroring Endpoint Group Association.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security mirroring-endpoint-groups')
            local -a commands
            commands=(
                'create:Create a Mirroring Endpoint Group.'
                'delete:Delete a Mirroring Endpoint Group.'
                'describe:Describe a Mirroring Endpoint Group.'
                'list:List Mirroring Endpoint Groups.'
                'update:Update a Mirroring Endpoint Group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security org-address-groups')
            local -a commands
            commands=(
                'add-items:Add items to an address group of organization.'
                'clone-items:Clone items from source address group of organization.'
                'create:Create an address group.'
                'delete:Delete address group.'
                'describe:Describe an address group.'
                'list:List address groups.'
                'list-references:Lists References of an Organization Address Group.'
                'remove-items:Remove items from an address group of organization.'
                'update:Update an address group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security security-profile-groups')
            local -a commands
            commands=(
                'create:Create a new Security Profile Group.'
                'delete:Delete a Security Profile Group.'
                'describe:Describe a Security Profile Group.'
                'list:List Security Profile groups.'
                'update:Update a Security Profile Group.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security security-profiles')
            local -a commands
            commands=(
                'custom-intercept:Manage Security Profiles - Custom Intercept Profile.'
                'custom-mirroring:Manage Security Profiles - Custom Mirroring Profile.'
                'threat-prevention:Manage Security Profiles - Threat Prevention Profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security security-profiles custom-intercept')
            local -a commands
            commands=(
                'create:Create a new Custom Intercept Profile.'
                'delete:Delete a Security Profile.'
                'describe:Describe a Custom InterceptSecurity Profile.'
                'list:List Custom Intercept Security Profiles.'
                'update:Updates a Custom Intercept Profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security security-profiles custom-mirroring')
            local -a commands
            commands=(
                'create:Create a new Custom Mirroring Profile.'
                'delete:Delete a Security Profile.'
                'describe:Describe a Custom MirroringSecurity Profile.'
                'list:List Custom Mirroring Security Profiles.'
                'update:Updates a Custom Mirroring Profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security security-profiles threat-prevention')
            local -a commands
            commands=(
                'add-override:Add overrides to Threat Prevention Profile.'
                'create:Create a new Threat Prevention Profile.'
                'delete:Delete a Security Profile.'
                'delete-override:Delete overrides of Threat Prevention Profile.'
                'list:List Threat Prevention Security Profiles.'
                'list-overrides:List overrides of Threat Prevention Profile.'
                'update-override:Update Overrides of Threat Prevention Profile.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security server-tls-policies')
            local -a commands
            commands=(
                'delete:Delete ServerTlsPolicy.'
                'describe:Describe ServerTlsPolicy.'
                'export:Export ServerTlsPolicy.'
                'import:Import ServerTlsPolicy.'
                'list:List ServerTlsPolicies.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security tls-inspection-policies')
            local -a commands
            commands=(
                'delete:Delete TLS Inspection Policy.'
                'export:Export TLS Inspection Policy.'
                'import:Import TLS Inspection Policy.'
                'list:List TLS Inspection Policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-security url-lists')
            local -a commands
            commands=(
                'delete:Delete Url List.'
                'export:Export Url List.'
                'import:Import Url List.'
                'list:List Url Lists.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services')
            local -a commands
            commands=(
                'endpoint-policies:Manage Network Services EndpointPolicies.'
                'gateways:Manage Network Services Gateways.'
                'grpc-routes:Manage Network Services GrpcRoutes.'
                'http-routes:Manage Network Services HttpRoutes.'
                'meshes:Manage Network Services Meshes.'
                'multicast-consumer-associations:Manage Network Services MulticastConsumerAssociations.'
                'multicast-domain-activations:Manage Network Services MulticastDomainActivations.'
                'multicast-domain-groups:Manage Network Services MulticastDomainGroups.'
                'multicast-domains:Manage Network Services MulticastDomains.'
                'multicast-group-consumer-activations:Manage Network Services MulticastGroupConsumerActivations.'
                'multicast-group-producer-activations:Manage Network Services MulticastGroupProducerActivations.'
                'multicast-group-range-activations:Manage Network Services MulticastGroupRangeActivations.'
                'multicast-group-ranges:Manage Network Services MulticastGroupRanges.'
                'multicast-producer-associations:Manage Network Services MulticastProducerAssociations.'
                'operations:Manage Network Services Operations.'
                'route-views:View Network Services Route Views.'
                'service-bindings:Manage Network Services Bindings.'
                'service-lb-policies:Manage Network Services ServiceLbPolicies.'
                'tcp-routes:Manage Network Services TcpRoutes.'
                'tls-routes:Manage Network Services TlsRoutes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services endpoint-policies')
            local -a commands
            commands=(
                'delete:Delete endpoint policy.'
                'describe:Describe an endpoint policy.'
                'export:Export endpoint policy.'
                'import:Import endpoint policy.'
                'list:List endpoint policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services gateways')
            local -a commands
            commands=(
                'delete:Delete a gateway.'
                'describe:Describe a gateway.'
                'export:Export the configuration for a gateway.'
                'import:Import the configuration for a gateway.'
                'list:List gateways.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services grpc-routes')
            local -a commands
            commands=(
                'delete:Delete grpc route.'
                'describe:Describe a grpc route.'
                'export:Export grpc route.'
                'import:Import grpc route.'
                'list:List grpc routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services http-routes')
            local -a commands
            commands=(
                'delete:Delete http route.'
                'describe:Describe a HTTP route.'
                'export:Export http route.'
                'import:Import http route.'
                'list:List http routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services meshes')
            local -a commands
            commands=(
                'delete:Delete a mesh.'
                'describe:Describe a mesh.'
                'export:Export a mesh.'
                'import:Import a mesh.'
                'list:List meshes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-consumer-associations')
            local -a commands
            commands=(
                'create:Create a multicast consumer association.'
                'delete:Delete a multicast consumer association.'
                'describe:Describe a multicast consumer association.'
                'list:List multicast consumer associations.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-domain-activations')
            local -a commands
            commands=(
                'create:Create a multicast domain activation.'
                'delete:Delete a multicast domain activation.'
                'describe:Describe a multicast domain activation.'
                'list:List multicast domain activations.'
                'update:Update a multicast domain activation.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-domain-groups')
            local -a commands
            commands=(
                'create:Create a multicast domain group.'
                'delete:Delete a multicast domain group.'
                'describe:Describe a multicast domain group.'
                'list:List multicast domain groups.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-domains')
            local -a commands
            commands=(
                'create:Create a multicast domain.'
                'delete:Delete a multicast domain.'
                'describe:Describe a multicast domain.'
                'list:List multicast domains.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-group-consumer-activations')
            local -a commands
            commands=(
                'create:Create a multicast group consumer activation.'
                'delete:Delete a multicast group consumer activation.'
                'describe:Describe a multicast group consumer activation.'
                'list:List multicast group consumer activations.'
                'update:Update a multicast group consumer activation.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-group-producer-activations')
            local -a commands
            commands=(
                'create:Create a multicast group producer activation.'
                'delete:Delete a multicast group producer activation.'
                'describe:Describe a multicast group producer activation.'
                'list:List multicast group producer activations.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-group-range-activations')
            local -a commands
            commands=(
                'create:Create a multicast group range activation.'
                'delete:Delete a multicast group range activation.'
                'describe:Describe a multicast group range activations.'
                'list:List multicast group range activations.'
                'update:Update a multicast group range activation.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-group-ranges')
            local -a commands
            commands=(
                'create:Create a multicast group range.'
                'delete:Delete a multicast group range.'
                'describe:Describe a multicast group range.'
                'list:List multicast group ranges.'
                'update:Update a multicast group range.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services multicast-producer-associations')
            local -a commands
            commands=(
                'create:Create a multicast producer association.'
                'delete:Delete a multicast producer association.'
                'describe:Describe a multicast producer associations.'
                'list:List multicast producer associations.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services operations')
            local -a commands
            commands=(
                'cancel:Cancel a Network Services long running operation.'
                'describe:Show details of a Network Services long running operation.'
                'list:List all Network Services long running operations.'
                'wait:Poll a Network Services long running operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services route-views')
            local -a commands
            commands=(
                'describe:Route View for a Mesh or Gateway.'
                'list:Route View for a Mesh or Gateway.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services service-bindings')
            local -a commands
            commands=(
                'create:Create a service binding.'
                'delete:Delete service binding.'
                'describe:Describe a service binding.'
                'export:Export a service binding.'
                'import:Import a service binding.'
                'list:List service bindings.'
                'update:Update a service binding.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services service-lb-policies')
            local -a commands
            commands=(
                'create:Create a service LB policy.'
                'delete:Delete service LB policy.'
                'describe:Describe a service LB policy.'
                'export:Export service LB policy.'
                'import:Import service LB policy.'
                'list:List ServiceLbPolicies.'
                'update:Update a service LB policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services tcp-routes')
            local -a commands
            commands=(
                'delete:Delete tcp route.'
                'describe:Describe a TCP route.'
                'export:Export tcp route.'
                'import:Import tcp route.'
                'list:List tcp routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud network-services tls-routes')
            local -a commands
            commands=(
                'delete:Delete tls route.'
                'describe:Describe a tls route.'
                'export:Export tls route.'
                'import:Import tls route.'
                'list:List tls routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud notebooks')
            local -a commands
            commands=(
                'environments:Notebooks Environments Command Group.'
                'instances:Notebooks Instances command group.'
                'locations:View locations available for a project.'
                'runtimes:Notebooks Runtimes command group.'
            )
            _describe 'command' commands
            ;;
        'gcloud notebooks environments')
            local -a commands
            commands=(
                'create:Request for creating environments.'
                'delete:Request for deleting environments.'
                'describe:Request for describing environments.'
                'list:Request for listing environments.'
            )
            _describe 'command' commands
            ;;
        'gcloud notebooks instances')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for an instance.'
                'create:Request for creating an instance.'
                'delete:Request for deleting instances.'
                'describe:Request for describing instances.'
                'diagnose:Request for diagnose instances.'
                'get-health:Request for checking if a notebook instance is healthy.'
                'get-iam-policy:Get IAM policy for an instance.'
                'is-upgradeable:Request for checking if a notebook instance is upgradeable.'
                'list:Request for listing instances.'
                'migrate:Request for migrating instances.'
                'register:Request for registering instances.'
                'remove-iam-policy-binding:Remove IAM policy binding for an instance.'
                'reset:Request for resetting instances.'
                'rollback:Request for rolling back instances.'
                'set-iam-policy:Set the IAM policy for an Instance.'
                'start:Request for starting instances.'
                'stop:Request for stopping instances.'
                'update:Request for updating instances.'
                'upgrade:Request for upgrading instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud notebooks locations')
            local -a commands
            commands=(
                'list:Request for listing locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud notebooks runtimes')
            local -a commands
            commands=(
                'create:Request for creating an runtime.'
                'delete:Request for deleting runtimes.'
                'describe:Request for describing runtimes.'
                'diagnose:Request for diagnose runtimes.'
                'list:Request for listing runtimes.'
                'migrate:Request for migrating runtimes.'
                'reset:Request for resetting runtimes.'
                'start:Request for starting runtimes.'
                'stop:Request for stopping runtimes.'
                'switch:Request for switching runtimes.'
            )
            _describe 'command' commands
            ;;
        'gcloud observability')
            local -a commands
            commands=(
                'scopes:Manage Scope resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud observability scopes')
            local -a commands
            commands=(
                'describe:Describe scopes.'
                'update:Update scopes.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database')
            local -a commands
            commands=(
                'autonomous-database-backups:Manage Autonomous Database Backup resources.'
                'autonomous-database-character-sets:Manage Autonomous Database Character Set resources.'
                'autonomous-databases:Manage Autonomous Database resources.'
                'autonomous-db-versions:Manage Autonomous Db Version resources.'
                'cloud-exadata-infrastructures:Manage Cloud Exadata Infrastructure resources.'
                'cloud-vm-clusters:Manage Cloud Vm Cluster resources.'
                'database-character-sets:Manage Database Character Set resources.'
                'databases:Manage Database resources.'
                'db-system-initial-storage-sizes:Manage Db System Initial Storage Size resources.'
                'db-system-shapes:Manage Db System Shape resources.'
                'db-systems:Manage Db System resources.'
                'db-versions:Manage Db Version resources.'
                'entitlements:Manage Entitlement resources.'
                'exadb-vm-clusters:Manage Exadb Vm Cluster resources.'
                'exascale-db-storage-vaults:Manage Exascale Db Storage Vault resources.'
                'gi-versions:Manage Gi Version resources.'
                'odb-networks:Manage Odb Network resources.'
                'operations:Manage Operation resources.'
                'pluggable-databases:Manage Pluggable Database resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database autonomous-database-backups')
            local -a commands
            commands=(
                'list:List autonomous database backups.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database autonomous-database-character-sets')
            local -a commands
            commands=(
                'list:List all AutonomousDatabaseCharacterSets.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database autonomous-databases')
            local -a commands
            commands=(
                'create:Create a new AutonomousDatabase.'
                'delete:Delete an AutonomousDatabase.'
                'describe:Get details of an AutonomousDatabase.'
                'failover:Failovers a standby AutonomousDatabase to a new primary.'
                'generate-wallet:Generate wallet for an AutonomousDatabase.'
                'list:List all AutonomousDatabases.'
                'restart:Restarts an AutonomousDatabase.'
                'restore:Restore an AutonomousDatabase.'
                'start:Starts an AutonomousDatabase.'
                'stop:Stops an AutonomousDatabase.'
                'switchover:Switchovers an AutonomousDatabase to a new primary.'
                'update:Update an AutonomousDatabase.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database autonomous-db-versions')
            local -a commands
            commands=(
                'list:List all AutonomousDbVersions.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database cloud-exadata-infrastructures')
            local -a commands
            commands=(
                'create:Create a new ExadataInfrastructure.'
                'db-servers:Manage Db Server resources.'
                'delete:Delete an ExadataInfrastructure.'
                'describe:Get details of a ExadataInfrastructure.'
                'list:List all ExadataInfrastructures.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database cloud-exadata-infrastructures db-servers')
            local -a commands
            commands=(
                'list:List all DbServers.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database cloud-vm-clusters')
            local -a commands
            commands=(
                'create:Create a new CloudVmCluster.'
                'db-nodes:Manage Db Node resources.'
                'delete:Delete a CloudVmCluster.'
                'describe:Describe cloudVmClusters.'
                'list:List all CloudVmClusters.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database cloud-vm-clusters db-nodes')
            local -a commands
            commands=(
                'list:List all DbNodes.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database database-character-sets')
            local -a commands
            commands=(
                'list:List all DatabaseCharacterSets.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database databases')
            local -a commands
            commands=(
                'describe:Get details of a Database.'
                'list:List all Databases.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database db-system-initial-storage-sizes')
            local -a commands
            commands=(
                'list:List all DbSystemInitialStorageSizes.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database db-system-shapes')
            local -a commands
            commands=(
                'list:List all DbSystemShapes.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database db-systems')
            local -a commands
            commands=(
                'create:Create a new DbSystem.'
                'delete:Delete a DbSystem.'
                'describe:Get details of a DbSystem.'
                'list:List all DbSystems.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database db-versions')
            local -a commands
            commands=(
                'list:List all DbVersions.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database entitlements')
            local -a commands
            commands=(
                'list:List all Entitlements.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database exadb-vm-clusters')
            local -a commands
            commands=(
                'create:Create exadbVmClusters.'
                'delete:Delete exadbVmClusters.'
                'describe:Describe exadbVmClusters.'
                'list:List exadbVmClusters.'
                'remove-virtual-machine:remove exadbVmClusters.'
                'update:Update exadbVmClusters.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database exascale-db-storage-vaults')
            local -a commands
            commands=(
                'create:Create exascaleDbStorageVaults.'
                'delete:Delete exascaleDbStorageVaults.'
                'describe:Describe exascaleDbStorageVaults.'
                'list:List exascaleDbStorageVaults.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database gi-versions')
            local -a commands
            commands=(
                'list:List all GiVersions.'
                'minor-versions:Manage Minor Version resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database gi-versions minor-versions')
            local -a commands
            commands=(
                'list:List minorVersions.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database odb-networks')
            local -a commands
            commands=(
                'create:Create a new OdbNetwork.'
                'delete:Delete an OdbNetwork.'
                'describe:Get details of an OdbNetwork.'
                'list:List all OdbNetworks.'
                'odb-subnets:Manage Odb Subnet resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database odb-networks odb-subnets')
            local -a commands
            commands=(
                'create:Create a new OdbSubnet.'
                'delete:Delete an OdbSubnet.'
                'describe:Get details of an OdbSubnet.'
                'list:List all OdbSubnets.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database operations')
            local -a commands
            commands=(
                'cancel:Cancel operations.'
                'delete:Delete operations.'
                'describe:Describe operations.'
                'list:List operations.'
                'wait:Wait operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud oracle-database pluggable-databases')
            local -a commands
            commands=(
                'describe:Get details of a PluggableDatabase.'
                'list:List pluggableDatabases.'
            )
            _describe 'command' commands
            ;;
        'gcloud org-policies')
            local -a commands
            commands=(
                'delete:Delete an organization policy.'
                'delete-custom-constraint:Deletes a custom constraint.'
                'describe:Describe an organization policy.'
                'describe-custom-constraint:Describe a custom constraint.'
                'list:List the policies set on a resource.'
                'list-custom-constraints:Lists the custom constraints set on an organization.'
                'reset:Reset the policy to the default for the constraint.'
                'set-custom-constraint:Set a custom constraint from a JSON or YAML file.'
                'set-policy:Set an organization policy from a JSON or YAML file.'
            )
            _describe 'command' commands
            ;;
        'gcloud organizations')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for an organization.'
                'describe:Show metadata for an organization.'
                'get-iam-policy:Get IAM policy for an organization.'
                'list:List organizations accessible by the active account.'
                'remove-iam-policy-binding:Remove IAM policy binding for an organization.'
                'set-iam-policy:Set IAM policy for an organization.'
            )
            _describe 'command' commands
            ;;
        'gcloud orglifecycle')
            local -a commands
            commands=(
                'managed-organizations:Manage ManagedOrganization resources.'
                'operations:Manage Operation resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud orglifecycle managed-organizations')
            local -a commands
            commands=(
                'create:Create a ManagedOrganization resource.'
                'delete:Delete a ManagedOrganization resource.'
                'describe:Describe a ManagedOrganization resource.'
                'list:List ManagedOrganization resources.'
                'undelete:undelete managedOrganizations.'
                'update:Update a ManagedOrganization resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud orglifecycle operations')
            local -a commands
            commands=(
                'cancel:Cancel operations.'
                'delete:Delete operations.'
                'describe:Describe operations.'
                'list:List operations.'
                'wait:Wait operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud pam')
            local -a commands
            commands=(
                'check-onboarding-status:Check Privileged Access Manager \(PAM\) onboarding status for a resource.'
                'entitlements:Manage Privileged Access Manager \(PAM\) entitlements.'
                'grants:Manage Privileged Access Manager \(PAM\) grants.'
                'operations:Manage Privileged Access Manager \(PAM\) Long Running Operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud pam entitlements')
            local -a commands
            commands=(
                'create:Create a new Privileged Access Manager \(PAM\) entitlement.'
                'delete:Delete a Privileged Access Manager \(PAM\) entitlement.'
                'describe:Show details of a Privileged Access Manager \(PAM\) entitlement.'
                'export:Export a Privileged Access Manager \(PAM\) entitlement into a local YAML file.'
                'list:List all Privileged Access Manager \(PAM\) entitlements under a parent.'
                'search:Search and list all Privileged Access Manager \(PAM\) entitlements in a parent for which you are a requester/approver.'
                'update:Update an existing Privileged Access Manager \(PAM\) entitlement.'
            )
            _describe 'command' commands
            ;;
        'gcloud pam grants')
            local -a commands
            commands=(
                'approve:Approve a Privileged Access Manager \(PAM\) grant.'
                'create:Create a new Privileged Access Manager \(PAM\) grant.'
                'deny:Deny a Privileged Access Manager \(PAM\) grant.'
                'describe:Show details of a Privileged Access Manager \(PAM\) grant.'
                'list:List all Privileged Access Manager \(PAM\) grants associated with an entitlement.'
                'revoke:Revoke a Privileged Access Manager \(PAM\) grant.'
                'search:Search for and list all Privileged Access Manager \(PAM\) grants you have created, have approved, or can approve.'
            )
            _describe 'command' commands
            ;;
        'gcloud pam operations')
            local -a commands
            commands=(
                'delete:Delete a Privileged Access Manager \(PAM\) long running operation.'
                'describe:Show details of a Privileged Access Manager \(PAM\) long running operation.'
                'list:List all Privileged Access Manager \(PAM\) long running operations under a location.'
                'wait:Poll a Privileged Access Manager \(PAM\) long running operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud parallelstore')
            local -a commands
            commands=(
                'instances:Manage Parallelstore instance resources.'
                'locations:View Locations resources.'
                'operations:Manage Operation resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud parallelstore instances')
            local -a commands
            commands=(
                'create:Creates a Parallelstore instance.'
                'delete:Deletes a single Parallelstore instance.'
                'describe:Gets details of a single Parallelstore instance.'
                'export-data:Exports data from Parallelstore instance to Cloud Storage.'
                'import-data:Imports data from Cloud Storage to Parallelstore instance.'
                'list:List Parallelstore instances.'
                'update:Updates the parameters of a single Parallelstore instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud parallelstore locations')
            local -a commands
            commands=(
                'describe:Describe locations.'
                'list:List locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud parallelstore operations')
            local -a commands
            commands=(
                'cancel:Cancel operations.'
                'delete:Delete operations.'
                'describe:Describe operations.'
                'list:List operations.'
                'wait:Wait operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud parametermanager')
            local -a commands
            commands=(
                'parameters:Manage Parameter Manager parameter resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud parametermanager parameters')
            local -a commands
            commands=(
                'create:Creates a Parameter Manager parameter.'
                'delete:Deletes a single Parameter Manager parameter resource.'
                'describe:Gets a single Parameter Manager parameter.'
                'list:Lists Parameter Manager parameters.'
                'update:Updates the metadata of an Parameter Manager parameter resource.'
                'versions:Manage Parameter Manager parameter version resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud parametermanager parameters versions')
            local -a commands
            commands=(
                'create:Creates an Parameter Manager parameter version.'
                'delete:Deletes a single Parameter Manager parameter version.'
                'describe:Gets a single Parameter Manager parameter version.'
                'list:List Parameter Manager parameter versions.'
                'render:Gets a single Parameter Manager parameter version render.'
                'update:Updates the properties of a single Parameter Manager parameter version.'
            )
            _describe 'command' commands
            ;;
        'gcloud policy-intelligence')
            local -a commands
            commands=(
                'query-activity:Query activities on cloud resource.'
                'simulate:Simulate changes to organization policies.'
                'troubleshoot-policy:Troubleshoot IAM policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud policy-intelligence simulate')
            local -a commands
            commands=(
                'orgpolicy:Understand how changes to organization policies could affect your       resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud policy-intelligence troubleshoot-policy')
            local -a commands
            commands=(
                'iam:Troubleshoot IAM allow and deny policies.'
            )
            _describe 'command' commands
            ;;
        'gcloud policy-troubleshoot')
            local -a commands
            commands=(
                'iam:Troubleshoot the IAM Policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud privateca')
            local -a commands
            commands=(
                'certificates:Manage certificates.'
                'locations:Manage locations.'
                'pools:Manage CA pools.'
                'roots:Manage root certificate authorities.'
                'subordinates:Manage subordinate certificate authorities.'
                'templates:Manage certificate templates.'
            )
            _describe 'command' commands
            ;;
        'gcloud privateca certificates')
            local -a commands
            commands=(
                'create:Create a new certificate.'
                'describe:Get metadata for a certificate.'
                'export:Export a pem-encoded certificate to a file.'
                'list:List certificates within a project.'
                'revoke:Revoke a certificate.'
                'update:Update an existing certificate.'
            )
            _describe 'command' commands
            ;;
        'gcloud privateca locations')
            local -a commands
            commands=(
                'list:List supported locations for the Private CA GA API.'
            )
            _describe 'command' commands
            ;;
        'gcloud privateca pools')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a CA pool.'
                'create:Create a new CA Pool.'
                'delete:Delete a CA pool.'
                'describe:Get metadata for a CA pool.'
                'get-ca-certs:Get the root CA certs for all active CAs in the CA pool.'
                'get-iam-policy:Get the IAM policy for a CA pool.'
                'list:List CA pools within a project.'
                'remove-iam-policy-binding:Remove IAM policy binding for a CA pool.'
                'set-iam-policy:Set the IAM policy for a CA pool.'
                'update:Update an existing  CA Pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud privateca roots')
            local -a commands
            commands=(
                'create:Create a new root certificate authority.'
                'delete:Delete a Root Certificate Authority.'
                'describe:Get metadata for a root Certificate Authority.'
                'disable:Disable a root certificate authority.'
                'enable:Enable a root certificate authority.'
                'list:List root certificate authorities.'
                'undelete:Undelete a root Certificate Authority.'
                'update:Update an existing root certificate authority.'
            )
            _describe 'command' commands
            ;;
        'gcloud privateca subordinates')
            local -a commands
            commands=(
                'activate:Activate a subordinate certificate authority awaiting user activation.'
                'create:Create a new subordinate certificate authority.'
                'delete:Delete a subordinate certificate authority.'
                'describe:Get metadata for a subordinate certificate authority.'
                'disable:Disable a subordinate certificate authority.'
                'enable:Enable a subordinate certificate authority.'
                'get-csr:Get the CSR for a subordinate certificate authority that has not yet been activated.'
                'list:List subordinate certificate authorities.'
                'undelete:Undelete a subordinate certificate authority.'
                'update:Update an existing subordinate certificate authority.'
            )
            _describe 'command' commands
            ;;
        'gcloud privateca templates')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a certificate template.'
                'create:Create a new certificate template.'
                'delete:Delete a certificate template.'
                'describe:Show details about a certificate template.'
                'get-iam-policy:Get the IAM policy for a certificate template.'
                'list:List certificate templates within a project.'
                'remove-iam-policy-binding:Remove IAM policy binding for a certificate template.'
                'replicate:Replicate a certificate template to multiple locations.'
                'set-iam-policy:Set the IAM policy for a certificate template.'
                'update:Update a certificate template.'
            )
            _describe 'command' commands
            ;;
        'gcloud projects')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a project.'
                'create:Create a new project.'
                'delete:Delete a project.'
                'describe:Show metadata for a project.'
                'get-ancestors:Get the ancestors for a project.'
                'get-ancestors-iam-policy:Get IAM policies for a project and its ancestors.'
                'get-iam-policy:Get IAM policy for a project.'
                'list:List projects accessible by the active account.'
                'remove-iam-policy-binding:Remove IAM policy binding for a project.'
                'set-iam-policy:Set IAM policy for a project.'
                'undelete:Undelete a project.'
                'update:Update the name of a project.'
            )
            _describe 'command' commands
            ;;
        'gcloud publicca')
            local -a commands
            commands=(
                'external-account-keys:Create ACME external account binding keys.'
            )
            _describe 'command' commands
            ;;
        'gcloud publicca external-account-keys')
            local -a commands
            commands=(
                'create:Create a new external account key.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub')
            local -a commands
            commands=(
                'lite-operations:Manage Pub/Sub Lite operations.'
                'lite-reservations:Manage Pub/Sub Lite reservations.'
                'lite-subscriptions:Manage Pub/Sub Lite subscriptions.'
                'lite-topics:Manage Pub/Sub Lite topics.'
                'message-transforms:Manage Cloud Pub/Sub message transforms.'
                'schemas:Manage Pub/Sub schemas.'
                'snapshots:Manage Cloud Pub/Sub snapshots.'
                'subscriptions:Manage Cloud Pub/Sub subscriptions.'
                'topics:Manage Cloud Pub/Sub topics.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub lite-operations')
            local -a commands
            commands=(
                'describe:Describe a Pub/Sub Lite operation.'
                'list:List Pub/Sub Lite operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub lite-reservations')
            local -a commands
            commands=(
                'create:Create a Pub/Sub Lite reservation.'
                'delete:Delete a Pub/Sub Lite reservation.'
                'describe:Describe a Pub/Sub Lite reservation.'
                'list:List Pub/Sub Lite reservations.'
                'list-topics:List Pub/Sub Lite topics for a given Lite reservation.'
                'update:Update a Pub/Sub Lite reservation.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub lite-subscriptions')
            local -a commands
            commands=(
                'ack-up-to:Acknowledge messages on a Pub/Sub Lite subscription.'
                'create:Create a Pub/Sub Lite subscription.'
                'delete:Delete a Pub/Sub Lite subscription.'
                'describe:Describe a Pub/Sub Lite subscription.'
                'list:List Pub/Sub Lite subscriptions.'
                'seek:Seek a Pub/Sub Lite subscription.'
                'subscribe:Stream messages from a Pub/Sub Lite subscription.'
                'update:Update a Pub/Sub Lite subscription.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub lite-topics')
            local -a commands
            commands=(
                'create:Create a Pub/Sub Lite topic.'
                'delete:Delete a Pub/Sub Lite topic.'
                'describe:Describe a Pub/Sub Lite topic.'
                'list:List Pub/Sub Lite topics.'
                'list-subscriptions:List Pub/Sub Lite subscriptions for a given Lite topic.'
                'publish:Publish Pub/Sub Lite messages.'
                'update:Update a Pub/Sub Lite topic.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub message-transforms')
            local -a commands
            commands=(
                'test:Tests message transforms against a given message.'
                'validate:Validates a message transform.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub schemas')
            local -a commands
            commands=(
                'commit:Commit a Pub/Sub schema revision.'
                'create:Create a Pub/Sub schema.'
                'delete:Delete a Pub/Sub schema.'
                'delete-revision:Delete a Pub/Sub schema revision.'
                'describe:Show details of a Pub/Sub schema.'
                'list:List Pub/Sub schemas.'
                'list-revisions:List revisions of a Pub/Sub schema.'
                'rollback:Roll back a Pub/Sub schema to a specified revision.'
                'validate-message:Validate a message against a Pub/Sub schema.'
                'validate-schema:Validate a Pub/Sub schema.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub snapshots')
            local -a commands
            commands=(
                'create:Creates one or more Cloud Pub/Sub snapshots.'
                'delete:Deletes one or more Cloud Pub/Sub snapshots.'
                'describe:Describes a Cloud Pub/Sub snapshot.'
                'list:Lists all the snapshots in a given project.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub subscriptions')
            local -a commands
            commands=(
                'ack:Acknowledges one or more messages on the specified subscription.'
                'add-iam-policy-binding:Add IAM policy binding to a subscription.'
                'create:Creates one or more Cloud Pub/Sub subscriptions.'
                'delete:Deletes one or more Cloud Pub/Sub subscriptions.'
                'describe:Describes a Cloud Pub/Sub subscription.'
                'get-iam-policy:Get the IAM policy for a Cloud Pub/Sub Subscription.'
                'list:Lists Cloud Pub/Sub subscriptions.'
                'modify-message-ack-deadline:Modifies the ACK deadline for a specific Cloud Pub/Sub message.'
                'modify-push-config:Modifies the push configuration of a Cloud Pub/Sub subscription.'
                'pull:Pulls one or more Cloud Pub/Sub messages from a subscription.'
                'remove-iam-policy-binding:Remove IAM policy binding of a subscription.'
                'seek:Resets a subscription'\''s backlog to a point in time or to a given snapshot.'
                'set-iam-policy:Set IAM policy for a subscription.'
                'update:Updates an existing Cloud Pub/Sub subscription.'
            )
            _describe 'command' commands
            ;;
        'gcloud pubsub topics')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a topic.'
                'create:Creates one or more Cloud Pub/Sub topics.'
                'delete:Deletes one or more Cloud Pub/Sub topics.'
                'describe:Describes a Cloud Pub/Sub topic.'
                'detach-subscription:Detaches one or more Cloud Pub/Sub subscriptions.'
                'get-iam-policy:Get the IAM policy for a Cloud Pub/Sub Topic.'
                'list:Lists Cloud Pub/Sub topics within a project.'
                'list-subscriptions:Lists Cloud Pub/Sub subscriptions from a given topic.'
                'publish:Publishes a message to the specified topic.'
                'remove-iam-policy-binding:Remove IAM policy binding of a topic.'
                'set-iam-policy:Set IAM policy for a topic.'
                'update:Updates an existing Cloud Pub/Sub topic.'
            )
            _describe 'command' commands
            ;;
        'gcloud recaptcha')
            local -a commands
            commands=(
                'firewall-policies:Managed reCAPTCHA Firewall Policies.'
                'keys:Managed reCAPTCHA Keys.'
            )
            _describe 'command' commands
            ;;
        'gcloud recaptcha firewall-policies')
            local -a commands
            commands=(
                'create:Create a Firewall Policy.'
                'delete:Delete one or more reCAPTCHA Firewall Policies.'
                'describe:Describe reCAPTCHA Firewall Policy.'
                'list:List reCAPTCHA Firewall Policies.'
                'reorder:Reorder all Firewall Policies.'
                'update:Update a Firewall Policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud recaptcha keys')
            local -a commands
            commands=(
                'add-ip-override:Add an IP override to a key.'
                'create:Create a Key.'
                'delete:Delete one or more reCAPTCHA Keys.'
                'describe:Describe reCAPTCHA Key.'
                'list:List reCAPTCHA Keys.'
                'list-ip-overrides:List IP overrides for a key.'
                'migrate:Migrate a key to reCAPTCHA Enterprise.'
                'remove-ip-override:Remove an IP override from a key.'
                'update:Update a Key.'
            )
            _describe 'command' commands
            ;;
        'gcloud recommender')
            local -a commands
            commands=(
                'insight-type-config:Manage Cloud resource insight type configuration.'
                'insights:Manage Cloud resource insights.'
                'recommendations:Manage Cloud resource recommendations.'
                'recommender-config:Manage Cloud resource recommender configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud recommender insight-type-config')
            local -a commands
            commands=(
                'describe:Describe an insight type configuration.'
                'update:Update an insight type configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud recommender insights')
            local -a commands
            commands=(
                'describe:Describe an insight.'
                'list:List insights for a Google Cloud entity.'
                'mark-accepted:Mark an insight'\''s state as ACCEPTED.'
            )
            _describe 'command' commands
            ;;
        'gcloud recommender recommendations')
            local -a commands
            commands=(
                'describe:Describe a recommendation for a Cloud project.'
                'list:List operations for a recommendation.'
                'mark-claimed:Mark a recommendation'\''s state as CLAIMED.'
                'mark-dismissed:Mark recommendation'\''s state as DISMISSED.'
                'mark-failed:Mark a recommendation'\''s state as FAILED.'
                'mark-succeeded:Mark a recommendation'\''s state as SUCCEEDED.'
            )
            _describe 'command' commands
            ;;
        'gcloud recommender recommender-config')
            local -a commands
            commands=(
                'describe:Describe a recommender configuration.'
                'update:Update a recommender configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis')
            local -a commands
            commands=(
                'clusters:Manage Memorystore for Redis Cluster instances.'
                'instances:Manage Cloud Memorystore Redis instances.'
                'operations:Manage Cloud Memorystore Redis operations.'
                'regions:Manage Cloud Memorystore Redis regions.'
                'zones:Manage Cloud Memorystore Redis zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis clusters')
            local -a commands
            commands=(
                'add-cluster-endpoints:Add more cluster endpoints.'
                'backup-collections:Manage backup collections of Memorystore for Redis Cluster instances.'
                'backups:Manage backups of Memorystore for Redis Cluster instances.'
                'create:Create a new Memorystore for Redis Cluster instance.'
                'create-backup:Create a backup of a Redis cluster.'
                'delete:Delete a Memorystore for Redis Cluster instance.'
                'describe:Show metadata for a Memorystore for Redis Cluster instance.'
                'detach:Detach a secondary cluster.'
                'detach-secondaries:Detach one or more secondary clusters from the primary cluster.'
                'get-cluster-certificate-authority:Get the certificate authority information for a Memorystore for Redis Cluster instance.'
                'list:List Memorystore for Redis Cluster instances.'
                'remove-cluster-endpoints:Remove existing Memorystore cluster endpoints.'
                'reschedule-maintenance:Reschedule maintenance window for a Memorystore for     Redis Cluster instance.'
                'switchover:Switchover to a secondary cluster.'
                'update:Update Memorystore Cluster for Redis instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis clusters backup-collections')
            local -a commands
            commands=(
                'describe:Show metadata for a backup collection.'
                'list:List backup collections in a region.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis clusters backups')
            local -a commands
            commands=(
                'delete:Delete a Memorystore for Redis Cluster backup.'
                'describe:Show metadata for a Memorystore for Redis Cluster backup.'
                'export:Export a Redis cluster backup to a Google Cloud Storage bucket.'
                'list:List backups under a backup collection in a region.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis instances')
            local -a commands
            commands=(
                'create:Create a Memorystore Redis instance.'
                'delete:Delete a Redis instance.'
                'describe:Show metadata for a Memorystore Redis instance.'
                'export:Export data from a Memorystore Redis instance to Google Cloud Storage.'
                'failover:Failover a standard tier Cloud Memorystore for Redis instance from the master node to its replica.'
                'get-auth-string:Show AUTH string for a Memorystore Redis instance.'
                'import:Import data to a Memorystore Redis instance from Google Cloud Storage.'
                'list:List Memorystore Redis instances.'
                'reschedule-maintenance:Reschedule maintenance window for a Redis instance.'
                'update:Update Memorystore Redis instances.'
                'upgrade:Upgrade a Memorystore for Redis instance to a specified Redis version.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis operations')
            local -a commands
            commands=(
                'cancel:Cancel a Memorystore Redis import or export operation.'
                'describe:Show metadata for a Memorystore Redis operation.'
                'list:List Memorystore Redis operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis regions')
            local -a commands
            commands=(
                'describe:Show metadata for a Memorystore Redis region.'
                'list:List Memorystore Redis regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud redis zones')
            local -a commands
            commands=(
                'list:List Memorystore Redis zones.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager')
            local -a commands
            commands=(
                'capabilities:Manage Cloud Folder Capabilities.'
                'folders:Manage Cloud Folders.'
                'org-policies:Manage Org Policies.'
                'tags:Create and manipulate tag keys, values and bindings.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager capabilities')
            local -a commands
            commands=(
                'describe:Show whether a Capability is enabled.'
                'update:Update a folder capability.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager folders')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a folder.'
                'create:Create a new folder.'
                'delete:Delete a folder.'
                'describe:Show metadata for a folder.'
                'get-ancestors-iam-policy:Get IAM policies for a folder and its ancestors.'
                'get-iam-policy:Get IAM policy for a folder.'
                'list:List folders accessible by the active account.'
                'move:Move a folder to a new position within the same organization.'
                'remove-iam-policy-binding:Remove IAM policy binding for a folder.'
                'set-iam-policy:Set IAM policy for a folder.'
                'undelete:Undelete a folder.'
                'update:Update the display name of a folder.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager org-policies')
            local -a commands
            commands=(
                'allow:Add values to an Organization Policy allowedvalues list policy.'
                'delete:Delete an Organization Policy.'
                'deny:Add values to an Organization Policy deniedvalues list policy.'
                'describe:Describe an Organization Policy.'
                'disable-enforce:Turns off enforcement of boolean Organization Policy constraint.'
                'enable-enforce:Turns on enforcement of boolean Organization Policy constraint.'
                'list:List Organization Policies associated with the specified resource.'
                'set-policy:Set Organization Policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager tags')
            local -a commands
            commands=(
                'bindings:Create and manipulate TagBindings.'
                'holds:Create and manipulate TagHolds.'
                'keys:Create and manipulate TagKeys.'
                'values:Create and manipulate TagValues.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager tags bindings')
            local -a commands
            commands=(
                'create:Creates a TagBinding resource.'
                'delete:Deletes a TagBinding.'
                'list:Lists TagBindings bound to the specified resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager tags holds')
            local -a commands
            commands=(
                'create:Create a TagHold resource.'
                'delete:Delete a TagHold.'
                'list:List TagHolds under the specified TagValue.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager tags keys')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds a policy binding to the IAM policy of a TagKey.'
                'create:Creates a TagKey resource under the specified tag parent.'
                'delete:Deletes the specified TagKey resource.'
                'describe:Describes a TagKey resource.'
                'get-iam-policy:Gets the IAM policy for a TagKey resource.'
                'list:Lists TagKeys under the specified parent resource.'
                'remove-iam-policy-binding:Removes a policy binding from the IAM policy of a TagKey.'
                'set-iam-policy:Sets IAM policy for a TagKey resource.'
                'update:Updates the specified TagKey resource'\''s description.'
            )
            _describe 'command' commands
            ;;
        'gcloud resource-manager tags values')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds a policy binding to the IAM policy of a TagValue.'
                'create:Creates a TagValue resource.'
                'delete:Deletes the specified TagValue resource.'
                'describe:Describes a TagValue resource.'
                'get-iam-policy:Gets the IAM policy for a TagValue resource.'
                'list:Lists TagValues under the specified parent resource.'
                'remove-iam-policy-binding:Removes a policy binding from the IAM policy of a TagValue.'
                'set-iam-policy:Sets IAM policy for a TagValue resource.'
                'update:Updates the specified TagValue resource'\''s description.'
            )
            _describe 'command' commands
            ;;
        'gcloud run')
            local -a commands
            commands=(
                'configurations:View and manage your Cloud Run configurations.'
                'deploy:Create or update a Cloud Run service.'
                'domain-mappings:View and manage your Cloud Run for Anthos domain mappings.'
                'jobs:View and manage your Cloud Run jobs.'
                'multi-region-services:Manage your Cloud Run multi-region services.'
                'regions:View available Cloud Run \(fully managed\) regions.'
                'revisions:View and manage your Cloud Run revisions.'
                'routes:View your Cloud Run routes.'
                'services:View and manage your Cloud Run services.'
            )
            _describe 'command' commands
            ;;
        'gcloud run configurations')
            local -a commands
            commands=(
                'describe:Obtain details about a given configuration.'
                'list:List available Configurations.'
            )
            _describe 'command' commands
            ;;
        'gcloud run domain-mappings')
            local -a commands
            commands=(
                'create:Create domain mappings for Cloud Run for Anthos.'
                'delete:Delete domain mappings for Cloud Run for Anthos.'
                'describe:Describe domain mappings for Cloud Run for Anthos.'
                'list:Lists domain mappings for Cloud Run for Anthos.'
            )
            _describe 'command' commands
            ;;
        'gcloud run jobs')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Cloud Run job.'
                'create:Create a Cloud Run job.'
                'delete:Delete a job.'
                'deploy:Create or update a Cloud Run job.'
                'describe:Obtain details about jobs.'
                'execute:Execute a job.'
                'executions:View and manage your Cloud Run jobs executions.'
                'get-iam-policy:Get the IAM policy for a Cloud Run job.'
                'list:List jobs.'
                'logs:Read logs for Cloud Run jobs.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Cloud Run job.'
                'replace:Create or replace a job from a YAML job specification.'
                'set-iam-policy:Set the IAM policy for a job.'
                'update:Update a Cloud Run Job.'
            )
            _describe 'command' commands
            ;;
        'gcloud run jobs executions')
            local -a commands
            commands=(
                'cancel:Cancel an execution.'
                'delete:Delete an execution.'
                'describe:Obtain details about executions.'
                'list:List executions.'
                'tasks:View and manage your Cloud Run jobs tasks.'
            )
            _describe 'command' commands
            ;;
        'gcloud run jobs executions tasks')
            local -a commands
            commands=(
                'describe:Obtain details about tasks.'
                'list:List tasks.'
            )
            _describe 'command' commands
            ;;
        'gcloud run jobs logs')
            local -a commands
            commands=(
                'read:Read logs for Cloud Run jobs.'
            )
            _describe 'command' commands
            ;;
        'gcloud run multi-region-services')
            local -a commands
            commands=(
                'delete:Deletes a multi-region service.'
                'describe:Command to describe a multi-region service.'
                'list:List available multi-region services.'
                'replace:Create or Update multi-region service from YAML.'
                'update:Update environment variables, add/remove regions, and other configuration settings in Multi-Region Services.'
            )
            _describe 'command' commands
            ;;
        'gcloud run regions')
            local -a commands
            commands=(
                'list:List available Cloud Run \(fully managed\) regions.'
            )
            _describe 'command' commands
            ;;
        'gcloud run revisions')
            local -a commands
            commands=(
                'delete:Delete a revision.'
                'describe:Obtain details about revisions.'
                'list:List available revisions.'
            )
            _describe 'command' commands
            ;;
        'gcloud run routes')
            local -a commands
            commands=(
                'describe:Obtain details about a given route.'
                'list:List available Routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud run services')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Cloud Run service.'
                'delete:Delete a service.'
                'describe:Obtain details about a given service.'
                'get-iam-policy:Get the IAM policy for a Cloud Run service.'
                'list:List available services.'
                'logs:Read logs for Cloud Run services.'
                'proxy:Proxy a service to localhost authenticating as the active account or with the specified token.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Cloud Run service.'
                'replace:Create or replace a service from a YAML service specification.'
                'set-iam-policy:Set the IAM policy for a service.'
                'update:Update Cloud Run environment variables and other configuration settings.'
                'update-traffic:Adjust the traffic assignments for a Cloud Run service.'
            )
            _describe 'command' commands
            ;;
        'gcloud run services logs')
            local -a commands
            commands=(
                'read:Read logs for a Cloud Run service.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc')
            local -a commands
            commands=(
                'assets:Manage Cloud SCC \(Security Command Center\) assets.'
                'bqexports:Manage Cloud SCC \(Security Command Center\) BigQuery exports.'
                'custom-modules:Manage Cloud SCC \(Security Command Center\) custom modules.'
                'findings:Manage Cloud SCC \(Security Command Center\) findings.'
                'iac-remediation:Manage Cloud Security Command Center \(SCC\) IaC remediations.'
                'iac-validation-reports:Manage Cloud SCC \(Security Command Center\) iac-validation-reports.'
                'manage:Manage Cloud SCC \(Security Command Center\) settings.'
                'muteconfigs:Manage Cloud SCC \(Security Command Center\) mute configs.'
                'notifications:Manage Cloud SCC \(Security Command Center\) notifications.'
                'operations:Manage Cloud SCC \(Security Command Center\) operations.'
                'posture-deployments:Manage Cloud Security Command Center \(SCC\) posture deployments.'
                'posture-operations:Manage Cloud Security Command Center \(SCC\) posture operations.'
                'posture-templates:Manage Cloud Security Command Center \(SCC\) posture templates.'
                'postures:Manage Cloud Security Command Center \(SCC\) postures.'
                'sources:Manage Cloud SCC \(Security Command Center\) finding sources.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc assets')
            local -a commands
            commands=(
                'describe:\(DEPRECATED\)  Describe an asset given its resource name or asset id.'
                'get-parent:\(DEPRECATED\)  Get the Parent for an asset given its resource name or asset id.'
                'get-project:\(DEPRECATED\)  Get the Project for an asset given its resource name or asset id.'
                'group:\(DEPRECATED\)  Filter an organization'\''s assets and groups them by their specified properties.'
                'list:\(DEPRECATED\)  List Cloud Security Command Center assets.'
                'list-marks:\(DEPRECATED\)  List an assets'\''s security marks.'
                'run-discovery:\(DEPRECATED\)  Scan an organization for new/modified/deleted assets.'
                'update-marks:Update Cloud Security Command Center asset'\''s security marks.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc bqexports')
            local -a commands
            commands=(
                'create:Create a Security Command Center BigQuery export.'
                'delete:Delete a Security Command Center BigQuery export.'
                'get:Get a Security Command Center BigQuery export.'
                'list:List Security Command Center BigQuery exports.'
                'update:Update a Security Command Center BigQuery export.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc custom-modules')
            local -a commands
            commands=(
                'sha:Manage Security Health Analytics custom modules.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc custom-modules sha')
            local -a commands
            commands=(
                'create:Create a Security Health Analytics custom module.'
                'delete:Delete a Security Health Analytics custom module.'
                'get:Get the details of a Security Health Analytics custom module.'
                'get-effective:Get the details of a Security Health Analytics custom module with effective enablement state.'
                'list:List the details of Security Health Analytics custom modules.'
                'list-descendant:List the details of the resident and descendant Security Health Analytics custom modules.'
                'list-effective:List the details of Security Health Analytics custom modules with effective enablement states.'
                'simulate:Validates a Security Health Analytics custom module.'
                'update:Update a Security Health Analytics custom module.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc findings')
            local -a commands
            commands=(
                'bulk-mute:Bulk mute Security Command Center findings based on a filter.'
                'create:Create a Security Command Center finding.'
                'export-to-bigquery:Export Security Command Center findings to bigquery.'
                'group:Filter an organization or source'\''s findings and groups them by their specified properties.'
                'list:List an organization or source'\''s findings.'
                'list-marks:List a finding'\''s security marks.'
                'set-mute:Update a Security Command Center finding'\''s mute state.'
                'update:Update a Security Command Center finding.'
                'update-marks:Update Security Command Center finding'\''s security marks.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc iac-remediation')
            local -a commands
            commands=(
                'create:Remediates a Security Command Center finding.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc iac-validation-reports')
            local -a commands
            commands=(
                'create:Create a Cloud Security Command Center \(SCC\) IaC Validation Report.'
                'describe:Describe a Cloud Security Command Center \(SCC\) IaC Validation Report.'
                'list:Lists all the Cloud Security Command Center \(SCC\) IaC validation reports for an organization.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc manage')
            local -a commands
            commands=(
                'custom-modules:Manage Cloud SCC \(Security Command Center\) custom modules.'
                'services:Manage Cloud SCC \(Security Command Center\) services.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc manage custom-modules')
            local -a commands
            commands=(
                'etd:Manage custom modules.'
                'sha:Manage Security Health Analytics custom modules.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc manage custom-modules etd')
            local -a commands
            commands=(
                'create:Create an Event Threat Detection custom module.'
                'delete:Delete an Event Threat Detection custom module.'
                'describe:Get the details of a Event Threat Detection custom module.'
                'describe-effective:Get the effective details of a Event Threat Detection effective custom module.'
                'list:List details of resident and inherited Event Threat Detection Custom Modules.'
                'list-descendant:List the details of the resident and descendant Event Threat Detection custom modules.'
                'list-effective:List the details of an Event Threat Detection effective custom module.'
                'update:Update an Event Threat Detection custom module.'
                'validate:Command to validate an ETD custom module.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc manage custom-modules sha')
            local -a commands
            commands=(
                'create:Create an Security Health Analytics custom module.'
                'delete:Delete a Security Health Analytics custom module.'
                'describe:Get the details of a Security Health Analytics custom module.'
                'describe-effective:Get effective the details of a Security Health Analytics effective custom module.'
                'list:List the details of Security Health Analyics custom modules.'
                'list-descendant:List the details of the resident and descendant Security Health Analytics custom modules.'
                'list-effective:List the details of an Security Health Analytics effective custom module.'
                'simulate:Command to simulate a SHA custom module.'
                'update:Update a Security Health Analytics custom module.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc manage services')
            local -a commands
            commands=(
                'describe:Get the details of a Security Command Center service.'
                'list:List the details of Security Command Center services.'
                'update:Update a Security Command Center service.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc muteconfigs')
            local -a commands
            commands=(
                'create:Create a Security Command Center mute config.'
                'delete:Delete a Security Command Center mute config.'
                'get:Get a Security Command Center mute config.'
                'list:ListSecurity Command Center mute configs.'
                'update:Update a Security Command Center mute config.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc notifications')
            local -a commands
            commands=(
                'create:Create a Security Command Center notification config.'
                'delete:Delete a Security Command Center notification config.'
                'describe:Describe a Security Command Center notification config.'
                'list:List Security Command Center notification configs.'
                'update:Update a Security Command Center notification config.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc operations')
            local -a commands
            commands=(
                'describe:Describe a Cloud SCC'\''s long running scan operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc posture-deployments')
            local -a commands
            commands=(
                'create:Create a Cloud Security Command Center \(SCC\) posture deployment.'
                'delete:Delete a Cloud Security Command Center \(SCC\) posture deployment.'
                'describe:Describe a Cloud Security Command Center \(SCC\) posture deployment.'
                'list:List the details of the Cloud Security Command Center \(SCC\) posture deployments.'
                'update:Update the given Cloud Security Command Center \(SCC\) posture deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc posture-operations')
            local -a commands
            commands=(
                'describe:Describe a Cloud Security Command Center \(SCC\) posture long running operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc posture-templates')
            local -a commands
            commands=(
                'describe:Describe a Cloud Security Command Center \(SCC\) posture template.'
                'list:List the details of the Cloud Security Command Center \(SCC\) posture templates.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc postures')
            local -a commands
            commands=(
                'create:Create a Cloud Security Command Center \(SCC\) posture.'
                'delete:Delete a Cloud Security Command Center \(SCC\) posture.'
                'describe:Describe a Cloud Security Command Center \(SCC\) posture.'
                'extract:Extract a Cloud Security Command Center \(SCC\) posture from a workload.'
                'list:Lists all the Cloud Security Command Center postures for an organization.'
                'list-revisions:List the revisions of a Cloud Security Command Center \(SCC\) posture.'
                'update:Update the given Cloud Security Command Center \(SCC\) posture.'
            )
            _describe 'command' commands
            ;;
        'gcloud scc sources')
            local -a commands
            commands=(
                'describe:Describe a source given its display name or source id.'
            )
            _describe 'command' commands
            ;;
        'gcloud scheduler')
            local -a commands
            commands=(
                'cmek-config:Manage CMEK configuration for Cloud Scheduler.'
                'jobs:Manage Cloud Scheduler jobs.'
                'locations:Get information about Cloud Scheduler locations.'
                'operations:Get information about Cloud Scheduler operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud scheduler cmek-config')
            local -a commands
            commands=(
                'describe:Get CMEK configuration for Cloud Scheduler in the specified location.'
                'update:Update CMEK configuration for Cloud Scheduler in the specified location.'
            )
            _describe 'command' commands
            ;;
        'gcloud scheduler jobs')
            local -a commands
            commands=(
                'create:Create Cloud Scheduler jobs for various types of targets.'
                'delete:Delete a job.'
                'describe:Show details about a job.'
                'list:List jobs.'
                'pause:Pause the execution of a job.'
                'resume:Resume execution of a paused job.'
                'run:Trigger an on-demand execution of a job.'
                'update:Update Cloud Scheduler jobs for various types of targets.'
            )
            _describe 'command' commands
            ;;
        'gcloud scheduler jobs create')
            local -a commands
            commands=(
                'app-engine:Create a Cloud Scheduler job with an App Engine target.'
                'http:Create a Cloud Scheduler job that triggers an action via HTTP.'
                'pubsub:Create a Cloud Scheduler job with a Pub/Sub target.'
            )
            _describe 'command' commands
            ;;
        'gcloud scheduler jobs update')
            local -a commands
            commands=(
                'app-engine:Update a Cloud Scheduler job with an App Engine target.'
                'http:Update a Cloud Scheduler job that triggers an action via HTTP.'
                'pubsub:Update a Cloud Scheduler job with a Pub/Sub target.'
            )
            _describe 'command' commands
            ;;
        'gcloud scheduler locations')
            local -a commands
            commands=(
                'describe:Show details about a location.'
                'list:Lists the locations where Cloud Scheduler is available.'
            )
            _describe 'command' commands
            ;;
        'gcloud scheduler operations')
            local -a commands
            commands=(
                'describe:Show the latest status of an operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud secrets')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a secret.'
                'create:Create a new secret.'
                'delete:Delete a secret.'
                'describe:Describe a secret'\''s metadata.'
                'get-iam-policy:Get the IAM policy for the secret.'
                'list:List all secret names.'
                'locations:Manage locations of users'\'' secrets.'
                'remove-iam-policy-binding:Remove IAM policy binding for a secret.'
                'replication:Manage secret replication.'
                'set-iam-policy:Set the IAM policy binding for a secret.'
                'update:Update a secret'\''s metadata.'
                'versions:Manage secret versions.'
            )
            _describe 'command' commands
            ;;
        'gcloud secrets locations')
            local -a commands
            commands=(
                'describe:Describe a location.'
                'list:List all available locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud secrets replication')
            local -a commands
            commands=(
                'get:Describe a secret'\''s replication.'
                'set:Set a secret'\''s replication.'
                'update:Update a secret replica'\''s metadata.'
            )
            _describe 'command' commands
            ;;
        'gcloud secrets versions')
            local -a commands
            commands=(
                'access:Access a secret version'\''s data.'
                'add:Create a new version of an existing secret.'
                'describe:Describe metadata about the secret version.'
                'destroy:Destroy a secret version'\''s metadata and secret data.'
                'disable:Disable the version of the provided secret.'
                'enable:Enable the version of the provided secret.'
                'list:List all versions for a secret.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-directory')
            local -a commands
            commands=(
                'endpoints:Manage Service Directory endpoints.'
                'locations:Manage Service Directory locations.'
                'namespaces:Manage Service Directory namespaces.'
                'services:Manage Service Directory services.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-directory endpoints')
            local -a commands
            commands=(
                'create:Creates an endpoint.'
                'delete:Deletes an endpoint.'
                'describe:Describes an endpoint.'
                'list:Lists endpoints.'
                'update:Updates an endpoint.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-directory locations')
            local -a commands
            commands=(
                'describe:Describes a location.'
                'list:Lists locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-directory namespaces')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds IAM policy binding to a namespace.'
                'create:Creates a namespace.'
                'delete:Deletes a namespace.'
                'describe:Describes a namespace.'
                'get-iam-policy:Gets IAM policy for a namespace.'
                'list:Lists namespaces.'
                'remove-iam-policy-binding:Removes IAM policy binding from a namespace.'
                'set-iam-policy:Sets IAM policy for a namespace.'
                'update:Updates a namespace.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-directory services')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds IAM policy binding to a service.'
                'create:Creates a service.'
                'delete:Deletes a service.'
                'describe:Describes a service.'
                'get-iam-policy:Gets IAM policy for a service.'
                'list:Lists services.'
                'remove-iam-policy-binding:Removes IAM policy binding from a service.'
                'resolve:Resolves a service.'
                'set-iam-policy:Sets IAM policy for a service.'
                'update:Updates a service.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-extensions')
            local -a commands
            commands=(
                'authz-extensions:Manage Service Extensions '\''AuthzExtension'\'' resources.'
                'lb-route-extensions:Manage Service Extensions '\''LbRouteExtension'\'' resources.'
                'lb-traffic-extensions:Manage Service Extensions '\''LbTrafficExtension'\'' resources.'
                'wasm-plugin-versions:Interact with and manage Service Extensions '\''WasmPluginVersions'\''.'
                'wasm-plugins:Interact with and manage Service Extensions '\''WasmPlugins'\''.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-extensions authz-extensions')
            local -a commands
            commands=(
                'delete:Delete an '\''AuthzExtension'\'' resource.'
                'describe:Describe an '\''AuthzExtension'\'' resource.'
                'import:Import an '\''AuthzExtension'\'' resource.'
                'list:List '\''AuthzExtension'\'' resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-extensions lb-route-extensions')
            local -a commands
            commands=(
                'delete:Delete an '\''LbRouteExtension'\'' resource.'
                'describe:Describe an '\''LbRouteExtension'\'' resource.'
                'import:Import an '\''LbRouteExtension'\'' resource.'
                'list:List '\''LbRouteExtension'\'' resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-extensions lb-traffic-extensions')
            local -a commands
            commands=(
                'delete:Delete an '\''LbTrafficExtension'\'' resource.'
                'describe:Describe an '\''LbTrafficExtension'\'' resource.'
                'import:Import an '\''LbTrafficExtension'\'' resource.'
                'list:List '\''LbTrafficExtension'\'' resources.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-extensions wasm-plugin-versions')
            local -a commands
            commands=(
                'create:Create a '\''WasmPluginVersion'\'' resource.'
                'delete:Delete a '\''WasmPluginVersion'\'' resource.'
                'describe:Show details about a '\''WasmPluginVersion'\'' resource.'
                'list:List all '\''WasmPluginVersion'\'' resources for a '\''WasmPlugin'\''.'
            )
            _describe 'command' commands
            ;;
        'gcloud service-extensions wasm-plugins')
            local -a commands
            commands=(
                'create:Create a '\''WasmPlugin'\'' resource.'
                'delete:Delete a '\''WasmPlugin'\'' resource.'
                'describe:Show details about a '\''WasmPlugin'\'' resource.'
                'list:List all '\''WasmPlugin'\'' resources.'
                'update:Update a '\''WasmPlugin'\'' resource.'
            )
            _describe 'command' commands
            ;;
        'gcloud services')
            local -a commands
            commands=(
                'api-keys:Manage API keys.'
                'disable:Disable a service for consumption for a project.'
                'enable:Enables a service for consumption for a project.'
                'list:List services for a project.'
                'operations:Manage Operation for various services.'
                'peered-dns-domains:Peered DNS domains for various private service connections.'
                'vpc-peerings:VPC Peerings to various services.'
            )
            _describe 'command' commands
            ;;
        'gcloud services api-keys')
            local -a commands
            commands=(
                'create:Create an API key.'
                'delete:Delete an API key.'
                'describe:Describe an API key'\''s metadata.'
                'get-key-string:Get the key string of an API key.'
                'list:Lists API keys.'
                'lookup:Look up resource name of a key string.'
                'undelete:Undelete an API key.'
                'update:Update an API key'\''s metadata.'
            )
            _describe 'command' commands
            ;;
        'gcloud services operations')
            local -a commands
            commands=(
                'describe:Describes an operation resource for a given operation name.'
                'wait:Waits for an operation to complete for a given operation name.'
            )
            _describe 'command' commands
            ;;
        'gcloud services peered-dns-domains')
            local -a commands
            commands=(
                'create:Create a peered DNS domain for a private service connection.'
                'delete:Delete a peered DNS domain for a private service connection.'
                'list:List the peered DNS domains for a private service connection.'
            )
            _describe 'command' commands
            ;;
        'gcloud services vpc-peerings')
            local -a commands
            commands=(
                'connect:Connect to a service via VPC peering for a project network.'
                'delete:Delete a private service connection to a service for a project network.'
                'disable-vpc-service-controls:Disable VPC Service Controls for the peering connection.'
                'enable-vpc-service-controls:Enable VPC Service Controls for the peering connection.'
                'get-vpc-service-controls:Get VPC state of Service Controls for the peering connection.'
                'list:List connections to a service via VPC peering for a project network.'
                'operations:Manage VPC Peering operations.'
                'update:Update a private service connection to a service for a project network.'
            )
            _describe 'command' commands
            ;;
        'gcloud services vpc-peerings operations')
            local -a commands
            commands=(
                'describe:Describes an operation resource for a given operation name.'
                'wait:Waits for an operation to complete  for a given operation name.'
            )
            _describe 'command' commands
            ;;
        'gcloud source')
            local -a commands
            commands=(
                'project-configs:Manage Cloud Source Repositories configuration of a project.'
                'repos:Manage cloud source repositories.'
            )
            _describe 'command' commands
            ;;
        'gcloud source project-configs')
            local -a commands
            commands=(
                'describe:Show details about the configuration of a project.'
                'update:Update the Cloud Source Repositories configuration of the current project.'
            )
            _describe 'command' commands
            ;;
        'gcloud source repos')
            local -a commands
            commands=(
                'clone:Clone a cloud source repository.'
                'create:Create a cloud source repository.'
                'delete:Delete a cloud source repository.'
                'describe:Describe a cloud source repository.'
                'get-iam-policy:Get the IAM policy for the named cloud source repository.'
                'list:List the repositories the currently active project.'
                'set-iam-policy:Set the IAM policy for the named repository.'
                'update:Update the configuration of a Cloud Source Repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud source-manager')
            local -a commands
            commands=(
                'instances:Manage Secure Source Manager instances.'
                'locations:Manage Secure Source Manager locations.'
                'operations:Manage Secure Source Manager operations.'
                'repos:Manage Secure Source Manager repositories.'
            )
            _describe 'command' commands
            ;;
        'gcloud source-manager instances')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Secure Source Manager instance.'
                'create:Create a Secure Source Manager instance.'
                'delete:Delete a Secure Source Manager instance.'
                'describe:Describe a Secure Source Manager instance.'
                'get-iam-policy:Get the IAM policy for a Secure Source Manager instance.'
                'list:List Secure Source Manager instances.'
                'remove-iam-policy-binding:Remove an IAM policy binding to a Secure Source Manager instance.'
                'set-iam-policy:Set the IAM policy for a Secure Source Manager instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud source-manager locations')
            local -a commands
            commands=(
                'list:List Secure Source Manager locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud source-manager operations')
            local -a commands
            commands=(
                'describe:Describe a Secure Source Manager operation.'
                'list:List Secure Source Manager operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud source-manager repos')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a Secure Source Manager repository.'
                'create:Create a Secure Source Manager repository.'
                'delete:Delete a Secure Source Manager repository.'
                'describe:Describe a Secure Source Manager repository.'
                'get-iam-policy:Get the IAM policy for a Secure Source Manager repository.'
                'list:List all repositories under a Secure Source Manager instance.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a Secure Source Manager repository.'
                'set-iam-policy:Set the IAM policy for a Secure Source Manager repository.'
                'update:Update a Secure Source Manager repository.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner')
            local -a commands
            commands=(
                'backup-schedules:Manage Cloud Spanner backup schedules.'
                'backups:Manage Cloud Spanner backups.'
                'cli:An interactive shell for Spanner.'
                'databases:Manage Cloud Spanner databases.'
                'instance-configs:Manage Cloud Spanner instance configs.'
                'instance-partitions:Manage Spanner instance partitions.'
                'instances:Manage Cloud Spanner instances.'
                'operations:Manage Cloud Spanner operations.'
                'rows:Manage the rows in Cloud Spanner databases.'
                'samples:Cloud Spanner sample apps.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner backup-schedules')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Cloud Spanner backup schedule.'
                'create:Create a Cloud Spanner backup schedule.'
                'delete:Delete a Cloud Spanner backup schedule.'
                'describe:Describe a Cloud Spanner backup schedule.'
                'get-iam-policy:Get the IAM policy for a Cloud Spanner backup schedule.'
                'list:List Cloud Spanner backup schedules.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Cloud Spanner backup schedule.'
                'set-iam-policy:Set the IAM policy for a Cloud Spanner backup schedule.'
                'update:Update a Cloud Spanner backup schedule.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner backups')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Cloud Spanner backup.'
                'copy:Copies a backup of a Cloud Spanner database.'
                'create:Creates a backup of a Cloud Spanner database.'
                'delete:Delete an existing backup.'
                'describe:Retrieves information about a backup.'
                'get-iam-policy:Get the IAM policy for a Cloud Spanner backup.'
                'list:List existing Cloud Spanner Cloud Spanner backups.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Cloud Spanner backup.'
                'set-iam-policy:Set the IAM policy for a Cloud Spanner backup.'
                'update-metadata:Updates the metadata of a Cloud Spanner a backup.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner databases')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Cloud Spanner database.'
                'change-quorum:Change quorum of a Cloud Spanner database.'
                'create:Create a Cloud Spanner database.'
                'ddl:Manage the DDL for Cloud Spanner databases.'
                'delete:Delete a Cloud Spanner database.'
                'describe:Describe a Cloud Spanner database.'
                'execute-sql:Executes a SQL query against a Cloud Spanner database.'
                'get-iam-policy:Get the IAM policy for a Cloud Spanner database.'
                'list:List the Cloud Spanner databases contained within the given instance.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Cloud Spanner database.'
                'restore:Restore a Cloud Spanner database.'
                'roles:Manage Cloud Spanner database roles.'
                'sessions:Manage the sessions for Cloud Spanner databases.'
                'set-iam-policy:Set the IAM policy for a Cloud Spanner database.'
                'splits:Manage the split points for Spanner databases.'
                'update:Update a Cloud Spanner database.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner databases ddl')
            local -a commands
            commands=(
                'describe:Describe the DDL for a Cloud Spanner database.'
                'update:Update the DDL for a Cloud Spanner database.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner databases roles')
            local -a commands
            commands=(
                'list:List the Cloud Spanner database roles defined in the given database.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner databases sessions')
            local -a commands
            commands=(
                'delete:Delete a Cloud Spanner session.'
                'list:List the Cloud Spanner sessions contained within the given database.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner databases splits')
            local -a commands
            commands=(
                'add:Add split points to a  Spanner database.'
                'list:List split points that are added by a user to a Spanner database.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner instance-configs')
            local -a commands
            commands=(
                'create:Create a Cloud Spanner instance configuration.'
                'delete:Delete a Cloud Spanner instance configuration.'
                'describe:Describe a Cloud Spanner instance configuration.'
                'list:List the available Cloud Spanner instance configurations.'
                'update:Update a Cloud Spanner instance configuration.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner instance-partitions')
            local -a commands
            commands=(
                'create:Create a Spanner instance partition.'
                'delete:Delete a Spanner instance partition. You can'\''t delete the default instance partition using this command.'
                'describe:Describe a Spanner instance partition.'
                'list:List the Spanner instance partitions contained within the given instance.'
                'update:Update a Spanner instance partition. You can'\''t update the default instance partition using this command.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner instances')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding to a Cloud Spanner instance.'
                'create:Create a Cloud Spanner instance.'
                'delete:Delete a Cloud Spanner instance.'
                'describe:Describe a Cloud Spanner instance.'
                'get-iam-policy:Get the IAM policy for a Cloud Spanner instance.'
                'get-locations:Get the location of every replica in a Cloud Spanner instance.'
                'list:List the Cloud Spanner instances in this project.'
                'move:Move the Cloud Spanner instance to the specified instance configuration.'
                'remove-iam-policy-binding:Remove IAM policy binding of a Cloud Spanner instance.'
                'set-iam-policy:Set the IAM policy for a Cloud Spanner instance.'
                'update:Update a Cloud Spanner instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner operations')
            local -a commands
            commands=(
                'cancel:Cancel a Cloud Spanner operation.'
                'describe:Describe a Cloud Spanner operation.'
                'list:List the Cloud Spanner operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner rows')
            local -a commands
            commands=(
                'delete:Delete a row in a Cloud Spanner database.'
                'insert:Insert a row in a Cloud Spanner database.'
                'update:Update a row in a Cloud Spanner database.'
            )
            _describe 'command' commands
            ;;
        'gcloud spanner samples')
            local -a commands
            commands=(
                'backend:Run the backend gRPC service for the given Cloud Spanner sample app.'
                'init:Initialize a Cloud Spanner sample app.'
                'list:List available sample applications.'
                'run:Run the given Cloud Spanner sample app.'
                'workload:Generate gRPC traffic for a given sample app'\''s backend service.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql')
            local -a commands
            commands=(
                'backups:Provide commands for working with backups of Cloud SQL instances.'
                'connect:Connects to a Cloud SQL instance.'
                'databases:Provide commands for managing databases of Cloud SQL instances.'
                'export:Provide commands to export Cloud SQL instances.'
                'flags:Provide a command to list flags.'
                'generate-login-token:Generate an IAM login token for Cloud SQL.'
                'import:Provides commands to import Cloud SQL instances.'
                'instances:Provide commands for managing Cloud SQL instances.'
                'operations:Provide commands for working with Cloud SQL instance operations.'
                'reschedule-maintenance:Reschedule a Cloud SQL instance'\''s maintenance.'
                'ssl:Provide commands for managing SSL certificates of Cloud SQL instances.'
                'ssl-certs:\(DEPRECATED\)  Provide commands for managing SSL certificates of Cloud SQL instances.'
                'tiers:Provide a command to list tiers.'
                'users:Provide commands for managing Cloud SQL users.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql backups')
            local -a commands
            commands=(
                'create:Creates a backup of a Cloud SQL instance.'
                'delete:Delete a backup of a Cloud SQL instance.'
                'describe:Retrieves information about a backup.'
                'list:Lists all backups associated with the project or a given instance.'
                'patch:Update the Final backup of a Cloud SQL project.'
                'restore:Restores a backup of a Cloud SQL instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql databases')
            local -a commands
            commands=(
                'create:Creates a database for a Cloud SQL instance.'
                'delete:Deletes a Cloud SQL database.'
                'describe:Displays configuration and metadata about a Cloud SQL database.'
                'list:Lists databases for a Cloud SQL instance.'
                'patch:Patches the settings of a Cloud SQL database.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql export')
            local -a commands
            commands=(
                'bak:Export data from a Cloud SQL instance to a BAK file.'
                'csv:Exports data from a Cloud SQL instance to a CSV file.'
                'sql:Exports data from a Cloud SQL instance to a SQL file.'
                'tde:Export a TDE certificate from a Cloud SQL for SQL Server instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql flags')
            local -a commands
            commands=(
                'list:List customizable flags for Google Cloud SQL instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql import')
            local -a commands
            commands=(
                'bak:Import data into a Cloud SQL instance from a BAK file.'
                'csv:Imports data into a Cloud SQL instance from a CSV file.'
                'sql:Imports data into a Cloud SQL instance from a SQL dump file.'
                'tde:Import TDE certificate into a Cloud SQL for SQL Server instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql instances')
            local -a commands
            commands=(
                'acquire-ssrs-lease:Acquires a SQL Server Reporting Services lease on a Cloud SQL instance.'
                'clone:Clones a Cloud SQL instance.'
                'create:Creates a new Cloud SQL instance.'
                'delete:Deletes a Cloud SQL instance.'
                'describe:Displays configuration and metadata about a Cloud SQL instance.'
                'export:\(DEPRECATED\)  Exports data from a Cloud SQL instance.'
                'failover:Causes a high-availability Cloud SQL instance to failover.'
                'get-latest-recovery-time:Displays the latest recovery time to which a Cloud SQL instance can be restored to.'
                'import:\(DEPRECATED\)  Imports data into a Cloud SQL instance from Google Cloud Storage.'
                'list:Lists Cloud SQL instances in a given project.'
                'patch:Updates the settings of a Cloud SQL instance.'
                'pre-check-major-version-upgrade:Performs pre-checks for a major version upgrade of a Cloud SQL instance.'
                'promote-replica:Promotes Cloud SQL read replica to a stand-alone instance.'
                'reencrypt:Reencrypts a Cloud SQL CMEK instance.'
                'release-ssrs-lease:Releases a SQL Server Reporting Services lease on a Cloud SQL instance.'
                'reset-ssl-config:Reset SSL materials according to the reset SSL mode.'
                'restart:Restarts a Cloud SQL instance.'
                'restore-backup:Restores a backup of a Cloud SQL instance.'
                'switchover:Switches over a Cloud SQL instance to one of its replicas.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql operations')
            local -a commands
            commands=(
                'cancel:Cancels a Cloud SQL instance operation.'
                'describe:Retrieves information about a Cloud SQL instance operation.'
                'list:Lists all instance operations for the given Cloud SQL instance.'
                'wait:Waits for one or more operations to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql ssl')
            local -a commands
            commands=(
                'client-certs:Provide commands for managing client certificates of Cloud SQL instances.'
                'server-ca-certs:Provide commands for managing server CA certs of Cloud SQL instances.'
                'server-certs:Provide commands for managing server certificates of Cloud SQL instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql ssl client-certs')
            local -a commands
            commands=(
                'create:Create a client certificate for a Cloud SQL instance.'
                'delete:Delete a client certificate for a Cloud SQL instance.'
                'describe:Retrieve information about a client cert for a Cloud SQL instance.'
                'list:List all client certs for a Cloud SQL instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql ssl server-ca-certs')
            local -a commands
            commands=(
                'create:Create a server CA cert for a Cloud SQL instance.'
                'list:List all server CA certs for a Cloud SQL instance.'
                'rollback:Roll back to the previous server CA cert for a Cloud SQL instance.'
                'rotate:Rotate in the upcoming server CA cert for a Cloud SQL instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql ssl server-certs')
            local -a commands
            commands=(
                'create:Create a server certificate for a Cloud SQL instance.'
                'list:List all server certificates for a Cloud SQL instance.'
                'rollback:Roll back to the previous server certificate for a Cloud SQL instance.'
                'rotate:Rotate in the upcoming server certificate for a Cloud SQL instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql ssl-certs')
            local -a commands
            commands=(
                'create:\(DEPRECATED\)  Creates an SSL certificate for a Cloud SQL instance.'
                'delete:\(DEPRECATED\)  Deletes an SSL certificate for a Cloud SQL instance.'
                'describe:\(DEPRECATED\)  Retrieves information about an SSL cert for a Cloud SQL instance.'
                'list:\(DEPRECATED\)  Lists all SSL certs for a Cloud SQL instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql tiers')
            local -a commands
            commands=(
                'list:Lists all available service tiers for Google Cloud SQL.'
            )
            _describe 'command' commands
            ;;
        'gcloud sql users')
            local -a commands
            commands=(
                'assign-roles:Updates a user'\''s database roles in a given instance.'
                'create:Creates a user in a given instance.'
                'delete:Deletes a Cloud SQL user in a given instance.'
                'describe:Retrieves information about a Cloud SQL user in a given instance.'
                'list:Lists Cloud SQL users in a given instance.'
                'set-password:Changes a user'\''s password in a given instance.'
                'set-password-policy:Replaces a user'\''s password policy in a given instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage')
            local -a commands
            commands=(
                'batch-operations:Manage Cloud Storage batch operations.'
                'buckets:Manage Cloud Storage buckets.'
                'cat:Outputs the contents of one or more URLs to stdout.'
                'cp:Upload, download, and copy Cloud Storage objects.'
                'diagnose:Diagnose Google Cloud Storage.'
                'du:Displays the amount of space in bytes used by storage resources.'
                'folders:Manage Cloud Storage folders.'
                'hash:Calculates hashes on local or cloud files.'
                'hmac:Manage Cloud Storage service account HMAC keys.'
                'insights:Manage Cloud Storage inventory reports.'
                'ls:List Cloud Storage buckets and objects.'
                'managed-folders:Manage Cloud Storage managed folders.'
                'mv:Moves or renames objects.'
                'objects:Manage Cloud Storage objects.'
                'operations:Manage storage operations.'
                'restore:Restore one or more soft-deleted objects.'
                'rm:Delete objects and buckets.'
                'rsync:Synchronize content of two buckets/directories.'
                'service-agent:Manage a project'\''s Cloud Storage service agent, which is used to perform Cloud KMS operations.'
                'sign-url:Generate a URL with embedded authentication that can be used by anyone.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage batch-operations')
            local -a commands
            commands=(
                'jobs:Manage Cloud Storage batch operations jobs.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage batch-operations jobs')
            local -a commands
            commands=(
                'cancel:Cancel a batch-operations job.'
                'create:Create a new batch operation job.'
                'delete:Delete a batch-operations job.'
                'describe:Describe a batch-operations job.'
                'list:List batch-operations jobs.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage buckets')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a bucket.'
                'anywhere-caches:Manage Cloud Storage Anywhere Caches.'
                'create:Create buckets for storing objects.'
                'delete:Deletes Cloud Storage buckets.'
                'describe:Describes Cloud Storage buckets.'
                'get-iam-policy:Get the IAM policy for a bucket.'
                'list:Lists Cloud Storage buckets.'
                'notifications:Manage Cloud Storage bucket notifications.'
                'relocate:Relocates bucket between different locations.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a bucket.'
                'set-iam-policy:Set the IAM policy for a bucket.'
                'update:Update bucket settings.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage buckets anywhere-caches')
            local -a commands
            commands=(
                'create:Create Anywhere Cache instances for a bucket.'
                'describe:Returns details of Anywhere Cache instance of a bucket.'
                'disable:Disable Anywhere Cache instances.'
                'list:List all Anywhere Cache instances of a bucket.'
                'pause:Pause Anywhere Cache instances.'
                'resume:Resume Anywhere Cache instances.'
                'update:Update Anywhere Cache instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage buckets notifications')
            local -a commands
            commands=(
                'create:Create a notification configuration on a bucket.'
                'delete:Delete notification configurations from a bucket.'
                'describe:Show metadata for a notification configuration.'
                'list:List the notification configurations belonging to a given bucket.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage folders')
            local -a commands
            commands=(
                'create:Create folders for hierarchical namespace bucket.'
                'delete:Delete folders.'
                'describe:Describe hierarchical namesapace bucket folders.'
                'list:List folders.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage hmac')
            local -a commands
            commands=(
                'create:Add a service account HMAC.'
                'delete:Remove a service account HMAC.'
                'describe:Describes a service account HMAC key.'
                'list:List service account HMAC keys.'
                'update:Change the status of a service account HMAC.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage insights')
            local -a commands
            commands=(
                'inventory-reports:Manage Cloud Storage inventory report configurations.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage insights inventory-reports')
            local -a commands
            commands=(
                'create:Create a new inventory report config.'
                'delete:Delete an inventory report config.'
                'describe:Describe an inventory report config.'
                'details:Retrieve details of inventory reports.'
                'list:Lists all inventory report configs.'
                'update:Update an inventory report config.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage insights inventory-reports details')
            local -a commands
            commands=(
                'describe:Describe inventory reports detail.'
                'list:List inventory report details.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage managed-folders')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add an IAM policy binding to a managed folder.'
                'create:Create managed folders.'
                'delete:Delete managed folders.'
                'describe:Describe managed folders.'
                'get-iam-policy:Get the IAM policy for a managed folder.'
                'list:List managed folders.'
                'remove-iam-policy-binding:Remove an IAM policy binding from a managed folder.'
                'set-iam-policy:Set the IAM policy for a managed folder.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage objects')
            local -a commands
            commands=(
                'add-iam-policy-binding:Grant a principal access to an object.'
                'compose:Concatenate a sequence of objects into a new composite object.'
                'describe:Describe a Cloud Storage object.'
                'get-iam-policy:Get the access policy for an object.'
                'list:Lists Cloud Storage objects.'
                'remove-iam-policy-binding:Remove an IAM policy binding from an object.'
                'set-iam-policy:Set access policy for an object.'
                'update:Update Cloud Storage objects.'
            )
            _describe 'command' commands
            ;;
        'gcloud storage operations')
            local -a commands
            commands=(
                'cancel:Cancel a storage operation.'
                'describe:Get configuration and latest storage operation details.'
                'list:List storage operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud tasks')
            local -a commands
            commands=(
                'buffer:Buffers a task into a queue.'
                'cmek-config:Get or change CMEK configuration for Cloud Tasks.'
                'create-app-engine-task:Create and add a task that targets App Engine.'
                'create-http-task:Create and add a task that targets a HTTP endpoint.'
                'delete:Delete a task from a queue.'
                'describe:Show details about a task.'
                'list:List tasks.'
                'locations:Get information about Cloud Tasks locations.'
                'queues:Manage Cloud Tasks queues.'
                'run:Force a task to run now.'
            )
            _describe 'command' commands
            ;;
        'gcloud tasks cmek-config')
            local -a commands
            commands=(
                'describe:Get CMEK configuration for Cloud Tasks in the specified location.'
                'update:Enable, disable, or edit CMEK configuration for Cloud Tasks in the specified location.'
            )
            _describe 'command' commands
            ;;
        'gcloud tasks locations')
            local -a commands
            commands=(
                'describe:Show details about a location.'
                'list:Lists the locations where Cloud Tasks is available.'
            )
            _describe 'command' commands
            ;;
        'gcloud tasks queues')
            local -a commands
            commands=(
                'add-iam-policy-binding:Add IAM policy binding for a tasks queue.'
                'create:Create a Cloud Tasks queue.'
                'delete:Delete a queue.'
                'describe:Show details about a queue.'
                'get-iam-policy:Get the IAM policy for a queue.'
                'list:List all queues.'
                'pause:Pause a queue.'
                'purge:Purge a queue by deleting all of its tasks.'
                'remove-iam-policy-binding:Remove IAM policy binding of tasks queue.'
                'resume:Request to resume a paused or disabled queue.'
                'set-iam-policy:Set the IAM policy for a queue.'
                'update:Update a Cloud Tasks queue.'
            )
            _describe 'command' commands
            ;;
        'gcloud telco-automation')
            local -a commands
            commands=(
                'operations:Command group for working with telco automation operations.'
                'orchestration-cluster:Manage telco automation orchestration cluster instances.'
            )
            _describe 'command' commands
            ;;
        'gcloud telco-automation operations')
            local -a commands
            commands=(
                'describe:Get description of a long-running telco automation operation.'
                'wait:Poll long-running telco automation operation until it completes.'
            )
            _describe 'command' commands
            ;;
        'gcloud telco-automation orchestration-cluster')
            local -a commands
            commands=(
                'create:Create a telco automation orchestration cluster.'
                'delete:Delete a telco automation orchestration cluster.'
                'describe:Show details about the orchestration cluster.'
                'list:List telco automation orchestration clusters.'
            )
            _describe 'command' commands
            ;;
        'gcloud topic')
            local -a commands
            commands=(
                'accessibility:Reference for '\''Accessibility'\'' features.'
                'arg-files:Supplementary help for arg-files to be used with gcloud firebase test.'
                'cli-trees:CLI trees supplementary help.'
                'client-certificate:Client certificate authorization supplementary help.'
                'command-conventions:gcloud command conventions supplementary help.'
                'configurations:Supplementary help for named configurations.'
                'datetimes:Date/time input format supplementary help.'
                'endpoint-override:gcloud endpoint override supplementary help.'
                'escaping:List/dictionary-type argument escaping supplementary help.'
                'filters:Resource filters supplementary help.'
                'flags-file:--flags-file=YAMLFILE supplementary help.'
                'formats:Resource formats supplementary help.'
                'gcloudignore:Reference for '\''.gcloudignore'\'' files.'
                'offline-help:Setting up gcloud command offline help.'
                'projections:Resource projections supplementary help.'
                'resource-keys:Resource keys supplementary help.'
                'startup:Supplementary help for gcloud startup options.'
                'uninstall:Supplementary help for uninstalling Google Cloud CLI.'
            )
            _describe 'command' commands
            ;;
        'gcloud transcoder')
            local -a commands
            commands=(
                'jobs:Manage Cloud Transcoder jobs.'
                'templates:Manage Cloud Transcoder job templates.'
            )
            _describe 'command' commands
            ;;
        'gcloud transcoder jobs')
            local -a commands
            commands=(
                'create:Create Transcoder jobs.'
                'delete:Delete transcoder jobs.'
                'describe:Describe transcoder jobs.'
                'list:List transcoder jobs.'
            )
            _describe 'command' commands
            ;;
        'gcloud transcoder templates')
            local -a commands
            commands=(
                'create:Create Transcoder job templates.'
                'delete:Delete transcoder job templates.'
                'describe:Describe transcoder job templates.'
                'list:List transcoder job templates.'
            )
            _describe 'command' commands
            ;;
        'gcloud transfer')
            local -a commands
            commands=(
                'agent-pools:Manage on-premise transfer agent pools.'
                'agents:Manage Transfer Service agents.'
                'authorize:Authorize an account for all Transfer Service features.'
                'jobs:Manage transfer jobs.'
                'operations:Manage transfer operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud transfer agent-pools')
            local -a commands
            commands=(
                'create:Create a Transfer Service agent pool.'
                'delete:Delete a Transfer Service agent pool.'
                'describe:Get details about a specific agent pool.'
                'list:List Transfer Service transfer agent pools.'
                'update:Update a Transfer Service agent pool.'
            )
            _describe 'command' commands
            ;;
        'gcloud transfer agents')
            local -a commands
            commands=(
                'delete:Delete Transfer Service transfer agents.'
                'install:Install Transfer Service agents.'
            )
            _describe 'command' commands
            ;;
        'gcloud transfer jobs')
            local -a commands
            commands=(
                'create:Create a Transfer Service transfer job.'
                'delete:Delete a Transfer Service transfer job.'
                'describe:Get configuration and latest operation details about transfer job.'
                'list:List Transfer Service transfer jobs.'
                'monitor:Track progress in real time for a transfer job'\''s latest operation.'
                'run:Run a Transfer Service transfer job.'
                'update:Update a Transfer Service transfer job.'
            )
            _describe 'command' commands
            ;;
        'gcloud transfer operations')
            local -a commands
            commands=(
                'cancel:Cancel a transfer operation.'
                'describe:Get configuration and latest transfer operation details.'
                'list:List Transfer Service transfer operations.'
                'monitor:Track progress in real time for a transfer operation.'
                'pause:Pause a currently running transfer operation.'
                'resume:Resume a currently paused transfer operation.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware')
            local -a commands
            commands=(
                'announcements:Manage announcements in Google Cloud VMware Engine.'
                'dns-bind-permission:Manage DNS binding permission in Google Cloud VMware Engine.'
                'locations:List locations in Google Cloud VMware Engine.'
                'network-peerings:Manage VMware Engine VPC peering using Google Cloud VMware Engine.'
                'network-policies:Manage VMware Engine network policies in Google Cloud VMware Engine.'
                'networks:Manage VMware Engine networks in Google Cloud VMware Engine.'
                'node-types:Show node types in Google Cloud VMware Engine.'
                'operations:List and describe operations in Google Cloud VMware Engine.'
                'private-clouds:Manage private clouds in Google Cloud VMware Engine.'
                'private-connections:Manage Private Connections in Google Cloud VMware Engine.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware announcements')
            local -a commands
            commands=(
                'list:List announcements in a Google Cloud VMware Engine.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware dns-bind-permission')
            local -a commands
            commands=(
                'describe:Get all users and service accounts having bind permission.'
                'grant:Grants a DNS Bind Permission.'
                'revoke:Revokes a DNS Bind Permission.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware locations')
            local -a commands
            commands=(
                'list:List Google Cloud VMware Engine locations.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware network-peerings')
            local -a commands
            commands=(
                'create:Create a VMware Engine VPC network peering.'
                'delete:Delete a Google Cloud VMware Engine VPC network peering.'
                'describe:Describe a Google Cloud VMware Engine VPC network peering.'
                'list:List Google Cloud VMware Engine VPC network peerings.'
                'routes:Manage VMware Engine VPC peering routes using Google Cloud VMware Engine.'
                'update:Update a Google Cloud VMware Engine VPC network peering.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware network-peerings routes')
            local -a commands
            commands=(
                'list:List Google Cloud VMware Engine VPC network peering routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware network-policies')
            local -a commands
            commands=(
                'create:Create a VMware Engine network policy.'
                'delete:Delete a VMware Engine network policy.'
                'describe:Describe a VMware Engine network policy.'
                'external-access-rules:Manage VMware Engine external access firewall rules in Google Cloud VMware Engine.'
                'list:List VMware Engine network policies.'
                'update:Update a VMware Engine network policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware network-policies external-access-rules')
            local -a commands
            commands=(
                'create:Create a VMware Engine external access firewall rule.'
                'delete:Delete a VMware Engine external access rule.'
                'describe:Describe a VMware Engine external access rule.'
                'list:List VMware Engine external access rules.'
                'update:Update a VMware Engine network policy.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware networks')
            local -a commands
            commands=(
                'create:Create a Google Cloud VMware Engine network.'
                'delete:Delete a Google Cloud VMware Engine network.'
                'describe:Describe a Google Cloud VMware Engine network.'
                'list:List Google Cloud VMware Engine networks.'
                'update:Update a Google Cloud VMware Engine network.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware node-types')
            local -a commands
            commands=(
                'describe:Display data associated with a Google Cloud VMware Engine node type.'
                'list:List supported Google Cloud VMware Engine node types.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware operations')
            local -a commands
            commands=(
                'describe:Describe a Google Cloud VMware Engine operation.'
                'list:List Google Cloud VMware Engine operations.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds')
            local -a commands
            commands=(
                'clusters:Manage clusters in Google Cloud VMware Engine.'
                'create:Create a VMware Engine private cloud.'
                'delete:Delete a Google Cloud VMware Engine private cloud.'
                'delete-now:Permanent deletion of a Google Cloud VMware Engine private cloud currently in soft-deleted state.'
                'describe:Describe a Google Cloud VMware Engine private cloud.'
                'dns-forwarding:Manage dns-forwarding in Google Cloud VMware Engine.'
                'external-addresses:Manage external IP addresses in Google Cloud VMware Engine.'
                'hcx:Manage HCX using Google Cloud VMware Engine.'
                'identity-sources:Manage identity sources in Google Cloud VMware Engine.'
                'list:List Google Cloud VMware Engine private clouds.'
                'logging-servers:Manage logging-server in Google Cloud VMware Engine.'
                'management-dns-zone-bindings:Manage Management DNS zone bindings in Google Cloud VMware Engine.'
                'nsx:Manage NSX using Google Cloud VMware Engine.'
                'subnets:Manage vmware subnets in Google Cloud VMware Engine.'
                'undelete:Cancel deletion of a Google Cloud VMware Engine private cloud.'
                'update:Update a Google Cloud VMware Engine private cloud.'
                'upgrades:Manage upgrades in Google Cloud VMware Engine.'
                'vcenter:Manage vCenter resources in Google Cloud VMware Engine.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds clusters')
            local -a commands
            commands=(
                'create:Create a Google Cloud VMware Engine cluster.'
                'delete:Delete a Google Cloud VMware Engine cluster.'
                'describe:Describe a Google Cloud VMware Engine cluster.'
                'list:List clusters in a Google Cloud VMware Engine private cloud.'
                'nodes:Manage nodes in Google Cloud VMware Engine.'
                'update:Update a Google Cloud VMware Engine cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds clusters nodes')
            local -a commands
            commands=(
                'describe:Describe a Google Cloud VMware Engine node.'
                'list:List nodes in a Google Cloud VMware Engine private cloud'\''s cluster.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds dns-forwarding')
            local -a commands
            commands=(
                'describe:Describe a Google Cloud VMware Engine dns-forwarding.'
                'update:Update a Google Cloud VMware Engine dns-forwarding.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds external-addresses')
            local -a commands
            commands=(
                'create:Create an external IP address.'
                'delete:Delete external IP address from a VMware Engine private cloud.'
                'describe:Describe an external IP address in a VMware Engine private cloud.'
                'list:List external IP addresses in a VMware Engine private cloud.'
                'update:Update an external IP address in a VMware Engine private cloud.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds hcx')
            local -a commands
            commands=(
                'activationkeys:Manage VMware HCX activation keys using Google Cloud VMware Engine.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds hcx activationkeys')
            local -a commands
            commands=(
                'create:Create a Google Cloud VMware HCX activation key.'
                'describe:Describe a Google Cloud VMware HCX activation key.'
                'list:List HCX activation keys in a Google Cloud VMware Engine private cloud.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds identity-sources')
            local -a commands
            commands=(
                'create:Create a Google Cloud VMware Engine identity source.'
                'delete:Delete a Google Cloud VMware Engine identity source.'
                'describe:Describe a Google Cloud VMware Engine identity source.'
                'list:List Google Cloud VMware Engine identity sources in a given private cloud.'
                'update:Update a Google Cloud VMware Engine identity source.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds logging-servers')
            local -a commands
            commands=(
                'create:Create a Google Cloud VMware Engine logging-server.'
                'delete:Delete logging-server from a VMware Engine private cloud.'
                'describe:Describe a Google Cloud VMware Engine logging-server.'
                'list:List logging-server in a Google Cloud VMware Engine private cloud.'
                'update:Update a Google Cloud VMware Engine logging-server.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds management-dns-zone-bindings')
            local -a commands
            commands=(
                'create:Create a management DNS zone binding.'
                'delete:Delete a management DNS zone binding.'
                'describe:Describe a management DNS zone binding.'
                'list:List management DNS zone bindings in a VMware Engine private cloud.'
                'repair:Repair a management DNS zone binding.'
                'update:Update a management DNS zone binding.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds nsx')
            local -a commands
            commands=(
                'credentials:Manage VMware NSX credentials using Google Cloud VMware Engine.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds nsx credentials')
            local -a commands
            commands=(
                'describe:Retrieve VMware NSX sign-in credentials associated with a Google Cloud VMware Engine private cloud.'
                'reset:Reset VMware NSX sign-in credentials associated with a Google Cloud VMware Engine private cloud.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds subnets')
            local -a commands
            commands=(
                'describe:Describe a subnet in a VMware Engine private cloud.'
                'list:List subnets in a VMware Engine private cloud.'
                'update:Update a subnet.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds upgrades')
            local -a commands
            commands=(
                'describe:Describe a Google Cloud VMware Engine upgrades.'
                'list:List upgrades for a Google Cloud VMware Engine private cloud.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds vcenter')
            local -a commands
            commands=(
                'credentials:Manage VMware vCenter credentials using Google Cloud VMware Engine.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-clouds vcenter credentials')
            local -a commands
            commands=(
                'describe:Describe Google Cloud VMware Engine vCenter credentials.'
                'reset:Reset VMware vCenter sign-in credentials associated with a Google Cloud VMware Engine private cloud.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-connections')
            local -a commands
            commands=(
                'create:Create a Google Cloud Private Connection.'
                'delete:Delete a Google Cloud Private Connection.'
                'describe:Describe a Google Cloud Private Connection.'
                'list:List Google Cloud Private Connections.'
                'routes:Manage private connection peering routes in Google Cloud VMware Engine.'
                'update:Update a Google Cloud Private Connection.'
            )
            _describe 'command' commands
            ;;
        'gcloud vmware private-connections routes')
            local -a commands
            commands=(
                'list:List Google Cloud private connection peering routes.'
            )
            _describe 'command' commands
            ;;
        'gcloud workbench')
            local -a commands
            commands=(
                'instances:Workbench Instances command group.'
            )
            _describe 'command' commands
            ;;
        'gcloud workbench instances')
            local -a commands
            commands=(
                'add-iam-policy-binding:Adds IAM policy binding for a workbench instance.'
                'check-instance-upgradability:Checks if a workbench instance is upgradeable.'
                'create:Creates a workbench instance.'
                'delete:Deletes a workbench instance.'
                'describe:Describes a workbench instance.'
                'diagnose:Diagnoses a workbench instance.'
                'get-config:Describes the valid configurations for workbench instances.'
                'get-iam-policy:Gets IAM policy for a workbench instance.'
                'list:Lists workbench instances.'
                'remove-iam-policy-binding:Removes IAM policy binding for a workbench instance.'
                'reset:Resets a workbench instance.'
                'resize-disk:Resizes the workbench instance'\''s disk.'
                'restore:Restores the workbench instance to a snapshot state.'
                'rollback:Rolls back a workbench instance.'
                'set-iam-policy:Sets the IAM policy for a workbench instance.'
                'start:Starts a workbench instance.'
                'stop:Stops a workbench instance.'
                'update:Updates a workbench instance.'
                'upgrade:Upgrades a workbench instance.'
            )
            _describe 'command' commands
            ;;
        'gcloud workflows')
            local -a commands
            commands=(
                'delete:Delete a workflow.'
                'deploy:Create or update a workflow.'
                'describe:Show metadata for a workflow.'
                'execute:Execute a workflow.'
                'executions:Manage your Cloud Workflow execution resources.'
                'list:List workflows.'
                'run:Execute a workflow and wait for the execution to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud workflows executions')
            local -a commands
            commands=(
                'cancel:Cancel a workflow execution.'
                'describe:Show metadata for a workflow execution.'
                'describe-last:Show metadata for the last cached workflow execution.'
                'list:List workflow executions.'
                'wait:Wait for an execution to complete.'
                'wait-last:Wait for the last cached workflow execution to complete.'
            )
            _describe 'command' commands
            ;;
        'gcloud workspace-add-ons')
            local -a commands
            commands=(
                'deployments:Manage Google Workspace Add-ons Deployments.'
                'get-authorization:Gets the authorization information for deployments in a given project.'
            )
            _describe 'command' commands
            ;;
        'gcloud workspace-add-ons deployments')
            local -a commands
            commands=(
                'create:Create a Google Workspace Add-ons deployment.'
                'delete:Delete a Google Workspace Add-ons deployment.'
                'describe:Describe a Google Workspace Add-ons deployment.'
                'install:Install a Google Workspace Add-ons deployment.'
                'install-status:Get the install status of a Google Workspace Add-ons deployment.'
                'list:List Google Workspace Add-ons deployments.'
                'replace:Replace a Google Workspace Add-ons deployment.'
                'uninstall:Uninstall a Google Workspace Add-ons deployment.'
            )
            _describe 'command' commands
            ;;
        'gcloud workstations')
            local -a commands
            commands=(
                'clusters:Manage Cloud Workstations cluster resources.'
                'configs:Manage Cloud Workstations configuration resources.'
                'create:Create a workstation.'
                'delete:Delete a workstation.'
                'describe:Describe a workstation.'
                'get-iam-policy:Get the IAM policy for a workstation.'
                'list:List workstations.'
                'list-usable:List usable workstations.'
                'set-iam-policy:Set the IAM policy for a workstation.'
                'ssh:SSH into a running workstation.'
                'start:Start a workstation.'
                'start-tcp-tunnel:Start a tunnel through which a local process can forward TCP traffic to the workstation.'
                'stop:Stop a workstation.'
            )
            _describe 'command' commands
            ;;
        'gcloud workstations clusters')
            local -a commands
            commands=(
                'create:Create a workstation cluster.'
                'delete:Delete a workstation cluster.'
                'describe:Describe a cluster.'
                'list:List workstation clusters.'
            )
            _describe 'command' commands
            ;;
        'gcloud workstations configs')
            local -a commands
            commands=(
                'create:Create a workstation configuration.'
                'delete:Delete a workstation configuration.'
                'describe:Describe a config.'
                'get-iam-policy:Get the IAM policy for a configuration..'
                'list:List workstation configurations.'
                'set-iam-policy:Set the IAM policy for a configuration.'
                'update:Updates a workstation configuration.'
            )
            _describe 'command' commands
            ;;
        *)
            ;;
    esac
}
